{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Cell.vue?d13c","webpack:///./src/components/Cell.vue","webpack:///./src/components/Cell.vue?ccd8","webpack:///./vendor/unicodetiles.ts/src/unicodetiles.ts","webpack:///./vendor/unicodetiles.ts/src/CanvasRenderer.ts","webpack:///./vendor/unicodetiles.ts/src/WebGLRenderer.ts","webpack:///./src/components/Scene.vue?de4a","webpack:///./src/components/Scene.vue","webpack:///./src/map.ts","webpack:///./src/components/Scene.vue?d22b","webpack:///./src/utils.ts","webpack:///./src/ai.ts","webpack:///./src/ai/patrol.ts","webpack:///./src/ai/explorer.ts","webpack:///./src/fov.ts","webpack:///./src/creatures/walker.ts","webpack:///./src/generator/dungeon.ts","webpack:///./src/components/App.vue?e903","webpack:///./src/generator/post.ts","webpack:///./src/components/App.vue","webpack:///./src/components/App.vue?ca48","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","Cell","vue_runtime_esm","extend","props","computed","[object Object]","this","player","cell","isWall","isDoor","display","__vue_styles__","context","components_Cell","component_normalizer","_vm","_h","$createElement","_self","_c","class","style","domProps","textContent","_s","symbol","on","click","$event","$emit","Tile","ch","g","b","br","bg","bb","grey","undefined","toString","other","CSSCLASS","NULLTILE","VERTEX_SHADER","FRAGMENT_SHADER","webGLRenderer","viewport","view","canvas","document","createElement","getContext","gl","elem","appendChild","charMap","charArray","defaultColors","attribs","position","buffer","itemSize","location","hint","STATIC_DRAW","texCoord","color","DYNAMIC_DRAW","bgColor","charIndex","offscreen","top","left","ctx","updateStyle","width","squarify","th","tw","w","height","h","vertexShader","compileShader","fragmentShader","program","createProgram","attachShader","linkProgram","deleteShader","getProgramParameter","LINK_STATUS","msg","getProgramInfoLog","deleteProgram","useProgram","getAttribLocation","initBuffers","resolutionLocation","getUniformLocation","uniform2f","tileCountsLocation","paddingLocation","texture","createTexture","bindTexture","TEXTURE_2D","cacheChars","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","activeTexture","TEXTURE0","setTimeout","buildTexture","render","pad","charCount","Math","floor","ceil","sqrt","fillStyle","fillRect","halfGap","gap","y","x","fillText","texImage2D","RGBA","UNSIGNED_BYTE","chars","build","changed","getComputedStyle","font","fontSize","lineHeight","fontFamily","textBaseline","measureText","parseInt","match","backgroundColor","clear","COLOR_BUFFER_BIT","tiles","newChars","defaultColor","defaultBackground","tile","k","kk","bindBuffer","ARRAY_BUFFER","bufferData","attrib","drawArrays","TRIANGLES","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","a","Float32Array","insertQuad","deleteBuffer","createBuffer","enableVertexAttribArray","vertexAttribPointer","FLOAT","arr","x1","y1","x2","y2","AT","DOOR","WALL","FLOOR","Scene_NULLTILE","Scene","term","eng","drawInterval","methods","scene","at","renderer","cx","cy","innerHTML","className","indexOf","Array","updateRenderer","getRendererString","str","len","unsafePut","$refs","tileFunc","refreshCache","cacheEnabled","transitionDuration","cachex","cachey","tileCache","tileCache2","func","effect","duration","transition","new_t","old_t","factor","halfw","halfh","abs","random","transitionTimer","Date","getTime","maskFunc","shaderFunc","mode","xx","yy","timeNow","transTime","ixx","jyy","lookupx","lookupy","tempCache","getTile","setMaskFunc","fov","seen","setShaderFunc","time","lighting","clearInterval","setInterval","drawScene","update","put","fovTile","visible","lightedTile","clone","degree","initViewport","watch","TileTypes","Scene_vue_styles_","components_Scene","ref","staticClass","map_Tile","key","kind","repository","Floor","Wall","Door","LevelMap","map","visibleThrough","passibleThrough","Rect","succ","String","fromCharCode","charCodeAt","rand","max","twoDimArray","dimX","dimY","field","min","list","leePath","walker","destination","stageMemory","pointsToVisit","pointsToCheck","step","wavePoints","forEach","point","tangible","buildRoad","x0","y0","chain","delta","find","dp","unshift","patrol_Patrol","graph","graphlib","addNode","lastNodeVisit","markNodeVisited","currentNodeID","path","moveToTarget","targetNodeID","pickUpNewTarget","withEdge","setNode","setEdge","pos","node","seenLastID","seenLastStep","neighbors","nodeID","buildNewPath","nextPoint","act","NEW_POINT_EVERY","explorer_Explorer","patrol","updatePatrol","shouldAddNode","ai","previousPos","Fov","startx","starty","radius","checkSolid","markVisible","doubleRadius","dx","dy","castLight","row","start","end","xy","yx","newStart","blocked","distance","deltaY","deltaX","currentX","round","currentY","leftSlope","rightSlope","doubleDistance","MemoryTile","walker_Memory","baseBlock","THICKNESS","MIN_SIZE","MAX_SIZE","ROOMS_COUNT","newRoomSpace","retrive","newCoridor","newWall","generate","dungeon","maxX","maxY","rooms","generateRoom","normalize","fuzzifyRooms","roads","buildRoads","dungeon_Room","pickedRooms","currentRoom","angle","PI","cos","sin","every","room","notCross","ndx","ndy","move","minX","minY","filter","points","pointWithin","connectedPoints","point1","point2","pow","currentPoint","pointToConnect","minDistance","currentDistance","dungeon_Road","stage","add","rect","super","lined","hx","hy","horizontalLine","vx","vy","verticallLine","App","pause","ts","now","components","visionMask","resetVisible","isSolid","calc","buildMap","level","addDoor","up","down","right","setTile","addDoors","walkerinterval","nextTick","e","console","error","background","opacity","generateMap","App_vue_styles_","components_App","attrs","id","_v","directives","rawName","expression","input","target","composing","el"],"mappings":"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","file":"main.d0f16c8d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".\" + {}[chunkId] + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([40,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport { Tile, TileTypes } from '../map'\n\nexport default Vue.extend({\n  props: [\"cell\", 'player'],\n  computed: {\n    style() {\n      if (this.player) {\n        return 'player'\n      } else if (this.cell.isWall()) {\n        return 'wall'\n      } else if (this.cell.isDoor()) {\n        return 'door'\n      }\n\n      return 'floor'\n    },\n    symbol():any {\n      if (this.player) {\n        return '俺'\n      } else if (this.cell.display == ' ') {\n        return '・'\n      } else if (this.cell.display == '+') {\n        return '戸'\n      } else if (this.cell.display == '#') {\n        return '＃'\n      } else {\n        return 'E'\n      }\n    }\n  }\n})\n","function injectStyle (context) {\n  require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!css-loader?{\\\"autoprefixer\\\":false,\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Cell.vue\")\n}\n/* script */\nexport * from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cell.vue\"\nimport __vue_script__ from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cell.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-31be5045\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=slm&optionsId=0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Cell.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{class:_vm.style,domProps:{\"textContent\":_vm._s(_vm.symbol)},on:{\"click\":function($event){_vm.$emit('setPosition')}}})}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","/// This file contains the main tile engine namespace.\n/// All coordinates are assumed to be integers - behaviour is undefined\n/// if you feed in floats (or anything other) as x and y (or similar) parameters.\n\n/// Class: Tile\n/// Represents a unicode character tile with various attributes.\nexport class Tile {\n  /// Constructor: Tile\n  /// Constructs a new Tile object.\n  ///\n  /// Parameters:\n  ///   ch - a character to display for this tile\n  ///   r - (optional) red foregorund color component 0-255\n  ///   g - (optional) green foreground color component 0-255\n  ///   b - (optional) blue foreground color component 0-255\n  ///   br - (optional) red background color component 0-255\n  ///   bg - (optional) green background color component 0-255\n  ///   bb - (optional) blue background color component 0-255\n  constructor(\n    public ch: string,\n    public r?: number,\n    public g?: number,\n    public b?: number,\n    public br?: number,\n    public bg?: number,\n    public bb?: number,\n  ) {}\n\n  /// Function: getChar\n  /// Returns the character of this tile.\n  public getChar() { return this.ch }\n\n  /// Function: setChar\n  /// Sets the character of this tile.\n  public setChar(ch: string) { this.ch = ch }\n\n  /// Function: setColor\n  /// Sets the foreground color of this tile.\n  public setColor(r: number, g: number, b: number) {\n    this.r = r\n    this.g = g\n    this.b = b\n  }\n\n  /// Function: setGrey\n  /// Sets the foreground color to the given shade (0-255) of grey.\n  public setGrey(grey: number) {\n    this.r = grey\n    this.g = grey\n    this.b = grey\n  }\n\n  /// Function: setBackground\n  /// Sets the background color of this tile.\n  public setBackground(r: number, g: number, b: number) {\n    this.br = r\n    this.bg = g\n    this.bb = b\n  }\n\n  /// Function: resetColor\n  /// Clears the color of this tile / assigns default color.\n  public resetColor() { this.r = this.g = this.b = undefined }\n\n  /// Function: resetBackground\n  /// Clears the background color of this tile.\n  public resetBackground() { this.br = this.bg = this.bb = undefined }\n\n  /// Function: getColorHex\n  /// Returns the hexadecimal representation of the color\n  public getColorHex() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return '#' + this.r.toString(16) + this.g.toString(16) + this.b.toString(16)\n    else return ''\n  }\n\n  /// Function: getBackgroundHex\n  /// Returns the hexadecimal representation of the background color\n  public getBackgroundHex() {\n    if (this.br !== undefined && this.bg !== undefined && this.bb !== undefined)\n      return '#' + this.br.toString(16) + this.bg.toString(16) + this.bb.toString(16)\n    else return ''\n  }\n\n  /// Function: getColorRGB\n  /// Returns the CSS rgb(r,g,b) representation of the color\n  public getColorRGB() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return `rgb(${this.r},${this.g},${this.b})`\n    else return ''\n  }\n\n  /// Function: getBackgroundRGB\n  /// Returns the CSS rgb(r,g,b) representation of the background color\n  public getBackgroundRGB() {\n    if (this.br !== undefined && this.bg !== undefined && this.bb !== undefined)\n      return `rgb(${this.br},${this.bg},${this.bb})`\n    else return ''\n  }\n\n  /// Function: getColorJSON\n  /// Returns the JSON representation of the color, i.e. object { r, g, b }\n  public getColorJSON() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return { 'r': this.r, 'g': this.g, 'b': this.b }\n    else return {}\n  }\n\n  /// Function: getBackgroundJSON\n  /// Returns the JSON representation of the background color, i.e. object { r, g, b }\n  public getBackgroundJSON() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return { 'r': this.br, 'g': this.bg, 'b': this.bb }\n    else return {}\n  }\n\n  /// Function: copy\n  /// Makes this tile identical to the one supplied. Custom properties are not copied.\n  public copy(other: Tile) {\n    this.ch = other.ch\n    this.r = other.r\n    this.g = other.g\n    this.b = other.b\n    this.br = other.br\n    this.bg = other.bg\n    this.bb = other.bb\n  }\n\n  /// Function: clone\n  /// Returns a new copy of this tile. Custom properties are not cloned.\n  public clone() {\n    return new Tile(this.ch, this.r, this.g, this.b, this.br, this.bg, this.bb)\n  }\n}\n\n/// Constants: Semi-internal constants for ut namespace\n/// VERSION  - Version of the library as string.\n/// NULLCHAR - Character used when none is specified otherwise.\n/// CSSCLASS - The CSS class name used for the tile engine element.\n/// NULLTILE - The tile used as placeholder for empty tile.\nexport const VERSION = '2.1'\nexport const NULLCHAR = ' '\nexport const CSSCLASS = 'unicodetiles'\nexport const NULLTILE = new Tile(NULLCHAR)\n\nexport interface Renderer {\n  updateStyle(s?: any): void\n\n    // if (this.renderer instanceof ut.WebGLRenderer) return ''\n    // if (this.renderer instanceof ut.CanvasRenderer) return 'canvas'\n    // if (this.renderer instanceof ut.DOMRenderer) return 'dom'\n  getRendererString(): string\n\n  clear(): void\n  render(): void\n}\n\n/// Class: Viewport\n/// The tile engine viewport / window. Takes care of initializing a proper renderer.\n\n/// Constructor: Viewport\n/// Constructs a new Viewport object.\n/// If you wish to display a player character at the center, you should use odd sizes.\n///\n/// Parameters:\n///   elem - the DOM element which shall be transformed into the tile engine\n///   w - (integer) width in tiles\n///   h - (integer) height in tiles\n///   renderer - (optional) choose rendering engine, see <Viewport.setRenderer>, defaults to 'auto'.\n///   squarify - (optional) set to true to force the tiles square; may break some box drawing\nexport class Viewport {\n  public cx: number\n  public cy: number\n\n  public buffer: Tile[][]\n  public renderer: Renderer\n\n  public defaultColor?: string\n  public defaultBackground?: string\n\n  constructor(\n    public elem: HTMLElement,\n    public w: number,\n    public h: number,\n    renderer: (viewport: Viewport) => Renderer,\n    public squarify: boolean = false,\n    ) {\n    this.cx = Math.floor(w / 2)\n    this.cy = Math.floor(h / 2)\n\n    this.elem.innerHTML = ''\n\n    // Add CSS class if not added already\n    if (elem.className.indexOf(CSSCLASS) === -1) {\n      if (elem.className.length === 0) {\n        elem.className = CSSCLASS\n      }\n      else elem.className += ' ' + CSSCLASS\n    }\n\n    // Create two 2-dimensional array to hold the viewport tiles\n    this.buffer = new Array(h)\n    for (let j = 0; j < h; ++j) {\n      this.buffer[j] = new Array(w)\n      for (let i = 0; i < w; ++i) {\n        this.buffer[j][i] = NULLTILE\n      }\n    }\n\n    this.renderer = renderer(this)\n  }\n\n  /// Function: updateStyle\n  /// If the style of the parent element is modified, this needs to be called.\n  private updateStyle(updateRenderer: boolean) {\n    const s = window.getComputedStyle(this.elem, null)\n\n    this.defaultColor = s.color || undefined // OMG\n    this.defaultBackground = s.backgroundColor || undefined\n    if (updateRenderer) {\n      this.renderer.updateStyle(s)\n    }\n  };\n\n  /// Function: getRendererString\n  /// Gets the currently used renderer.\n  ///\n  /// Returns:\n  ///   One of 'webgl', 'canvas', 'dom', ''.\n  public getRendererString(): string {\n    return this.renderer.getRendererString()\n  }\n\n  /// Function: put\n  /// Puts a tile to the given coordinates.\n  /// Checks bounds and does nothing if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   tile - the tile to put\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  public put(tile: Tile, x: number, y: number): void {\n    if (x < 0 || y < 0 || x >= this.w || y >= this.h) return\n    this.buffer[y][x] = tile\n  }\n\n  /// Function: unsafePut\n  /// Puts a tile to the given coordinates.\n  /// Does *not* check bounds throws exception if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   tile - the tile to put\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  public unsafePut(tile: Tile, x: number, y: number) {\n    this.buffer[y][x] = tile\n  }\n\n  /// Function: putString\n  /// Creates a row of tiles with the chars of the given string.\n  /// Wraps to next line if it can't fit the chars on one line.\n  ///\n  /// Parameters:\n  ///   str - (string) the string to put\n  ///   x - (integer) x coordinate (column)\n  ///   y - (integer) y coordinate (row)\n  ///   r - (optional) red foregorund color component 0-255\n  ///   g - (optional) green foreground color component 0-255\n  ///   b - (optional) blue foreground color component 0-255\n  ///   br - (optional) red background color component 0-255\n  ///   bg - (optional) green background color component 0-255\n  ///   bb - (optional) blue background color component 0-255\n  public putString(\n    str: string,\n    x: number,\n    y: number,\n    r?: number,\n    g?: number,\n    b?: number,\n    br?: number,\n    bg?: number,\n    bb?: number,\n  ) {\n    const len = str.length\n    if (x < 0 || y < 0) return\n\n    for (let i = 0; i < len; ++i) {\n      if (x >= this.w) {\n        x = 0\n        ++y\n      }\n      if (y >= this.h) return\n\n      const tile = new Tile(str[i], r, g, b, br, bg, bb)\n      this.unsafePut(tile, x, y)\n      ++x\n    }\n  }\n\n  /// Function: get\n  /// Returns the tile in the given coordinates.\n  /// Checks bounds and returns empty tile if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  ///\n  /// Returns:\n  ///   The tile.\n  public get(x: number, y: number): Tile {\n    if (x < 0 || y < 0 || x >= this.w || y >= this.h) return NULLTILE\n    return this.buffer[y][x]\n  }\n\n  /// Function: clear\n  /// Clears the viewport buffer by assigning empty tiles.\n  public clear() {\n    for (let j = 0; j < this.h; ++j) {\n      for (let i = 0; i < this.w; ++i) {\n        this.buffer[j][i] = NULLTILE\n      }\n    }\n    this.renderer.clear()\n  }\n\n  /// Function: render\n  /// Renders the buffer as html to the element specified at construction.\n  public render() {\n    this.renderer.render()\n  }\n}\n\n/// Class: Engine\n/// The tile engine itself.\nexport class Engine {\n  private refreshCache: boolean = true\n  private cacheEnabled: boolean = false\n  private transitionTimer?: number\n\n  private transitionDuration: number = 0\n  private transition?: (x: number, y: number, w: number, h: number, new_t: Tile, old_t: Tile, factor: number) => Tile\n  private maskFunc?: (x: number, y: number) => boolean\n  private shaderFunc?: (tile: Tile, x: number, y: number, timeNow: number) => Tile\n  private cachex: number = 0\n  private cachey: number = 0\n\n  private tileCache: Tile[][]\n  private tileCache2: Tile[][]\n\n  /// Constructor: Engine\n  /// Constructs a new Engine object. If width or height is given,\n  /// it will not attempt to fetch tiles outside the boundaries.\n  /// In that case 0,0 is assumed as the upper-left corner of the world,\n  /// but if no width/height is given also negative coords are valid.\n  ///\n  /// Parameters:\n  ///   vp - the <Viewport> instance to use as the viewport\n  ///   func - the function used for fetching tiles\n  ///   w - (integer) (optional) world width in tiles\n  ///   h - (integer) (optional) world height in tiles\n  constructor(\n    public viewport: Viewport,\n    public tileFunc: (x: number, y: number) => Tile,\n    public w: number,\n    public h: number,\n  ) {\n\n    this.tileCache = new Array(viewport.h)\n    this.tileCache2 = new Array(viewport.h)\n\n    for (let j = 0; j < viewport.h; ++j) {\n      this.tileCache[j] = new Array(viewport.w)\n      this.tileCache2[j] = new Array(viewport.w)\n    }\n  }\n\n  /// Function: setTileFunc\n  /// Sets the function to be called with coordinates to fetch each tile.\n  /// Optionally can apply a transition effect. Effects are:\n  /// 'boxin', 'boxout', 'circlein', 'circleout', 'random'\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (x, y) and returning an ut.Tile\n  ///   effect - (string) (optional) name of effect to use (see above for legal values)\n  ///   duration - (integer) (optional) how many milliseconds the transition effect should last\n  public setTileFunc(func: (x: number, y: number) => Tile, effect?: string, duration?: number) {\n    if (effect) {\n      this.transition = undefined\n      if (typeof effect === 'string') {\n        if (effect === 'boxin') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          if (Math.abs(x) < halfw * factor && Math.abs(y) < halfh * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'boxout') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          factor = 1.0 - factor\n          if (Math.abs(x) < halfw * factor && Math.abs(y) < halfh * factor) return old_t\n          else return new_t\n        }\n        else if (effect === 'circlein') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          if (x * x + y * y < (halfw * halfw + halfh * halfh) * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'circleout') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          factor = 1.0 - factor\n          if (x * x + y * y > (halfw * halfw + halfh * halfh) * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'random') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          if (Math.random() > factor) return old_t\n          else return new_t\n        }\n      }\n      if (this.transition) {\n        this.transitionTimer = (new Date()).getTime()\n        this.transitionDuration = duration || 500\n      }\n    }\n    this.tileFunc = func\n  }\n\n  /// Function: setMaskFunc\n  /// Sets the function to be called to fetch mask information according to coordinates.\n  /// If mask function returns false to some coordinates, then that tile is not rendered.\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (x, y) and returning a true if the tile is visible\n  public setMaskFunc(func: (x: number, y: number) => boolean) { this.maskFunc = func }\n\n  /// Function: setShaderFunc\n  /// Sets the function to be called to post-process / shade each visible tile.\n  /// Shader function is called even if caching is enabled, see <Engine.setCacheEnabled>.\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (tile, x, y) and returning an ut.Tile\n  public setShaderFunc(func: (tile: Tile, x: number, y: number) => Tile) { this.shaderFunc = func }\n\n  /// Function: setWorldSize\n  /// Tiles outside of the range x = [0,width[ y = [0,height[ are not fetched.\n  /// Set to undefined in order to make the world infinite.\n  ///\n  /// Parameters:\n  ///   width - (integer) new world width\n  ///   height - (integer) new world height\n  public setWorldSize(width: number, height: number) {\n    this.w = width\n    this.h = height\n  }\n\n  /// Function: setCacheEnabled\n  /// Enables or disables the usage of tile cache. This means that\n  /// extra measures are taken to not call the tile function unnecessarily.\n  /// This means that all animating must be done in a shader function,\n  /// see <Engine.setShaderFunc>.\n  /// Cache is off by default, but should be enabled if the tile function\n  /// does more computation than a simple array look-up.\n  ///\n  /// Parameters:\n  ///   mode - true to enable, false to disable\n  public setCacheEnabled(mode: boolean) {\n    this.cacheEnabled = mode\n    this.refreshCache = true\n  }\n\n  /// Function: update\n  /// Updates the viewport according to the given player coordinates.\n  /// The algorithm goes as follows:\n  ///   * Record the current time\n  ///   * For each viewport tile:\n  ///   * Check if the tile is visible by testing the mask\n  ///   * If not visible, continue to the next tile in the viewport\n  ///   * Otherwise, if cache is enabled try to fetch the tile from there\n  ///   * Otherwise, call the tile function and check for shader function presence\n  ///   * If there is shader function, apply it to the tile, passing the recorded time\n  ///   * Put the tile to viewport\n  ///\n  /// Parameters:\n  ///   x - (integer) viewport center x coordinate in the tile world\n  ///   y - (integer) viewport center y coordinate in the tile world\n  public update(x?: number, y?: number) {\n    x = x || 0\n    y = y || 0\n\n    // World coords of upper left corner of the viewport\n    const xx = x - this.viewport.cx\n    const yy = y - this.viewport.cy\n    const timeNow = (new Date()).getTime() // For passing to shaderFunc\n    let transTime\n    if (this.transition && this.transitionTimer) transTime = (timeNow - this.transitionTimer) / this.transitionDuration\n    if (transTime && transTime >= 1.0) this.transition = undefined\n\n    let tile: Tile\n\n    // For each tile in viewport...\n    for (let j = 0; j < this.viewport.h; ++j) {\n      for (let i = 0; i < this.viewport.w; ++i) {\n        const ixx = i + xx, jyy = j + yy\n        // Check horizontal bounds if requested\n        if (this.w && (ixx < 0 || ixx >= this.w)) {\n          tile = NULLTILE\n        // Check vertical bounds if requested\n        } else if (this.h && (jyy < 0 || jyy >= this.w)) {\n          tile = NULLTILE\n        // Check mask\n        } else if (this.maskFunc && !this.maskFunc(ixx, jyy)) {\n          tile = NULLTILE\n        // Check transition effect\n        } else if (this.transition && !this.refreshCache) {\n          tile = this.transition(\n            i,\n            j,\n            this.viewport.w,\n            this.viewport.h,\n            this.tileFunc(ixx, jyy),\n            this.tileCache[j][i],\n            transTime || 0\n          )\n        // Check cache\n        } else if (this.cacheEnabled && !this.refreshCache) {\n          const lookupx = ixx - this.cachex\n          const lookupy = jyy - this.cachey\n          if (lookupx >= 0 && lookupx < this.viewport.w && lookupy >= 0 && lookupy < this.viewport.h) {\n            tile = this.tileCache[lookupy][lookupx]\n            if (tile === NULLTILE) tile = this.tileFunc(ixx, jyy)\n          } else // Cache miss\n            tile = this.tileFunc(ixx, jyy)\n        // If all else fails, call tileFunc\n        } else tile = this.tileFunc(ixx, jyy)\n        // Save the tile to cache (always due to transition effects)\n        this.tileCache2[j][i] = tile\n        // Apply shader function\n        if (this.shaderFunc && tile !== NULLTILE)\n          tile = this.shaderFunc(tile, ixx, jyy, timeNow)\n        // Put shaded tile to viewport\n        this.viewport.unsafePut(tile, i, j)\n      }\n    }\n    // Cache stuff is enabled always, because it is also required by transitions\n    // Save the new cache origin\n    this.cachex = xx\n    this.cachey = yy\n\n    // Swap cache buffers\n    const tempCache = this.tileCache\n    this.tileCache = this.tileCache2\n    this.tileCache2 = tempCache\n    this.refreshCache = false\n  }\n}\n","import { Renderer, Viewport } from './unicodetiles'\n\n/// Class: CanvasRenderer\n/// Renders the <Viewport> into an HTML5 <canvas> element.\n///\n/// *Note:* This is an internal class used by <Viewport>\nclass CanvasRenderer implements Renderer {\n  private canvas: HTMLCanvasElement\n  private offscreen: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n  private ctx2: CanvasRenderingContext2D\n\n  private th?: number\n  private tw?: number\n  private gap?: number\n\n  constructor(private view: Viewport) {\n    this.canvas = document.createElement('canvas')\n    if (!this.canvas.getContext) throw('Canvas not supported')\n    this.ctx2 = this.canvas.getContext('2d')\n    if (!this.ctx2 || !this.ctx2.fillText) throw('Canvas not supported')\n    view.elem.appendChild(this.canvas)\n\n    // Create an offscreen canvas for rendering\n    this.offscreen = document.createElement('canvas')\n    this.ctx = this.offscreen.getContext('2d')\n    this.updateStyle()\n    this.canvas.width = (view.squarify ? this.th : this.tw) * view.w\n    this.canvas.height = this.th * view.h\n    this.offscreen.width = this.canvas.width\n    this.offscreen.height = this.canvas.height\n    // Doing this again since setting canvas w/h resets the state\n    this.updateStyle()\n  }\n\n  public getRendererString(): string { return 'canvas' }\n\n  public updateStyle(s?: any) {\n    s = s || window.getComputedStyle(this.view.elem, null)\n    this.ctx.font = `${s.fontSize}/${s.lineHeight} ${s.fontFamily}`\n    this.ctx.textBaseline = 'middle'\n    this.tw = this.ctx.measureText('M').width\n    this.th = parseInt(s.fontSize, 10)\n    this.gap = this.view.squarify ? (this.th - this.tw) : 0\n    if (this.view.squarify) this.tw = this.th\n  }\n\n  public clear() { /* No op */ }\n\n  public render() {\n    let tile, ch, fg, bg, x, y\n    const view = this.view,\n          buffer = this.view.buffer,\n          w = view.w, h = view.h,\n          hth = 0.5 * this.th,\n          hgap = 0.5 * this.gap // Squarification\n\n    // Clearing with one big rect is much faster than with individual char rects\n    this.ctx.fillStyle = view.defaultBackground\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    y = hth // half because textBaseline is middle\n    for (let j = 0; j < h; ++j) {\n      x = 0\n      for (let i = 0; i < w; ++i) {\n        tile = buffer[j][i]\n        ch = tile.ch\n        fg = tile.getColorRGB()\n        bg = tile.getBackgroundRGB()\n        // Only render background if the color is non-default\n        if (bg.length && bg !== view.defaultBackground) {\n          this.ctx.fillStyle = bg\n          this.ctx.fillRect(x, y - hth, this.tw, this.th)\n        }\n        // Do not attempt to render empty char\n        if (ch.length) {\n          if (!fg.length) fg = view.defaultColor\n          this.ctx.fillStyle = fg\n          this.ctx.fillText(ch, x + hgap, y)\n        }\n        x += this.tw\n      }\n      y += this.th\n    }\n    this.ctx2.drawImage(this.offscreen, 0, 0)\n  }\n}\n\nexport const canvasRenderer = function(viewport: Viewport): Renderer {\n  return new CanvasRenderer(viewport)\n}\n","import { Renderer, Viewport } from './unicodetiles'\n\nconst VERTEX_SHADER = `\nattribute vec2 position;\nattribute vec2 texCoord;\nattribute vec3 color;\nattribute vec3 bgColor;\nattribute float charIndex;\nuniform vec2 uResolution;\nuniform vec2 uTileCounts;\nuniform vec2 uPadding;\nvarying vec2 vTexCoord;\nvarying vec3 vColor;\nvarying vec3 vBgColor;\n\nvoid main() {\n  vec2 tileCoords = floor(vec2(mod(charIndex, uTileCounts.x), charIndex / uTileCounts.x));\n  vTexCoord = (texCoord + tileCoords) / uTileCounts;\n  vTexCoord += (0.5 - texCoord) * uPadding;\n  vColor = color;\n  vBgColor = bgColor;\n  vec2 pos = position / uResolution * 2.0 - 1.0;\n  gl_Position = vec4(pos.x, -pos.y, 0.0, 1.0);\n}\n`\n\nconst FRAGMENT_SHADER = `\nprecision mediump float;\nuniform sampler2D uFont;\nvarying vec2 vTexCoord;\nvarying vec3 vColor;\nvarying vec3 vBgColor;\n\nvoid main() {\n  vec4 color = texture2D(uFont, vTexCoord);\n  color.rgb = mix(vBgColor, vColor, color.rgb);\n  gl_FragColor = color;\n}\n`\n\n/// Class: WebGLRenderer\n/// Renders the <Viewport> with WebGL.\n/// Given decent GPU drivers and browser support, this is the fastest renderer.\n///\n/// *Note:* This is an internal class used by <Viewport>\nclass WebGLRenderer implements Renderer {\n  private canvas: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n  private offscreen: HTMLCanvasElement\n\n  public gl: WebGLRenderingContext\n\n  private charMap: any\n  private charArray: any\n  private defaultColors: any\n  private attribs: any\n\n  private th?: number\n  private tw?: number\n  private gap?: number\n  private pad?: number\n\n  private tileCountsLocation: WebGLUniformLocation\n  private paddingLocation: WebGLUniformLocation\n\n  constructor(private view: Viewport) {\n    this.view = view\n    this.canvas = document.createElement('canvas')\n    // Try to fetch the context\n    if (!this.canvas.getContext) throw('Canvas not supported')\n    this.gl = this.canvas.getContext('experimental-webgl')\n    if (!this.gl) throw('WebGL not supported')\n    view.elem.appendChild(this.canvas)\n\n    this.charMap = {}\n    this.charArray = []\n    this.defaultColors = { r: 1.0, g: 1.0, b: 1.0, br: 0.0, bg: 0.0, bb: 0.0 }\n\n    this.attribs = {\n      position:  { buffer: null, data: null, itemSize: 2, location: null, hint: this.gl.STATIC_DRAW },\n      texCoord:  { buffer: null, data: null, itemSize: 2, location: null, hint: this.gl.STATIC_DRAW },\n      color:     { buffer: null, data: null, itemSize: 3, location: null, hint: this.gl.DYNAMIC_DRAW },\n      bgColor:   { buffer: null, data: null, itemSize: 3, location: null, hint: this.gl.DYNAMIC_DRAW },\n      charIndex: { buffer: null, data: null, itemSize: 1, location: null, hint: this.gl.DYNAMIC_DRAW }\n    }\n\n\n    // Create an offscreen canvas for rendering text to texture\n    if (!this.offscreen)\n      this.offscreen = document.createElement('canvas')\n    this.offscreen.style.position = 'absolute'\n    this.offscreen.style.top = '0px'\n    this.offscreen.style.left = '0px'\n    this.ctx = this.offscreen.getContext('2d')\n    if (!this.ctx) throw 'Failed to acquire offscreen canvas drawing context'\n    // WebGL drawing canvas\n    this.updateStyle()\n    this.canvas.width = (view.squarify ? this.th : this.tw) * view.w\n    this.canvas.height = this.th * view.h\n    this.offscreen.width = 0\n    this.offscreen.height = 0\n    // Doing this again since setting canvas w/h resets the state\n    this.updateStyle()\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height)\n\n    let vertexShader = this.compileShader(this.gl.VERTEX_SHADER, VERTEX_SHADER)\n    let fragmentShader = this.compileShader(this.gl.FRAGMENT_SHADER, FRAGMENT_SHADER)\n    let program = this.gl.createProgram()\n    this.gl.attachShader(program, vertexShader)\n    this.gl.attachShader(program, fragmentShader)\n    this.gl.linkProgram(program)\n    this.gl.deleteShader(vertexShader)\n    this.gl.deleteShader(fragmentShader)\n    const ok = this.gl.getProgramParameter(program, this.gl.LINK_STATUS)\n    if (!ok) {\n      const msg = `Error linking program: ${this.gl.getProgramInfoLog(program)}`\n      this.gl.deleteProgram(program)\n      throw msg\n    }\n    this.gl.useProgram(program)\n\n    // Get attribute locations\n    this.attribs.position.location  = this.gl.getAttribLocation(program, 'position')\n    this.attribs.texCoord.location  = this.gl.getAttribLocation(program, 'texCoord')\n    this.attribs.color.location     = this.gl.getAttribLocation(program, 'color')\n    this.attribs.bgColor.location   = this.gl.getAttribLocation(program, 'bgColor')\n    this.attribs.charIndex.location = this.gl.getAttribLocation(program, 'charIndex')\n\n    // Setup buffers and uniforms\n    this.initBuffers()\n    let resolutionLocation = this.gl.getUniformLocation(program, 'uResolution')\n    this.gl.uniform2f(resolutionLocation, this.canvas.width, this.canvas.height)\n    this.tileCountsLocation = this.gl.getUniformLocation(program, 'uTileCounts')\n    this.gl.uniform2f(this.tileCountsLocation, this.view.w, this.view.h)\n    this.paddingLocation = this.gl.getUniformLocation(program, 'uPadding')\n    this.gl.uniform2f(this.paddingLocation, 0.0, 0.0)\n\n    // Setup texture\n    // view.elem.appendChild(this.offscreen) // Debug offscreen\n    let texture = this.gl.createTexture()\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture)\n    this.cacheChars(` !\\\"#$%&'()*+,-./0123456789:<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~`)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.activeTexture(this.gl.TEXTURE0)\n\n    setTimeout(() => {\n      this.updateStyle()\n      this.buildTexture()\n      this.render()\n    }, 100)\n  }\n\n  public getRendererString(): string { return 'webgl' }\n\n  private buildTexture() {\n    let w = this.offscreen.width / (this.tw + this.pad),\n          h = this.offscreen.height / (this.th + this.pad)\n    // Check if need to resize the canvas\n    const charCount = this.charArray.length\n    if (charCount > Math.floor(w) * Math.floor(h)) {\n      w = Math.ceil(Math.sqrt(charCount))\n      h = w + 2 // Allocate some extra space too\n      this.offscreen.width = w * (this.tw + this.pad)\n      this.offscreen.height = h * (this.th + this.pad)\n      this.updateStyle()\n      this.gl.uniform2f(this.tileCountsLocation, w, h)\n    }\n    this.gl.uniform2f(this.paddingLocation, this.pad / this.offscreen.width, this.pad / this.offscreen.height)\n\n    let c = 0, ch: string\n    this.ctx.fillStyle = '#000000'\n    this.ctx.fillRect(0, 0, this.offscreen.width, this.offscreen.height)\n    this.ctx.fillStyle = '#ffffff'\n\n    const halfGap = 0.5 * this.gap // Squarification\n    const tw = this.tw + this.pad,\n          th = this.th + this.pad\n    let y = 0.5 * th // Half because textBaseline is middle\n    for (let j = 0; j < h; ++j) {\n      let x = this.pad * 0.5\n      for (let i = 0; i < w; ++i, ++c) {\n        ch = this.charArray[c]\n        if (ch === undefined) break\n        this.ctx.fillText(ch, x + halfGap, y)\n        x += tw\n      }\n      if (!ch) break\n      y += th\n    }\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.offscreen)\n  }\n\n  private cacheChars(chars: string, build: boolean = true) {\n    if (!this.gl) return // Nothing to do if not using WebGL renderer\n    let changed = false\n    for (let i = 0; i < chars.length; ++i) {\n      if (!this.charMap[chars[i]]) {\n        changed = true\n        this.charArray.push(chars[i])\n        this.charMap[chars[i]] = this.charArray.length - 1\n      }\n    }\n\n    if (changed && build) this.buildTexture()\n  }\n\n  public updateStyle(s?: any) {\n    s = s || window.getComputedStyle(this.view.elem, null)\n    this.ctx.font = s.fontSize + '/' + s.lineHeight + ' ' + s.fontFamily\n    this.ctx.textBaseline = 'middle'\n    this.ctx.fillStyle = '#ffffff'\n    this.tw = this.ctx.measureText('M').width\n    this.th = parseInt(s.fontSize, 10)\n    this.gap = this.view.squarify ? (this.th - this.tw) : 0\n    if (this.view.squarify) this.tw = this.th\n    this.pad = Math.ceil(this.th * 0.2) * 2.0 // Must be even number\n\n    const color = s.color.match(/\\d+/g)\n    const bgColor = s.backgroundColor.match(/\\d+/g)\n    this.defaultColors.r = parseInt(color[0], 10) / 255\n    this.defaultColors.g = parseInt(color[1], 10) / 255\n    this.defaultColors.b = parseInt(color[2], 10) / 255\n    this.defaultColors.br = parseInt(bgColor[0], 10) / 255\n    this.defaultColors.bg = parseInt(bgColor[1], 10) / 255\n    this.defaultColors.bb = parseInt(bgColor[2], 10) / 255\n  }\n\n  public clear() { /* No op */ }\n\n  public render() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n    const w = this.view.w,\n      h = this.view.h\n\n    // Create new tile data\n    let tiles = this.view.buffer\n    let defaultColor = this.view.defaultColor\n    let defaultBgColor = this.view.defaultBackground\n    let newChars = false\n\n    for (let j = 0; j < h; ++j) {\n      for (let i = 0; i < w; ++i) {\n        const tile = tiles[j][i]\n        let ch = this.charMap[tile.ch]\n        if (ch === undefined) { // Auto-cache new characters\n          this.cacheChars(tile.ch, false)\n          newChars = true\n          ch = this.charMap[tile.ch]\n        }\n        const k = this.attribs.color.itemSize * 6 * (j * w + i)\n        const kk = this.attribs.charIndex.itemSize * 6 * (j * w + i)\n        const r = tile.r === undefined ? this.defaultColors.r : tile.r / 255\n        const g = tile.g === undefined ? this.defaultColors.g : tile.g / 255\n        const b = tile.b === undefined ? this.defaultColors.b : tile.b / 255\n        const br = tile.br === undefined ? this.defaultColors.br : tile.br / 255\n        const bg = tile.bg === undefined ? this.defaultColors.bg : tile.bg / 255\n        const bb = tile.bb === undefined ? this.defaultColors.bb : tile.bb / 255\n        for (let m = 0; m < 6; ++m) {\n          const n = k + m * this.attribs.color.itemSize\n          this.attribs.color.data[n + 0] = r\n          this.attribs.color.data[n + 1] = g\n          this.attribs.color.data[n + 2] = b\n          this.attribs.bgColor.data[n + 0] = br\n          this.attribs.bgColor.data[n + 1] = bg\n          this.attribs.bgColor.data[n + 2] = bb\n          this.attribs.charIndex.data[kk + m] = ch\n        }\n      }\n    }\n\n    // Upload\n    if (newChars) this.buildTexture()\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.color.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.color.data, this.attribs.color.hint)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.bgColor.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.bgColor.data, this.attribs.bgColor.hint)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.charIndex.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.charIndex.data, this.attribs.charIndex.hint)\n\n    const attrib = this.attribs.position\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, attrib.data.length / attrib.itemSize)\n  }\n\n  // Setup GLSL\n  private compileShader(type: number, source: string) {\n    const shader = this.gl.createShader(type)\n    this.gl.shaderSource(shader, source)\n    this.gl.compileShader(shader)\n    const ok = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)\n    if (!ok) {\n      const msg = 'Error compiling shader: ' + this.gl.getShaderInfoLog(shader)\n      this.gl.deleteShader(shader)\n      throw msg\n    }\n    return shader\n  }\n\n  private initBuffers() {\n    let a, attrib, attribs = this.attribs\n\n    const w = this.view.w,\n          h = this.view.h\n\n    // Allocate data arrays\n    for (a in this.attribs) {\n      attrib = attribs[a]\n      attrib.data = new Float32Array(attrib.itemSize * 6 * w * h)\n    }\n    // Generate static data\n    for (let j = 0; j < h; ++j) {\n      for (let i = 0; i < w; ++i) {\n        // Position & texCoords\n        const k = attribs.position.itemSize * 6 * (j * w + i)\n        this.insertQuad(attribs.position.data, k, i * this.tw, j * this.th, this.tw, this.th)\n        this.insertQuad(attribs.texCoord.data, k, 0.0, 0.0, 1.0, 1.0)\n      }\n    }\n    // Upload\n    for (a in this.attribs) {\n      attrib = attribs[a]\n      if (attrib.buffer) this.gl.deleteBuffer(attrib.buffer)\n      attrib.buffer = this.gl.createBuffer()\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attrib.buffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, attrib.data, attrib.hint)\n      this.gl.enableVertexAttribArray(attrib.location)\n      this.gl.vertexAttribPointer(attrib.location, attrib.itemSize, this.gl.FLOAT, false, 0, 0)\n    }\n  }\n\n  private insertQuad(arr: number[], i: number, x: number, y: number, w: number, h: number) {\n    const x1 = x,\n          y1 = y,\n          x2 = x + w,\n          y2 = y + h\n\n    arr[  i] = x1\n    arr[++i] = y1\n    arr[++i] = x2\n    arr[++i] = y1\n    arr[++i] = x1\n    arr[++i] = y2\n    arr[++i] = x1\n    arr[++i] = y2\n    arr[++i] = x2\n    arr[++i] = y1\n    arr[++i] = x2\n    arr[++i] = y2\n  }\n}\n\nexport const webGLRenderer = function(viewport: Viewport): Renderer {\n  return new WebGLRenderer(viewport)\n}\n","\n\n\n\n\nimport Vue from 'vue'\nimport {\n  domRenderer,\n  canvasRenderer,\n  webGLRenderer,\n  Engine,\n  Viewport,\n  Tile,\n} from '../../vendor/unicodetiles.ts/src/index'\n\nconst AT = new Tile('俺', 255, 255, 255)\nconst DOOR = new Tile('戸', 255, 255, 255)\nconst WALL = new Tile('＃', 200, 200, 200)\nconst FLOOR = new Tile('・', 250, 250, 250)\nconst NULLTILE = new Tile('　', 0, 0, 0)\n\nexport default Vue.extend({\n  props: ['scene', 'player', 'fov'],\n  data() {\n    return {\n      term: null,\n      eng: null,\n      drawInterval: null\n    }\n  },\n  methods: {\n    getTile(x, y) {\n      switch (this.scene.at(x, y).display) {\n      case '#':\n        return WALL\n      case '+':\n        return DOOR\n      case ' ':\n        return FLOOR\n      default:\n        return NULLTILE\n      }\n    },\n    initViewport() {\n      this.term = new Viewport(\n        this.$refs.scene,\n        this.scene.width,\n        this.scene.height,\n        webGLRenderer,\n        true,\n      )\n\n      this.eng = new Engine(\n        this.term,\n        (x, y) => this.getTile(x, y),\n        this.scene.width,\n        this.scene.height\n      )\n\n      this.eng.setMaskFunc((x, y) => {\n        return this.fov[y][x].seen\n      });\n\n      this.eng.setShaderFunc((tile, x, y, time) => {\n        return this.lighting(tile, x, y, time)\n      })\n\n      clearInterval(this.drawInterval)\n      this.drawInterval = setInterval(() => { this.drawScene() }, 50)\n    },\n    drawScene() {\n      this.eng.update(this.player.x, this.player.y);\n      this.term.put(AT, this.term.cx, this.term.cy)\n      this.term.render();\n    },\n    lighting(tile, x, y, time) {\n      const fovTile = this.fov[y][x]\n      if (!fovTile.visible) {\n        return tile\n      }\n\n      // TODO: extract to a class\n\n      let lightedTile = tile.clone()\n      if (tile !== DOOR) {\n        lightedTile.r = 255 * fovTile.degree\n        lightedTile.g = 165 * fovTile.degree\n        lightedTile.b = 0 * fovTile.degree\n      } else {\n        lightedTile.r = 0\n        lightedTile.g = 0\n        lightedTile.b = 0\n      }\n\n      if (tile !== FLOOR) {\n        lightedTile.br = 255 * fovTile.degree\n        lightedTile.bg = 165 * fovTile.degree\n        lightedTile.bb = 0 * fovTile.degree\n      }\n\n      return lightedTile\n    }\n  },\n  mounted() {\n    this.initViewport()\n  },\n  watch: {\n    scene() {\n      this.initViewport()\n    }\n  }\n})\n","function injectStyle (context) {\n  require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!css-loader?{\\\"autoprefixer\\\":false,\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Scene.vue\")\n}\n/* script */\nexport * from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scene.vue\"\nimport __vue_script__ from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scene.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-eb7f7984\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=slm&optionsId=0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Scene.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","export enum TileTypes {\n  Wall,\n  Door,\n  Floor,\n}\n\nexport class Tile {\n  private static repository: { [key: string]: Tile } = {}\n\n  public static retrive(key: string): Tile {\n    let tile = this.repository[key]\n\n    switch (key) {\n      case 'R':\n        return new Tile('R', ' ', TileTypes.Floor)\n      case 'C':\n        return new Tile('C', ' ', TileTypes.Floor)\n      case 'W':\n        return new Tile('W', '#', TileTypes.Wall)\n      case 'D':\n        return new Tile('D', '+', TileTypes.Door)\n      default:\n        throw `Tile '${key}' is not registered!`\n    }\n  }\n\n  private constructor(public key: string, public display: string, private kind: TileTypes) {\n  }\n\n  public isDoor(): boolean {\n    return this.kind === TileTypes.Door\n  }\n\n  public isWall(): boolean {\n    return this.kind === TileTypes.Wall\n  }\n\n  public visibleThrough(): boolean {\n    return this.kind === TileTypes.Floor\n  }\n\n  public passibleThrough(): boolean {\n    return this.kind !== TileTypes.Wall\n  }\n}\n\nexport class LevelMap {\n  public readonly width: number\n  public readonly height: number\n\n  constructor(public map: Tile[][]) {\n    this.width  = map[0].length\n    this.height = map.length\n  }\n\n  public visibleThrough(x: number, y: number): boolean {\n    return this.map[y][x].visibleThrough()\n  }\n\n  public passibleThrough(x: number, y: number): boolean {\n    return this.map[y][x].passibleThrough()\n  }\n\n  public at(x, y): Tile {\n    return this.map[y][x]\n  }\n\n  public setTile(x, y, tile: Tile): void {\n    this.map[y][x] = tile\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"scene\",staticClass:\"unicodetiles\"})}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","export class Rect {\n  x: number\n  y: number\n  w: number\n  h: number\n\n  constructor( x: number, y: number, w: number, h: number ) {\n    // TODO: Validate?\n    this.x = x\n    this.y = y\n    this.w = w\n    this.h = h\n  }\n\n  move( x: number, y: number ): void {\n    this.x += x\n    this.y += y\n  }\n}\n\nexport const succ = function ( c: string ): string {\n  return String.fromCharCode( c.charCodeAt( 0 ) + 1 )\n}\n\nexport const rand = function ( max: number ): number {\n  return Math.floor( Math.random() * max )\n}\n\n/* tslint:disable no-any */\nexport const twoDimArray = function ( dimX: number, dimY: number,\n                                      value: ( x: number, y: number ) => any ): Array<Array<any>> {\n  let field = Array( dimX )\n\n  let i = 0\n  while ( i < dimX ) {\n    field[i] = new Array(dimY)\n    let j = 0\n    while ( j < dimY ) {\n      field[i][j] = value( i, j )\n      j++\n    }\n    i++\n  }\n\n  return field\n}\n\nexport const max = function( list: Array< number > ): number {\n  return Math.max.apply( Math, list )\n}\n\nexport const min = function( list: Array< number > ): number {\n  return Math.min.apply( Math, list )\n}\n\nexport interface Point {\n  x: number,\n  y: number\n}\n","import { Point, twoDimArray } from './utils'\nimport { Walker } from './creatures/walker'\n\ninterface AI {\n  act( walker: Walker ): void\n}\n\nclass TileRecall {\n  seen: boolean\n  tangible: boolean\n  visible: boolean\n  updated: boolean\n\n  constructor() {\n    this.seen = false\n    this.tangible = false\n    this.visible = false\n    this.updated = false\n  }\n}\n\nconst leePath = function ( walker: Walker,\n                           destination: ( x: number, y: number ) => boolean\n                         ): Array< Point > {\n  const map = walker.stageMemory\n\n  let stageMemory: Array< Array< number > > = twoDimArray( map.height, map.width, () => { return undefined } )\n  let pointsToVisit: Array< Point > = []\n  let pointsToCheck: Array< Point > = [ { x: walker.x, y: walker.y } ]\n\n  let step = 0\n  while ( pointsToCheck.length && !pointsToVisit.length ) {\n    // console.log(pointsToCheck )\n    let wavePoints: Array< Point > = []\n\n    pointsToCheck.forEach( ( point: Point ) => {\n      // TODO: Compare, current value might be lower\n      if ( map.at(point.x ,  point.y).tangible ||\n          stageMemory[ point.x ][ point.y ] !== undefined ) {\n        return\n      }\n\n      stageMemory[ point.x ][ point.y ] = step\n      if ( destination( point.x, point.y ) ) {\n        pointsToVisit.push( point )\n      } else {\n        wavePoints.push( { x: point.x - 1, y: point.y })\n        wavePoints.push( { x: point.x + 1, y: point.y })\n        wavePoints.push( { x: point.x, y: point.y - 1 })\n        wavePoints.push( { x: point.x, y: point.y + 1 })\n        wavePoints.push( { x: point.x - 1, y: point.y - 1 })\n        wavePoints.push( { x: point.x + 1, y: point.y - 1 })\n        wavePoints.push( { x: point.x + 1, y: point.y + 1 })\n        wavePoints.push( { x: point.x - 1, y: point.y + 1 })\n      }\n    })\n    step++\n\n    pointsToCheck = wavePoints\n  }\n\n  if ( pointsToVisit.length ) {\n    pointsToVisit[ Math.floor( Math.random() * pointsToVisit.length ) ]\n    return buildRoad( pointsToVisit[ 0 ], stageMemory )\n  } else {\n    return []\n  }\n}\n\n\nconst buildRoad = function ( point: Point, stageMemory: Array< Array< number > > ): Array< Point > {\n  let x0 = point.x, y0 = point.y\n  let chain = [ { x: x0, y: y0 } ]\n\n  let delta: Point = undefined\n\n  while ( stageMemory[ x0 ][ y0 ] !== 0 ) {\n\n    delta = [\n      { x: -1, y: 0 }, { x: 1, y: 0 }, { x: 0, y: -1 }, { x: 0, y: 1 },\n      { x: -1, y: -1 }, { x: 1, y: 1 }, { x: 1, y: -1 }, { x: -1, y: 1 }\n    ].find( ( dp ): boolean => {\n\n      return stageMemory[ x0 + dp.x ] &&\n        ( stageMemory[ x0 + dp.x ][ y0 + dp.y ] === stageMemory[ x0 ][ y0 ] - 1 )\n    })\n\n    x0 += delta.x\n    y0 += delta.y\n\n    chain.unshift( { x: x0, y: y0 } )\n  }\n\n  return chain\n}\n\nexport { AI, TileRecall, Walker, leePath }\n","import { Point, rand, succ } from '../utils'\nimport { AI, TileRecall, Walker, leePath } from '../ai'\n\nimport * as graphlib from 'graphlib'\n\ntype NodeID = string\n\nclass Patrol implements AI {\n  private i: NodeID\n  private step: number\n  private graph: graphlib.Graph\n  private lastNodeVisit: { [ key: string ]: number }\n  private currentNodeID: NodeID\n  private targetNodeID: NodeID\n  private path: Array< Point >\n\n  constructor( x: number, y: number ) {\n    this.i = 'a'\n\n    this.step = 0\n    this.graph = new graphlib.Graph()\n\n    this.addNode( x, y, false )\n    this.lastNodeVisit = {}\n\n    this.markNodeVisited( this.currentNodeID )\n    this.path = []\n  }\n\n  act( walker: Walker ): void {\n    if ( this.path.length ) {\n      this.moveToTarget( walker )\n    } else {\n      if ( this.targetNodeID ) {\n        this.markNodeVisited( this.targetNodeID )\n        this.currentNodeID = this.targetNodeID\n      }\n\n      this.pickUpNewTarget( walker )\n      this.moveToTarget( walker )\n    }\n    this.step += 1\n  }\n\n  // TODO: If close enough to another node, use it instead.\n  addNode( x: number, y: number, withEdge: boolean = true ): void {\n    this.graph.setNode( this.i, { x: x, y: y } )\n    if ( withEdge ) {\n      this.graph.setEdge( this.currentNodeID, this.i )\n    }\n    this.currentNodeID = this.i\n    this.i = succ( this.i )\n  }\n\n  private buildNewPath( walker: Walker ): void {\n    const pos: Point = this.graph.node( this.targetNodeID )\n\n    this.path = leePath( walker, ( x, y ) => {\n      return ( pos.x === x ) && ( pos.y === y )\n    })\n  }\n\n  private pickUpNewTarget( walker: Walker ): void {\n    let seenLastID: NodeID = this.currentNodeID\n    let seenLastStep: number = this.lastNodeVisit[ seenLastID ]\n\n    this.graph.neighbors( this.currentNodeID ).forEach( ( nodeID: NodeID ) => {\n      if ( seenLastStep > ( this.lastNodeVisit[ nodeID ] || 0 ) )\n        seenLastID = nodeID\n        seenLastStep = this.lastNodeVisit[ seenLastID ]\n      }\n    )\n\n    this.targetNodeID = seenLastID\n    this.buildNewPath( walker )\n  }\n\n  private moveToTarget( walker: Walker ): void {\n    const nextPoint: Point = this.path.shift()\n    if ( walker.stageMemory.at(nextPoint.x,  nextPoint.y).tangible ) {\n      this.path = []\n      this.act( walker )\n    } else {\n      walker.x = nextPoint.x\n      walker.y = nextPoint.y\n    }\n  }\n\n  private markNodeVisited( nodeID: NodeID ): void {\n    this.lastNodeVisit[ nodeID ] = this.step\n  }\n}\n\nexport { Patrol }\n","import { Point, twoDimArray } from '../utils'\nimport { AI, TileRecall, Walker, leePath } from '../ai'\nimport { Patrol } from './patrol'\n\n// import { Logger } from \"../logger\"\n\nconst NEW_POINT_EVERY: number = 10\n\nclass Explorer implements AI {\n  path: Array< Point >\n  private step: number\n\n  constructor( public patrol: Patrol = undefined ) {\n    this.path = []\n    this.step = NEW_POINT_EVERY\n  }\n\n  act( walker: Walker ): void {\n    if (this.step === NEW_POINT_EVERY ) {\n      this.updatePatrol( walker )\n    }\n\n    if ( !this.path.length ) {\n      this.buildNewPath( walker )\n      if ( this.path.length ) {\n        this.act( walker )\n      } else {\n        // Logger.info( \"I'm done, time to patrol\" )\n        // console.log( \"I'm done, time to patrol\" )\n        walker.ai = this.patrol\n      }\n    } else {\n      const nextPoint: Point = this.path.shift()\n      if ( walker.stageMemory.at(nextPoint.x, nextPoint.y).tangible ) {\n        this.path = []\n        this.act( walker )\n      } else {\n        walker.x = nextPoint.x\n        walker.y = nextPoint.y\n\n        if (this.shouldAddNode(walker)) {\n          this.updatePatrol(walker)\n        }\n      }\n    }\n  }\n\n  private buildNewPath( walker: Walker ): void {\n    this.path = leePath( walker, ( x, y ) => {\n      return !walker.stageMemory.at(x, y).seen\n    })\n  }\n\n  private updatePatrol( walker: Walker ): void {\n    this.step = 0\n    if ( this.patrol === undefined ) {\n      this.patrol = new Patrol( walker.x, walker.y )\n    } else {\n      this.patrol.addNode( walker.x, walker.y )\n    }\n\n    this.step++\n  }\n\n  private shouldAddNode(walker: Walker): boolean {\n    return walker.stageMemory.at(walker.previousPos.x, walker.previousPos.y).tile.isDoor()\n  }\n}\n\nexport { Explorer }\n","export interface Visibility {\n  visible: boolean\n  degree: number\n}\n\nexport class Fov {\n  private doubleRadius: number\n\n  constructor(\n    private startx: number,\n    private starty: number,\n    private radius: number,\n    private width: number,\n    private height: number,\n    private checkSolid: (x: number, y: number) => boolean,\n    private markVisible: (x: number, y: number, degree: number) => void,\n  ) {\n    this.doubleRadius = this.radius * this.radius\n  }\n\n  public calc(): void {\n    this.markVisible(this.startx, this.starty, 1)\n\n    if (!this.checkSolid(this.startx, this.starty)) {\n      [[1, 1], [1, -1], [-1, 1], [-1, -1]].forEach(([dx, dy]) => {\n        this.castLight(1, 1.0, 0.0, 0, dx, dy, 0)\n        this.castLight(1, 1.0, 0.0, dx, 0, 0, dy)\n      })\n    }\n  }\n\n  private castLight(row: number, start: number, end: number, xx: number, xy: number, yx: number, yy: number) {\n    if (start < end) { return }\n\n    let newStart = 0.0\n    let blocked = false\n\n    for (let distance = row; distance <= this.radius && !blocked; distance++) {\n      let deltaY = -distance\n\n      for (let deltaX: number = -distance; deltaX <= 0; deltaX++) {\n        let currentX = Math.round(this.startx + deltaX * xx + deltaY * xy)\n        let currentY = Math.round(this.starty + deltaX * yx + deltaY * yy)\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5)\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5)\n\n        if (!(currentX >= 0 && currentY >= 0 && currentX < this.width && currentY < this.height) || start < rightSlope) {\n          continue\n        } else if (end > leftSlope) {\n          break\n        }\n\n        // check if it's within the lightable area and light if needed\n        if (this.doubleDistance(deltaX, deltaY) <= this.doubleRadius) {\n          this.markVisible(\n            currentX,\n            currentY,\n            1 - this.doubleDistance(deltaX, deltaY) / this.doubleRadius,\n          )\n        }\n\n        if (blocked) { // previous cell was a blocking one\n          if (this.checkSolid(currentX, currentY)) { // hit a wall\n            newStart = rightSlope\n          } else {\n            blocked = false\n            start = newStart\n          }\n        } else {\n          if (this.checkSolid(currentX, currentY) && distance < this.radius) { // hit a wall within sight line\n              blocked = true\n              this.castLight(distance + 1, start, leftSlope, xx, xy, yx, yy)\n              newStart = rightSlope\n          }\n        }\n      }\n    }\n  }\n\n  private doubleDistance(x: number, y: number): number {\n    return x * x + y * y\n  }\n}\n","import { Point, twoDimArray } from '../utils'\nimport { AI, TileRecall } from '../ai'\nimport { Explorer } from '../ai/explorer'\n\nimport { Visibility, Fov } from '../fov'\nimport { LevelMap, Tile } from '../map'\n\nexport class MemoryTile implements Visibility {\n  public visible: boolean = false\n  public degree: number = 0\n  public seen: boolean = false\n  public tangible: boolean = false\n\n  constructor(\n    public tile?: Tile,\n    ) {\n  }\n}\n\nexport class Memory {\n  public field: MemoryTile[][]\n\n  constructor(\n    public width: number,\n    public height: number,\n    baseBlock: (() => MemoryTile) = () => new MemoryTile(),\n    ) {\n    this.field = twoDimArray(height, width, baseBlock)\n  }\n\n  at(x: number, y: number): MemoryTile {\n    return this.field[y][x]\n  }\n\n  public resetVisible(): void {\n    this.field.forEach((row) => {\n      row.forEach((tile) => {\n        // tile.updated = tile.visible\n        tile.visible = false\n        tile.tile = undefined\n      })\n    })\n  }\n}\n\n// TODO: Ensure seen is build before act() is called!\nexport class Walker {\n  ai: AI\n  // tile: Type\n  public stageMemory: Memory\n  public previousPos: Point\n\n  constructor(public x: number, public y: number, private radius: number = 10, width, height) {\n    // this.tile = new Type( TileType.humanoid )\n    this.stageMemory = new Memory(width, height)\n    this.ai = new Explorer()\n    this.previousPos = { x, y }\n  }\n\n  act(stage: LevelMap): void {\n    // this.stageMemory[ this.x ][ this.y ].updated = true\n\n    this.visionMask( stage )\n    this.previousPos = { x: this.x, y: this.y }\n    this.ai.act( this )\n\n    // this.stageMemory[ this.x ][ this.y ].updated = true\n  }\n\n  private visionMask(stage: LevelMap): void {\n    this.stageMemory.resetVisible()\n\n    const see = (x: number, y: number, degree: number): void => {\n      const tile = this.stageMemory.at(x, y)\n      tile.visible = true\n      tile.degree = degree\n      tile.seen = true\n      tile.tangible = !stage.passibleThrough(x, y)\n      tile.tile = stage.at(x, y)\n    }\n\n    new Fov(\n      this.x,\n      this.y,\n      this.radius,\n      stage.width,\n      stage.height,\n      this.isSolid(stage),\n      see,\n    ).calc()\n  }\n\n  private isSolid(stage: LevelMap): (x: number, y: number) => boolean {\n    return (x: number, y: number) => {\n      if (stage.visibleThrough(x, y)) {\n        return false\n      } else {\n        return !(stage.at(x, y).isDoor() && this.x === x && this.y === y)\n      }\n    }\n  }\n}\n","import { Rect, Point, rand, min, max, twoDimArray } from '../utils'\n\nimport { LevelMap, Tile, TileTypes } from '../map'\n\nconst THICKNESS = 0\n\nconst MIN_SIZE: number = 4\nconst MAX_SIZE: number = 10\nconst ROOMS_COUNT: number = 15\n\nconst newRoomSpace = function(): Tile {\n  return Tile.retrive('R')\n}\n\nconst newCoridor = function(): Tile {\n  return Tile.retrive('C')\n}\n\nconst newWall = function(): Tile {\n  return Tile.retrive('W')\n}\n\ntype Stage = Tile[][]\n\nconst generate = function ( dimX: number, dimY: number ): LevelMap {\n  const dungeon = new DungeonGenerator( dimX, dimY )\n\n  let stage = twoDimArray(dimX, dimY, newWall)\n\n  for ( let i = 0; i < dungeon.rooms.length; i++ )\n    dungeon.rooms[ i ].add( stage )\n\n  for ( let i = 0; i < dungeon.roads.length; i++ )\n    dungeon.roads[ i ].add( stage )\n\n  return new LevelMap(stage)\n}\n\nclass Room extends Rect {\n  notCross( rect: Rect ): boolean {\n    return ( rect.x - THICKNESS > this.x + this.w ) ||\n      ( rect.y - THICKNESS > this.y + this.h ) ||\n      ( rect.x + rect.w < this.x - THICKNESS ) ||\n      ( rect.y + rect.h < this.y - THICKNESS )\n  }\n\n  pointWithin(): Point {\n    return {\n      x: this.x + 1 + rand( this.w - 1 ),\n      y: this.y + 1 + rand( this.h - 1 )\n    }\n  }\n\n  add( stage: Stage ): void {\n    let i: number = 0\n    while ( i < this.w ) {\n      let j: number = 0\n      while ( j < this.h ) {\n        stage[ this.x + i ][ this.y + j ] = newRoomSpace()\n        j++\n      }\n\n      i++\n    }\n  }\n}\n\nclass Road extends Rect {\n  lined: boolean\n\n  constructor( x: number, y: number, w: number, h: number ) {\n    super( x, y, w, h )\n    this.lined = ( ( x >= w ) && ( y >= h ) ) || ( w >= x ) && ( h >= y )\n  }\n\n  add( stage: Stage ): void {\n    let [ hx, hy, w ] = this.horizontalLine()\n\n    let i = 0\n    while ( i < w ) {\n      if (stage[ hx + i ][ hy ].key === 'W') {\n        stage[ hx + i ][ hy ] = newCoridor()\n      }\n      i += 1\n    }\n\n    let [ vx, vy, h ] = this.verticallLine()\n    let j = 0\n    while ( j < h ) {\n      if (stage[ vx ][ vy + j ].key === 'W') {\n        stage[ vx ][ vy + j ] = newCoridor()\n      }\n      j += 1\n    }\n  }\n\n  horizontalLine(): [ number, number, number ] {\n    // x\n    // |\\\n    // .-x\n    if ( this.lined )\n      return [ Math.min( this.x, this.w ), Math.max( this.y, this.h ), Math.abs( this.w - this.x ) ]\n    // .-x\n    // |/\n    // x\n    else\n      return [ Math.min( this.x, this.w ), Math.min( this.y, this.h ), Math.abs( this.w - this.x ) ]\n  }\n\n  verticallLine(): [ number, number, number ] {\n    // x\n    // |\\\n    // .-x\n    if ( this.lined )\n      return [ Math.min( this.x, this.w ), Math.min( this.y, this.h ), Math.abs( this.h - this.y ) ]\n    // .-x\n    // |/\n    // x\n    else\n      return [ Math.min( this.x, this.w ), Math.min( this.y, this.h ), Math.abs( this.h - this.y ) ]\n  }\n}\n\nclass DungeonGenerator {\n  rooms: Array< Room >\n  roads: Array< Road >\n\n  constructor( protected maxX: number, protected maxY: number ) {\n    let rooms: Array< Room > = []\n\n    let i = 0\n    while ( i < ROOMS_COUNT ) {\n      rooms.push( this.generateRoom() )\n      i += 1\n    }\n\n    this.rooms = this.normalize( this.fuzzifyRooms( rooms ) )\n    this.roads = this.buildRoads( this.rooms )\n  }\n\n  private generateRoom(): Room {\n    return new Room(\n      0,\n      0,\n      MIN_SIZE + rand( MAX_SIZE - MIN_SIZE ),\n      MIN_SIZE + rand( MAX_SIZE - MIN_SIZE )\n    )\n  }\n\n  private fuzzifyRooms( rooms: Array< Room > ): Array< Room > {\n    let pickedRooms: Array< Room > = [ rooms.shift() ]\n\n    while ( rooms.length ) {\n      let currentRoom: Room = rooms.shift()\n\n      let angle: number = rand( 360 ) / 180 * Math.PI\n\n      // TODO: Build table with these values.\n      const cos: number = Math.cos( angle )\n      const sin: number = Math.sin( angle )\n      let l: number = 0\n      let dx: number = 0\n      let dy: number = 0\n\n      while ( !pickedRooms.every( ( room ) => currentRoom.notCross( room ) )) {\n        let ndx = Math.round( l * cos )\n        let ndy = Math.round( l * sin )\n\n        while ( true ) {\n          l += 1\n          ndx = Math.round( l * cos )\n          ndy = Math.round( l * sin )\n\n          if ( ndx !== dx || ndy !== dy ) {\n            break\n          }\n        }\n\n        currentRoom.move( ndx - dx, ndy - dy )\n        dx = ndx\n        dy = ndy\n      }\n\n      pickedRooms.push( currentRoom )\n    }\n\n    return pickedRooms\n  }\n\n  private normalize( rooms: Array< Room > ): Array< Room > {\n    const minX = min( rooms.map( ( room ) => room.x ) ) - 1\n    const minY = min( rooms.map( ( room ) => room.y ) ) - 1\n    rooms.forEach( ( room ) => { room.move( - minX, - minY ) } )\n\n    return rooms.filter( ( room: Room ) => {\n      return ( room.x + room.w < this.maxX ) && ( room.y + room.h < this.maxY )\n    })\n  }\n\n  private buildRoads( rooms: Array< Room > ): Array< Road > {\n    let points: Array< Point > = rooms.map( ( room ) => { return room.pointWithin() } )\n\n    let connectedPoints: Array< Point > = [ points.shift() ]\n    let roads: Array< Road > = []\n\n    const distance = function( point1: Point, point2: Point ): number {\n      // No need to calc square root since it's being used for comparison only.\n      return ( point1.x - point2.x ) ** 2 + ( point1.y - point2.y ) ** 2\n    }\n\n    while ( points.length ) {\n      let currentPoint = points.shift()\n\n      let pointToConnect = connectedPoints[ 0 ]\n      let minDistance = distance( currentPoint, pointToConnect )\n\n      connectedPoints.forEach( ( point ) => {\n        const currentDistance = distance( point, currentPoint )\n        if ( currentDistance < minDistance ) {\n          pointToConnect = point\n          minDistance = currentDistance\n        }\n      })\n\n      connectedPoints.push( currentPoint )\n\n      roads.push( new Road(\n        currentPoint.x,\n        currentPoint.y,\n        pointToConnect.x,\n        pointToConnect.y\n      ))\n    }\n\n    return roads\n  }\n}\n\nexport { generate }\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\nimport * as _ from 'lodash'\n\nimport Cell from './Cell.vue'\nimport Scene from './Scene.vue'\n\nimport { Visibility, Fov } from '../fov'\nimport { LevelMap } from '../map'\nimport { Walker, Memory, MemoryTile } from '../creatures/walker'\nimport { generate } from '../generator/dungeon'\nimport { addDoors } from '../generator/post'\n\nexport default Vue.extend({\n  data() {\n    return {\n      map: new LevelMap([[]]),\n      radius: 10,\n      player: {\n        x: 10,\n        y: 10,\n      },\n      pause: true,\n      ts: Date.now(),\n    }\n  },\n  components: {\n    Cell,\n    Scene\n  },\n  computed: {\n    walker() {\n      if (this.map) {\n        return new Walker(\n          this.player.x,\n          this.player.y,\n          this.radius,\n          this.map.width,\n          this.map.height,\n        )\n      }\n    },\n    fov(): MemoryTile[][] {\n      if (this.ts && this.map) {\n        return this.walker.stageMemory.field\n      }\n\n      return []\n    }\n  },\n  methods: {\n    generateMap() {\n      this.map = this.buildMap()\n      let x = 1,\n          y = 1\n\n      while (!this.map.visibleThrough(x, y)) {\n        if (x < this.map.width - 1) {\n          x += 1\n        } else {\n          x = 1\n          y += 1\n        }\n      }\n\n      this.player = { x, y }\n    },\n    updatePlayerPosition(x: number, y: number) {\n      this.pause = false;\n      this.player.x = x;\n      this.player.y = y;\n    },\n    buildMap() {\n      let map = addDoors(generate(50, 50))\n\n      clearInterval(this.walkerinterval)\n      this.walkerinterval = setInterval(() => {\n        if (this.pause) {\n          return\n        }\n\n        try {\n          if (this.walker) {\n            Vue.nextTick(() => {\n              this.walker.act(this.map)\n              this.ts = Date.now()\n            })\n            // this.pause = true\n            // this.player.x = this.walker.x\n            // this.player.y = this.walker.y\n          }\n        } catch (e) {\n          console.error(e)\n          this.pause = true\n        }\n\n      }, 50);\n\n      return map\n    },\n    visibility(i: number, j: number) {\n      if (this.pause) {\n        return { background: 'black', color: 'darkgrey', opacity: 0.3 }\n      }\n\n      if (this.fov.length) {\n        if (this.fov[i][j].visible) {\n          return { opacity: this.fov[i][j].degree }\n        } else if (this.fov[i][j].seen) {\n          return { background: 'black', color: 'darkgrey', opacity: 0.3 }\n        } else {\n          return { background: 'black', color: 'black' }\n        }\n      } else {\n        return { background: 'black', color: 'darkgrey' }\n      }\n    }\n  },\n  created() {\n    this.generateMap()\n  }\n})\n","import { LevelMap, Tile, TileTypes } from '../map'\n\nexport const addDoors = function (\n  level: LevelMap,\n  addDoor: () => boolean = () => true,\n  ): LevelMap {\n  for (let j = 1; j < level.height - 1; j++) {\n\n    for (let i = 1; i < level.width; i++) {\n      const\n        tile  = level.at(i, j),\n        up    = level.at(i, j - 1),\n        down  = level.at(i, j + 1),\n        left  = level.at(i - 1, j),\n        right = level.at(i + 1, j)\n\n      if (!addDoor() || tile.key !== 'C') {\n        continue\n      }\n\n      if (left.key === 'D' || right.key === 'D' || up.key === 'D' || down.key === 'D') {\n        continue\n      }\n\n      if (left.key !== 'R' && right.key !== 'R' && up.key !== 'R' && down.key !== 'R') {\n        continue\n      }\n\n      if ((left.key === 'W' && right.key === 'W') || (up.key === 'W' && down.key === 'W')) {\n        level.setTile(i, j, Tile.retrive('D'))\n      }\n    }\n  }\n\n  return level\n}\n","function injectStyle (context) {\n  require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!css-loader?{\\\"autoprefixer\\\":false,\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\n/* script */\nexport * from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b820c2b2\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=slm&optionsId=0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Scene',{attrs:{\"fov\":_vm.fov,\"player\":_vm.walker,\"scene\":_vm.map}}),_c('div',{staticClass:\"col\"},[_c('button',{on:{\"click\":function($event){_vm.generateMap()}}},[_vm._v(\"Generate!\")]),_c('label',[_vm._v(\"radius\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.radius),expression:\"radius\"}],attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.radius)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.radius=$event.target.value}}}),_c('button',{on:{\"click\":function($event){_vm.pause = !_vm.pause}}},[_vm._v(_vm._s(_vm.pause ? 'Start' : 'Pause'))])])],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","import Vue from 'vue'\nimport App from './components/App.vue'\n\nimport './application.css'\n\nimport 'bootstrap'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"sourceRoot":""}