{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Cell.vue?d13c","webpack:///./src/components/Cell.vue","webpack:///./src/components/Cell.vue?ccd8","webpack:///./vendor/unicodetiles.ts/src/unicodetiles.ts","webpack:///./vendor/unicodetiles.ts/src/CanvasRenderer.ts","webpack:///./vendor/unicodetiles.ts/src/WebGLRenderer.ts","webpack:///./src/items/internal.ts","webpack:///./src/items/weapon.ts","webpack:///./src/components/scene_tiles.ts","webpack:///./src/utils.ts","webpack:///./src/ai/internal.ts","webpack:///./src/fov.ts","webpack:///./src/map.ts","webpack:///./src/creature.ts","webpack:///./src/ai/attacker.ts","webpack:///./src/ai/chaser.ts","webpack:///./src/ai/dispatcher.ts","webpack:///./src/ai/escaper.ts","webpack:///./src/ai/explorer.ts","webpack:///./src/ai/loiter.ts","webpack:///./src/ai/patrol.ts","webpack:///./src/components/Scene.vue?de4a","webpack:///./src/ai/waiter.ts","webpack:///./src/components/Scene.vue","webpack:///./src/components/Scene.vue?34af","webpack:///./src/generator/dungeon.ts","webpack:///./src/components/App.vue?e903","webpack:///./src/generator/post.ts","webpack:///./src/components/App.vue","webpack:///./src/components/App.vue?3bf7","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","Cell","vue_runtime_esm","extend","props","computed","[object Object]","this","player","cell","isWall","isDoor","display","__vue_styles__","context","components_Cell","component_normalizer","_vm","_h","$createElement","_self","_c","class","style","domProps","textContent","_s","symbol","on","click","$event","$emit","Tile","ch","g","b","br","bg","bb","grey","undefined","toString","other","CSSCLASS","NULLTILE","VERTEX_SHADER","FRAGMENT_SHADER","webGLRenderer","viewport","view","canvas","document","createElement","getContext","gl","elem","appendChild","charMap","charArray","defaultColors","attribs","position","buffer","itemSize","location","hint","STATIC_DRAW","texCoord","color","DYNAMIC_DRAW","bgColor","charIndex","offscreen","top","left","ctx","updateStyle","width","squarify","th","tw","w","height","h","vertexShader","compileShader","fragmentShader","program","createProgram","attachShader","linkProgram","deleteShader","getProgramParameter","LINK_STATUS","msg","getProgramInfoLog","deleteProgram","useProgram","getAttribLocation","initBuffers","resolutionLocation","getUniformLocation","uniform2f","tileCountsLocation","paddingLocation","texture","createTexture","bindTexture","TEXTURE_2D","cacheChars","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","activeTexture","TEXTURE0","setTimeout","buildTexture","render","pad","charCount","Math","floor","ceil","sqrt","fillStyle","fillRect","halfGap","gap","y","x","fillText","texImage2D","RGBA","UNSIGNED_BYTE","chars","build","changed","getComputedStyle","font","fontSize","lineHeight","fontFamily","textBaseline","measureText","parseInt","match","backgroundColor","clear","COLOR_BUFFER_BIT","tiles","newChars","defaultColor","defaultBackground","tile","k","kk","bindBuffer","ARRAY_BUFFER","bufferData","attrib","drawArrays","TRIANGLES","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","a","Float32Array","insertQuad","deleteBuffer","createBuffer","enableVertexAttribArray","vertexAttribPointer","FLOAT","arr","x1","y1","x2","y2","ItemGroup","ItemKind","Item","group","kind","id","getId","lastId","Corpse","creature","super","weapon_Weapon","Weapon","DEFAULT_GREY","IMPORTANT_GREY","DEFAULT_LIT","scene_tiles_DisplayTile","degree","char","setBackground","setColor","ImportantTile","CreatureTile","vr","vg","vb","clone","ItemTile","KATANA","CORPSE","Rect","succ","String","fromCharCode","charCodeAt","rand","max","random","twoDimArray","dimX","dimY","field","Array","min","list","Point","point","abs","dxy","map","add","Mapped","FIRST_STEP","internal_AI","prevAI","actor","destination","path","leePath","eq","move","nextTo","randomDestination","stageMemory","pointsToVisit","pointsToCheck","pos","step","wavePoints","forEach","inRange","at","tangible","wrappers","dist","buildRoad","lodash","lastPoint","chain","delta","find","dp","unshift","visit","tileVisited","visible","Fov","startx","starty","radius","checkSolid","markVisible","doubleRadius","dx","dy","castLight","row","start","end","xx","xy","yx","yy","newStart","blocked","distance","deltaY","deltaX","currentX","round","currentY","leftSlope","rightSlope","doubleDistance","TileTypes","EventType","Reaction","map_Tile","key","repository","Floor","Wall","Door","retrive","item","map_LevelMap","creatures","visibleThrough","passibleThrough","act","visionMask","MemoryTile","seen","creature_Memory","baseTile","reset","creature_Phantom","refToReal","Attack","damage","die","DIE","creature_Creature","level","ai","stageMemories","previousPos","copy","currentLevel","addCreature","eventType","removeCreature","event","affect","levelId","stage","nextPoint","phantom","resetVisible","isSolid","see","calc","attacker_Attacker","canAttack","firstTurn","victimSet","victimInAccess","attack","findNewVictim","victim","emit","memory","some","findCreature","condition","withinView","real","chaser_Chaser","updateVictimPosition","chase","foundNewVictim","victimPos","moveTo","caught","resetVictim","victimId","followTo","dispatcher_Dispatcher","events","escaper","escaper_Escaper","explorer","explorer_Explorer","chaser","attacker","feelsGood","enemyClose","explore","runAway","rest","available","STEP_DISTANCE","escapesFrom","foundEnemies","buildPath","runningTo","loiter_Loiter","minDistance","enemy","pop","NEW_POINT_EVERY","buildNewPath","updatePatrol","shouldAddNode","patrol","addNode","patrol_Patrol","turns","graph","graphlib","lastNodeVisit","markNodeVisited","currentNodeID","nodes","moveToTarget","targetNodeID","pickUpNewTarget","withEdge","setNode","setEdge","node","seenLastID","seenLastStep","neighbors","nodeID","HUMAN","HUMAN2","HUMAN3","HUMAN4","HUMAN5","DOOR","litColor","swapColors","WALL","litBackground","backgroundToColor","FLOOR","Scene_NULLTILE","Scene","term","eng","drawInterval","ts","Date","now","fps","counter","interval","nextStep","pause","methods","aiName","Katana","displayItem","renderer","cx","cy","innerHTML","className","indexOf","updateRenderer","getRendererString","str","len","unsafePut","$refs","scene","tileFunc","refreshCache","cacheEnabled","transitionDuration","cachex","cachey","tileCache","tileCache2","func","effect","duration","transition","new_t","old_t","factor","halfw","halfh","transitionTimer","getTime","maskFunc","shaderFunc","mode","timeNow","transTime","ixx","jyy","lookupx","lookupy","tempCache","getTile","setMaskFunc","setShaderFunc","time","lighting","clearInterval","setInterval","drawScene","done","turn","update","fovTile","lighted","initViewport","watch","Scene_vue_styles_","components_Scene","staticClass","ref","_v","_l","directives","rawName","expression","attrs","input","target","composing","for","THICKNESS","newRoomSpace","newCoridor","newWall","generate","minSize","maxSize","roomsCount","dungeon","maxX","maxY","rooms","generateRoom","normalize","fuzzifyRooms","roads","buildRoads","dungeon_Room","pickedRooms","currentRoom","angle","PI","cos","sin","every","room","notCross","ndx","ndy","minX","minY","filter","points","pointWithin","connectedPoints","point1","point2","pow","currentPoint","pointToConnect","currentDistance","dungeon_Road","rect","lined","hx","hy","horizontalLine","vx","vy","verticallLine","App","generatorOptions","addDoors","components","buildMap","addDoor","up","down","right","setTile","generateMap","App_vue_styles_","components_App","checked","isArray","_i","change","$$a","$$el","$$c","$$i","$set","concat","el"],"mappings":"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","file":"main.eba7bd76.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".\" + {}[chunkId] + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/onisun/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([39,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport { Tile, TileTypes } from '../map'\n\nexport default Vue.extend({\n  props: [\"cell\", 'player'],\n  computed: {\n    style() {\n      if (this.player) {\n        return 'player'\n      } else if (this.cell.isWall()) {\n        return 'wall'\n      } else if (this.cell.isDoor()) {\n        return 'door'\n      }\n\n      return 'floor'\n    },\n    symbol():any {\n      if (this.player) {\n        return '俺'\n      } else if (this.cell.display == ' ') {\n        return '・'\n      } else if (this.cell.display == '+') {\n        return '戸'\n      } else if (this.cell.display == '#') {\n        return '＃'\n      } else {\n        return 'E'\n      }\n    }\n  }\n})\n","function injectStyle (context) {\n  require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!css-loader?{\\\"autoprefixer\\\":false,\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Cell.vue\")\n}\n/* script */\nexport * from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cell.vue\"\nimport __vue_script__ from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cell.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-31be5045\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=slm&optionsId=0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Cell.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{class:_vm.style,domProps:{\"textContent\":_vm._s(_vm.symbol)},on:{\"click\":function($event){_vm.$emit('setPosition')}}})}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","/// This file contains the main tile engine namespace.\n/// All coordinates are assumed to be integers - behaviour is undefined\n/// if you feed in floats (or anything other) as x and y (or similar) parameters.\n\n/// Class: Tile\n/// Represents a unicode character tile with various attributes.\nexport class Tile {\n  /// Constructor: Tile\n  /// Constructs a new Tile object.\n  ///\n  /// Parameters:\n  ///   ch - a character to display for this tile\n  ///   r - (optional) red foregorund color component 0-255\n  ///   g - (optional) green foreground color component 0-255\n  ///   b - (optional) blue foreground color component 0-255\n  ///   br - (optional) red background color component 0-255\n  ///   bg - (optional) green background color component 0-255\n  ///   bb - (optional) blue background color component 0-255\n  constructor(\n    public ch: string,\n    public r?: number,\n    public g?: number,\n    public b?: number,\n    public br?: number,\n    public bg?: number,\n    public bb?: number,\n  ) {}\n\n  /// Function: getChar\n  /// Returns the character of this tile.\n  public getChar() { return this.ch }\n\n  /// Function: setChar\n  /// Sets the character of this tile.\n  public setChar(ch: string) { this.ch = ch }\n\n  /// Function: setColor\n  /// Sets the foreground color of this tile.\n  public setColor(r: number, g: number, b: number) {\n    this.r = r\n    this.g = g\n    this.b = b\n  }\n\n  /// Function: setGrey\n  /// Sets the foreground color to the given shade (0-255) of grey.\n  public setGrey(grey: number) {\n    this.r = grey\n    this.g = grey\n    this.b = grey\n  }\n\n  /// Function: setBackground\n  /// Sets the background color of this tile.\n  public setBackground(r: number, g: number, b: number) {\n    this.br = r\n    this.bg = g\n    this.bb = b\n  }\n\n  public backgroundToColor() {\n    this.r = this.br\n    this.g = this.bg\n    this.b = this.bb\n  }\n\n  public swapColors() {\n    this.r = [this.br, this.br = this.r][0]\n    this.g = [this.bg, this.bg = this.g][0]\n    this.b = [this.bb, this.bb = this.b][0]\n  }\n\n  /// Function: resetColor\n  /// Clears the color of this tile / assigns default color.\n  public resetColor() { this.r = this.g = this.b = undefined }\n\n  /// Function: resetBackground\n  /// Clears the background color of this tile.\n  public resetBackground() { this.br = this.bg = this.bb = undefined }\n\n  /// Function: getColorHex\n  /// Returns the hexadecimal representation of the color\n  public getColorHex() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return '#' + this.r.toString(16) + this.g.toString(16) + this.b.toString(16)\n    else return ''\n  }\n\n  /// Function: getBackgroundHex\n  /// Returns the hexadecimal representation of the background color\n  public getBackgroundHex() {\n    if (this.br !== undefined && this.bg !== undefined && this.bb !== undefined)\n      return '#' + this.br.toString(16) + this.bg.toString(16) + this.bb.toString(16)\n    else return ''\n  }\n\n  /// Function: getColorRGB\n  /// Returns the CSS rgb(r,g,b) representation of the color\n  public getColorRGB() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return `rgb(${this.r},${this.g},${this.b})`\n    else return ''\n  }\n\n  /// Function: getBackgroundRGB\n  /// Returns the CSS rgb(r,g,b) representation of the background color\n  public getBackgroundRGB() {\n    if (this.br !== undefined && this.bg !== undefined && this.bb !== undefined)\n      return `rgb(${this.br},${this.bg},${this.bb})`\n    else return ''\n  }\n\n  /// Function: getColorJSON\n  /// Returns the JSON representation of the color, i.e. object { r, g, b }\n  public getColorJSON() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return { 'r': this.r, 'g': this.g, 'b': this.b }\n    else return {}\n  }\n\n  /// Function: getBackgroundJSON\n  /// Returns the JSON representation of the background color, i.e. object { r, g, b }\n  public getBackgroundJSON() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return { 'r': this.br, 'g': this.bg, 'b': this.bb }\n    else return {}\n  }\n\n  /// Function: copy\n  /// Makes this tile identical to the one supplied. Custom properties are not copied.\n  public copy(other: Tile) {\n    this.ch = other.ch\n    this.r = other.r\n    this.g = other.g\n    this.b = other.b\n    this.br = other.br\n    this.bg = other.bg\n    this.bb = other.bb\n  }\n\n  /// Function: clone\n  /// Returns a new copy of this tile. Custom properties are not cloned.\n  public clone() {\n    return new Tile(this.ch, this.r, this.g, this.b, this.br, this.bg, this.bb)\n  }\n}\n\n/// Constants: Semi-internal constants for ut namespace\n/// VERSION  - Version of the library as string.\n/// NULLCHAR - Character used when none is specified otherwise.\n/// CSSCLASS - The CSS class name used for the tile engine element.\n/// NULLTILE - The tile used as placeholder for empty tile.\nexport const VERSION = '2.1'\nexport const NULLCHAR = ' '\nexport const CSSCLASS = 'unicodetiles'\nexport const NULLTILE = new Tile(NULLCHAR)\n\nexport interface Renderer {\n  updateStyle(s?: any): void\n\n    // if (this.renderer instanceof ut.WebGLRenderer) return ''\n    // if (this.renderer instanceof ut.CanvasRenderer) return 'canvas'\n    // if (this.renderer instanceof ut.DOMRenderer) return 'dom'\n  getRendererString(): string\n\n  clear(): void\n  render(): void\n}\n\n/// Class: Viewport\n/// The tile engine viewport / window. Takes care of initializing a proper renderer.\n\n/// Constructor: Viewport\n/// Constructs a new Viewport object.\n/// If you wish to display a player character at the center, you should use odd sizes.\n///\n/// Parameters:\n///   elem - the DOM element which shall be transformed into the tile engine\n///   w - (integer) width in tiles\n///   h - (integer) height in tiles\n///   renderer - (optional) choose rendering engine, see <Viewport.setRenderer>, defaults to 'auto'.\n///   squarify - (optional) set to true to force the tiles square; may break some box drawing\nexport class Viewport {\n  public cx: number\n  public cy: number\n\n  public buffer: Tile[][]\n  public renderer: Renderer\n\n  public defaultColor?: string\n  public defaultBackground?: string\n\n  constructor(\n    public elem: HTMLElement,\n    public w: number,\n    public h: number,\n    renderer: (viewport: Viewport) => Renderer,\n    public squarify: boolean = false,\n    ) {\n    this.cx = Math.floor(w / 2)\n    this.cy = Math.floor(h / 2)\n\n    this.elem.innerHTML = ''\n\n    // Add CSS class if not added already\n    if (elem.className.indexOf(CSSCLASS) === -1) {\n      if (elem.className.length === 0) {\n        elem.className = CSSCLASS\n      }\n      else elem.className += ' ' + CSSCLASS\n    }\n\n    // Create two 2-dimensional array to hold the viewport tiles\n    this.buffer = new Array(h)\n    for (let j = 0; j < h; ++j) {\n      this.buffer[j] = new Array(w)\n      for (let i = 0; i < w; ++i) {\n        this.buffer[j][i] = NULLTILE\n      }\n    }\n\n    this.renderer = renderer(this)\n  }\n\n  /// Function: updateStyle\n  /// If the style of the parent element is modified, this needs to be called.\n  private updateStyle(updateRenderer: boolean) {\n    const s = window.getComputedStyle(this.elem, null)\n\n    this.defaultColor = s.color || undefined // OMG\n    this.defaultBackground = s.backgroundColor || undefined\n    if (updateRenderer) {\n      this.renderer.updateStyle(s)\n    }\n  };\n\n  /// Function: getRendererString\n  /// Gets the currently used renderer.\n  ///\n  /// Returns:\n  ///   One of 'webgl', 'canvas', 'dom', ''.\n  public getRendererString(): string {\n    return this.renderer.getRendererString()\n  }\n\n  /// Function: put\n  /// Puts a tile to the given coordinates.\n  /// Checks bounds and does nothing if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   tile - the tile to put\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  public put(tile: Tile, x: number, y: number): void {\n    if (x < 0 || y < 0 || x >= this.w || y >= this.h) return\n    this.buffer[y][x] = tile\n  }\n\n  /// Function: unsafePut\n  /// Puts a tile to the given coordinates.\n  /// Does *not* check bounds throws exception if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   tile - the tile to put\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  public unsafePut(tile: Tile, x: number, y: number) {\n    this.buffer[y][x] = tile\n  }\n\n  /// Function: putString\n  /// Creates a row of tiles with the chars of the given string.\n  /// Wraps to next line if it can't fit the chars on one line.\n  ///\n  /// Parameters:\n  ///   str - (string) the string to put\n  ///   x - (integer) x coordinate (column)\n  ///   y - (integer) y coordinate (row)\n  ///   r - (optional) red foregorund color component 0-255\n  ///   g - (optional) green foreground color component 0-255\n  ///   b - (optional) blue foreground color component 0-255\n  ///   br - (optional) red background color component 0-255\n  ///   bg - (optional) green background color component 0-255\n  ///   bb - (optional) blue background color component 0-255\n  public putString(\n    str: string,\n    x: number,\n    y: number,\n    r?: number,\n    g?: number,\n    b?: number,\n    br?: number,\n    bg?: number,\n    bb?: number,\n  ) {\n    const len = str.length\n    if (x < 0 || y < 0) return\n\n    for (let i = 0; i < len; ++i) {\n      if (x >= this.w) {\n        x = 0\n        ++y\n      }\n      if (y >= this.h) return\n\n      const tile = new Tile(str[i], r, g, b, br, bg, bb)\n      this.unsafePut(tile, x, y)\n      ++x\n    }\n  }\n\n  /// Function: get\n  /// Returns the tile in the given coordinates.\n  /// Checks bounds and returns empty tile if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  ///\n  /// Returns:\n  ///   The tile.\n  public get(x: number, y: number): Tile {\n    if (x < 0 || y < 0 || x >= this.w || y >= this.h) return NULLTILE\n    return this.buffer[y][x]\n  }\n\n  /// Function: clear\n  /// Clears the viewport buffer by assigning empty tiles.\n  public clear() {\n    for (let j = 0; j < this.h; ++j) {\n      for (let i = 0; i < this.w; ++i) {\n        this.buffer[j][i] = NULLTILE\n      }\n    }\n    this.renderer.clear()\n  }\n\n  /// Function: render\n  /// Renders the buffer as html to the element specified at construction.\n  public render() {\n    this.renderer.render()\n  }\n}\n\n/// Class: Engine\n/// The tile engine itself.\nexport class Engine {\n  private refreshCache: boolean = true\n  private cacheEnabled: boolean = false\n  private transitionTimer?: number\n\n  private transitionDuration: number = 0\n  private transition?: (x: number, y: number, w: number, h: number, new_t: Tile, old_t: Tile, factor: number) => Tile\n  private maskFunc?: (x: number, y: number) => boolean\n  private shaderFunc?: (tile: Tile, x: number, y: number, timeNow: number) => Tile\n  private cachex: number = 0\n  private cachey: number = 0\n\n  private tileCache: Tile[][]\n  private tileCache2: Tile[][]\n\n  /// Constructor: Engine\n  /// Constructs a new Engine object. If width or height is given,\n  /// it will not attempt to fetch tiles outside the boundaries.\n  /// In that case 0,0 is assumed as the upper-left corner of the world,\n  /// but if no width/height is given also negative coords are valid.\n  ///\n  /// Parameters:\n  ///   vp - the <Viewport> instance to use as the viewport\n  ///   func - the function used for fetching tiles\n  ///   w - (integer) (optional) world width in tiles\n  ///   h - (integer) (optional) world height in tiles\n  constructor(\n    public viewport: Viewport,\n    public tileFunc: (x: number, y: number) => Tile,\n    public w: number,\n    public h: number,\n  ) {\n\n    this.tileCache = new Array(viewport.h)\n    this.tileCache2 = new Array(viewport.h)\n\n    for (let j = 0; j < viewport.h; ++j) {\n      this.tileCache[j] = new Array(viewport.w)\n      this.tileCache2[j] = new Array(viewport.w)\n    }\n  }\n\n  /// Function: setTileFunc\n  /// Sets the function to be called with coordinates to fetch each tile.\n  /// Optionally can apply a transition effect. Effects are:\n  /// 'boxin', 'boxout', 'circlein', 'circleout', 'random'\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (x, y) and returning an ut.Tile\n  ///   effect - (string) (optional) name of effect to use (see above for legal values)\n  ///   duration - (integer) (optional) how many milliseconds the transition effect should last\n  public setTileFunc(func: (x: number, y: number) => Tile, effect?: string, duration?: number) {\n    if (effect) {\n      this.transition = undefined\n      if (typeof effect === 'string') {\n        if (effect === 'boxin') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          if (Math.abs(x) < halfw * factor && Math.abs(y) < halfh * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'boxout') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          factor = 1.0 - factor\n          if (Math.abs(x) < halfw * factor && Math.abs(y) < halfh * factor) return old_t\n          else return new_t\n        }\n        else if (effect === 'circlein') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          if (x * x + y * y < (halfw * halfw + halfh * halfh) * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'circleout') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          factor = 1.0 - factor\n          if (x * x + y * y > (halfw * halfw + halfh * halfh) * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'random') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          if (Math.random() > factor) return old_t\n          else return new_t\n        }\n      }\n      if (this.transition) {\n        this.transitionTimer = (new Date()).getTime()\n        this.transitionDuration = duration || 500\n      }\n    }\n    this.tileFunc = func\n  }\n\n  /// Function: setMaskFunc\n  /// Sets the function to be called to fetch mask information according to coordinates.\n  /// If mask function returns false to some coordinates, then that tile is not rendered.\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (x, y) and returning a true if the tile is visible\n  public setMaskFunc(func: (x: number, y: number) => boolean) { this.maskFunc = func }\n\n  /// Function: setShaderFunc\n  /// Sets the function to be called to post-process / shade each visible tile.\n  /// Shader function is called even if caching is enabled, see <Engine.setCacheEnabled>.\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (tile, x, y) and returning an ut.Tile\n  public setShaderFunc(func: (tile: Tile, x: number, y: number) => Tile) { this.shaderFunc = func }\n\n  /// Function: setWorldSize\n  /// Tiles outside of the range x = [0,width[ y = [0,height[ are not fetched.\n  /// Set to undefined in order to make the world infinite.\n  ///\n  /// Parameters:\n  ///   width - (integer) new world width\n  ///   height - (integer) new world height\n  public setWorldSize(width: number, height: number) {\n    this.w = width\n    this.h = height\n  }\n\n  /// Function: setCacheEnabled\n  /// Enables or disables the usage of tile cache. This means that\n  /// extra measures are taken to not call the tile function unnecessarily.\n  /// This means that all animating must be done in a shader function,\n  /// see <Engine.setShaderFunc>.\n  /// Cache is off by default, but should be enabled if the tile function\n  /// does more computation than a simple array look-up.\n  ///\n  /// Parameters:\n  ///   mode - true to enable, false to disable\n  public setCacheEnabled(mode: boolean) {\n    this.cacheEnabled = mode\n    this.refreshCache = true\n  }\n\n  /// Function: update\n  /// Updates the viewport according to the given player coordinates.\n  /// The algorithm goes as follows:\n  ///   * Record the current time\n  ///   * For each viewport tile:\n  ///   * Check if the tile is visible by testing the mask\n  ///   * If not visible, continue to the next tile in the viewport\n  ///   * Otherwise, if cache is enabled try to fetch the tile from there\n  ///   * Otherwise, call the tile function and check for shader function presence\n  ///   * If there is shader function, apply it to the tile, passing the recorded time\n  ///   * Put the tile to viewport\n  ///\n  /// Parameters:\n  ///   x - (integer) viewport center x coordinate in the tile world\n  ///   y - (integer) viewport center y coordinate in the tile world\n  public update(x?: number, y?: number) {\n    x = x || 0\n    y = y || 0\n\n    // World coords of upper left corner of the viewport\n    const xx = x - this.viewport.cx\n    const yy = y - this.viewport.cy\n    const timeNow = (new Date()).getTime() // For passing to shaderFunc\n    let transTime\n    if (this.transition && this.transitionTimer) transTime = (timeNow - this.transitionTimer) / this.transitionDuration\n    if (transTime && transTime >= 1.0) this.transition = undefined\n\n    let tile: Tile\n\n    // For each tile in viewport...\n    for (let j = 0; j < this.viewport.h; ++j) {\n      for (let i = 0; i < this.viewport.w; ++i) {\n        const ixx = i + xx, jyy = j + yy\n        // Check horizontal bounds if requested\n        if (this.w && (ixx < 0 || ixx >= this.w)) {\n          tile = NULLTILE\n        // Check vertical bounds if requested\n        } else if (this.h && (jyy < 0 || jyy >= this.w)) {\n          tile = NULLTILE\n        // Check mask\n        } else if (this.maskFunc && !this.maskFunc(ixx, jyy)) {\n          tile = NULLTILE\n        // Check transition effect\n        } else if (this.transition && !this.refreshCache) {\n          tile = this.transition(\n            i,\n            j,\n            this.viewport.w,\n            this.viewport.h,\n            this.tileFunc(ixx, jyy),\n            this.tileCache[j][i],\n            transTime || 0\n          )\n        // Check cache\n        } else if (this.cacheEnabled && !this.refreshCache) {\n          const lookupx = ixx - this.cachex\n          const lookupy = jyy - this.cachey\n          if (lookupx >= 0 && lookupx < this.viewport.w && lookupy >= 0 && lookupy < this.viewport.h) {\n            tile = this.tileCache[lookupy][lookupx]\n            if (tile === NULLTILE) tile = this.tileFunc(ixx, jyy)\n          } else // Cache miss\n            tile = this.tileFunc(ixx, jyy)\n        // If all else fails, call tileFunc\n        } else tile = this.tileFunc(ixx, jyy)\n        // Save the tile to cache (always due to transition effects)\n        this.tileCache2[j][i] = tile\n        // Apply shader function\n        if (this.shaderFunc && tile !== NULLTILE)\n          tile = this.shaderFunc(tile, ixx, jyy, timeNow)\n        // Put shaded tile to viewport\n        this.viewport.unsafePut(tile, i, j)\n      }\n    }\n    // Cache stuff is enabled always, because it is also required by transitions\n    // Save the new cache origin\n    this.cachex = xx\n    this.cachey = yy\n\n    // Swap cache buffers\n    const tempCache = this.tileCache\n    this.tileCache = this.tileCache2\n    this.tileCache2 = tempCache\n    this.refreshCache = false\n  }\n}\n","import { Renderer, Viewport } from './unicodetiles'\n\n/// Class: CanvasRenderer\n/// Renders the <Viewport> into an HTML5 <canvas> element.\n///\n/// *Note:* This is an internal class used by <Viewport>\nclass CanvasRenderer implements Renderer {\n  private canvas: HTMLCanvasElement\n  private offscreen: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n  private ctx2: CanvasRenderingContext2D\n\n  private th?: number\n  private tw?: number\n  private gap?: number\n\n  constructor(private view: Viewport) {\n    this.canvas = document.createElement('canvas')\n    if (!this.canvas.getContext) throw('Canvas not supported')\n    this.ctx2 = this.canvas.getContext('2d')\n    if (!this.ctx2 || !this.ctx2.fillText) throw('Canvas not supported')\n    view.elem.appendChild(this.canvas)\n\n    // Create an offscreen canvas for rendering\n    this.offscreen = document.createElement('canvas')\n    this.ctx = this.offscreen.getContext('2d')\n    this.updateStyle()\n    this.canvas.width = (view.squarify ? this.th : this.tw) * view.w\n    this.canvas.height = this.th * view.h\n    this.offscreen.width = this.canvas.width\n    this.offscreen.height = this.canvas.height\n    // Doing this again since setting canvas w/h resets the state\n    this.updateStyle()\n  }\n\n  public getRendererString(): string { return 'canvas' }\n\n  public updateStyle(s?: any) {\n    s = s || window.getComputedStyle(this.view.elem, null)\n    this.ctx.font = `${s.fontSize}/${s.lineHeight} ${s.fontFamily}`\n    this.ctx.textBaseline = 'middle'\n    this.tw = this.ctx.measureText('M').width\n    this.th = parseInt(s.fontSize, 10)\n    this.gap = this.view.squarify ? (this.th - this.tw) : 0\n    if (this.view.squarify) this.tw = this.th\n  }\n\n  public clear() { /* No op */ }\n\n  public render() {\n    let tile, ch, fg, bg, x, y\n    const view = this.view,\n          buffer = this.view.buffer,\n          w = view.w, h = view.h,\n          hth = 0.5 * this.th,\n          hgap = 0.5 * this.gap // Squarification\n\n    // Clearing with one big rect is much faster than with individual char rects\n    this.ctx.fillStyle = view.defaultBackground\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    y = hth // half because textBaseline is middle\n    for (let j = 0; j < h; ++j) {\n      x = 0\n      for (let i = 0; i < w; ++i) {\n        tile = buffer[j][i]\n        ch = tile.ch\n        fg = tile.getColorRGB()\n        bg = tile.getBackgroundRGB()\n        // Only render background if the color is non-default\n        if (bg.length && bg !== view.defaultBackground) {\n          this.ctx.fillStyle = bg\n          this.ctx.fillRect(x, y - hth, this.tw, this.th)\n        }\n        // Do not attempt to render empty char\n        if (ch.length) {\n          if (!fg.length) fg = view.defaultColor\n          this.ctx.fillStyle = fg\n          this.ctx.fillText(ch, x + hgap, y)\n        }\n        x += this.tw\n      }\n      y += this.th\n    }\n    this.ctx2.drawImage(this.offscreen, 0, 0)\n  }\n}\n\nexport const canvasRenderer = function(viewport: Viewport): Renderer {\n  return new CanvasRenderer(viewport)\n}\n","import { Renderer, Viewport } from './unicodetiles'\n\nconst VERTEX_SHADER = `\nattribute vec2 position;\nattribute vec2 texCoord;\nattribute vec3 color;\nattribute vec3 bgColor;\nattribute float charIndex;\nuniform vec2 uResolution;\nuniform vec2 uTileCounts;\nuniform vec2 uPadding;\nvarying vec2 vTexCoord;\nvarying vec3 vColor;\nvarying vec3 vBgColor;\n\nvoid main() {\n  vec2 tileCoords = floor(vec2(mod(charIndex, uTileCounts.x), charIndex / uTileCounts.x));\n  vTexCoord = (texCoord + tileCoords) / uTileCounts;\n  vTexCoord += (0.5 - texCoord) * uPadding;\n  vColor = color;\n  vBgColor = bgColor;\n  vec2 pos = position / uResolution * 2.0 - 1.0;\n  gl_Position = vec4(pos.x, -pos.y, 0.0, 1.0);\n}\n`\n\nconst FRAGMENT_SHADER = `\nprecision mediump float;\nuniform sampler2D uFont;\nvarying vec2 vTexCoord;\nvarying vec3 vColor;\nvarying vec3 vBgColor;\n\nvoid main() {\n  vec4 color = texture2D(uFont, vTexCoord);\n  color.rgb = mix(vBgColor, vColor, color.rgb);\n  gl_FragColor = color;\n}\n`\n\n/// Class: WebGLRenderer\n/// Renders the <Viewport> with WebGL.\n/// Given decent GPU drivers and browser support, this is the fastest renderer.\n///\n/// *Note:* This is an internal class used by <Viewport>\nclass WebGLRenderer implements Renderer {\n  private canvas: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n  private offscreen: HTMLCanvasElement\n\n  public gl: WebGLRenderingContext\n\n  private charMap: any\n  private charArray: any\n  private defaultColors: any\n  private attribs: any\n\n  private th?: number\n  private tw?: number\n  private gap?: number\n  private pad?: number\n\n  private tileCountsLocation: WebGLUniformLocation\n  private paddingLocation: WebGLUniformLocation\n\n  constructor(private view: Viewport) {\n    this.view = view\n    this.canvas = document.createElement('canvas')\n    // Try to fetch the context\n    if (!this.canvas.getContext) throw('Canvas not supported')\n    this.gl = this.canvas.getContext('experimental-webgl')\n    if (!this.gl) throw('WebGL not supported')\n    view.elem.appendChild(this.canvas)\n\n    this.charMap = {}\n    this.charArray = []\n    this.defaultColors = { r: 1.0, g: 1.0, b: 1.0, br: 0.0, bg: 0.0, bb: 0.0 }\n\n    this.attribs = {\n      position:  { buffer: null, data: null, itemSize: 2, location: null, hint: this.gl.STATIC_DRAW },\n      texCoord:  { buffer: null, data: null, itemSize: 2, location: null, hint: this.gl.STATIC_DRAW },\n      color:     { buffer: null, data: null, itemSize: 3, location: null, hint: this.gl.DYNAMIC_DRAW },\n      bgColor:   { buffer: null, data: null, itemSize: 3, location: null, hint: this.gl.DYNAMIC_DRAW },\n      charIndex: { buffer: null, data: null, itemSize: 1, location: null, hint: this.gl.DYNAMIC_DRAW }\n    }\n\n\n    // Create an offscreen canvas for rendering text to texture\n    if (!this.offscreen)\n      this.offscreen = document.createElement('canvas')\n    this.offscreen.style.position = 'absolute'\n    this.offscreen.style.top = '0px'\n    this.offscreen.style.left = '0px'\n    this.ctx = this.offscreen.getContext('2d')\n    if (!this.ctx) throw 'Failed to acquire offscreen canvas drawing context'\n    // WebGL drawing canvas\n    this.updateStyle()\n    this.canvas.width = (view.squarify ? this.th : this.tw) * view.w\n    this.canvas.height = this.th * view.h\n    this.offscreen.width = 0\n    this.offscreen.height = 0\n    // Doing this again since setting canvas w/h resets the state\n    this.updateStyle()\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height)\n\n    let vertexShader = this.compileShader(this.gl.VERTEX_SHADER, VERTEX_SHADER)\n    let fragmentShader = this.compileShader(this.gl.FRAGMENT_SHADER, FRAGMENT_SHADER)\n    let program = this.gl.createProgram()\n    this.gl.attachShader(program, vertexShader)\n    this.gl.attachShader(program, fragmentShader)\n    this.gl.linkProgram(program)\n    this.gl.deleteShader(vertexShader)\n    this.gl.deleteShader(fragmentShader)\n    const ok = this.gl.getProgramParameter(program, this.gl.LINK_STATUS)\n    if (!ok) {\n      const msg = `Error linking program: ${this.gl.getProgramInfoLog(program)}`\n      this.gl.deleteProgram(program)\n      throw msg\n    }\n    this.gl.useProgram(program)\n\n    // Get attribute locations\n    this.attribs.position.location  = this.gl.getAttribLocation(program, 'position')\n    this.attribs.texCoord.location  = this.gl.getAttribLocation(program, 'texCoord')\n    this.attribs.color.location     = this.gl.getAttribLocation(program, 'color')\n    this.attribs.bgColor.location   = this.gl.getAttribLocation(program, 'bgColor')\n    this.attribs.charIndex.location = this.gl.getAttribLocation(program, 'charIndex')\n\n    // Setup buffers and uniforms\n    this.initBuffers()\n    let resolutionLocation = this.gl.getUniformLocation(program, 'uResolution')\n    this.gl.uniform2f(resolutionLocation, this.canvas.width, this.canvas.height)\n    this.tileCountsLocation = this.gl.getUniformLocation(program, 'uTileCounts')\n    this.gl.uniform2f(this.tileCountsLocation, this.view.w, this.view.h)\n    this.paddingLocation = this.gl.getUniformLocation(program, 'uPadding')\n    this.gl.uniform2f(this.paddingLocation, 0.0, 0.0)\n\n    // Setup texture\n    // view.elem.appendChild(this.offscreen) // Debug offscreen\n    let texture = this.gl.createTexture()\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture)\n    this.cacheChars(` !\\\"#$%&'()*+,-./0123456789:<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~`)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.activeTexture(this.gl.TEXTURE0)\n\n    setTimeout(() => {\n      this.updateStyle()\n      this.buildTexture()\n      this.render()\n    }, 100)\n  }\n\n  public getRendererString(): string { return 'webgl' }\n\n  private buildTexture() {\n    let w = this.offscreen.width / (this.tw + this.pad),\n          h = this.offscreen.height / (this.th + this.pad)\n    // Check if need to resize the canvas\n    const charCount = this.charArray.length\n    if (charCount > Math.floor(w) * Math.floor(h)) {\n      w = Math.ceil(Math.sqrt(charCount))\n      h = w + 2 // Allocate some extra space too\n      this.offscreen.width = w * (this.tw + this.pad)\n      this.offscreen.height = h * (this.th + this.pad)\n      this.updateStyle()\n      this.gl.uniform2f(this.tileCountsLocation, w, h)\n    }\n    this.gl.uniform2f(this.paddingLocation, this.pad / this.offscreen.width, this.pad / this.offscreen.height)\n\n    let c = 0, ch: string\n    this.ctx.fillStyle = '#000000'\n    this.ctx.fillRect(0, 0, this.offscreen.width, this.offscreen.height)\n    this.ctx.fillStyle = '#ffffff'\n\n    const halfGap = 0.5 * this.gap // Squarification\n    const tw = this.tw + this.pad,\n          th = this.th + this.pad\n    let y = 0.5 * th // Half because textBaseline is middle\n    for (let j = 0; j < h; ++j) {\n      let x = this.pad * 0.5\n      for (let i = 0; i < w; ++i, ++c) {\n        ch = this.charArray[c]\n        if (ch === undefined) break\n        this.ctx.fillText(ch, x + halfGap, y)\n        x += tw\n      }\n      if (!ch) break\n      y += th\n    }\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.offscreen)\n  }\n\n  private cacheChars(chars: string, build: boolean = true) {\n    if (!this.gl) return // Nothing to do if not using WebGL renderer\n    let changed = false\n    for (let i = 0; i < chars.length; ++i) {\n      if (!this.charMap[chars[i]]) {\n        changed = true\n        this.charArray.push(chars[i])\n        this.charMap[chars[i]] = this.charArray.length - 1\n      }\n    }\n\n    if (changed && build) this.buildTexture()\n  }\n\n  public updateStyle(s?: any) {\n    s = s || window.getComputedStyle(this.view.elem, null)\n    this.ctx.font = s.fontSize + '/' + s.lineHeight + ' ' + s.fontFamily\n    this.ctx.textBaseline = 'middle'\n    this.ctx.fillStyle = '#ffffff'\n    this.tw = this.ctx.measureText('幅').width // TODO: Make a parameter\n    this.th = parseInt(s.fontSize, 10)\n    this.gap = this.view.squarify ? (this.th - this.tw) : 0\n    if (this.view.squarify) this.tw = this.th\n    this.pad = Math.ceil(this.th * 0.2) * 2.0 // Must be even number\n\n    const color = s.color.match(/\\d+/g)\n    const bgColor = s.backgroundColor.match(/\\d+/g)\n    this.defaultColors.r = parseInt(color[0], 10) / 255\n    this.defaultColors.g = parseInt(color[1], 10) / 255\n    this.defaultColors.b = parseInt(color[2], 10) / 255\n    this.defaultColors.br = parseInt(bgColor[0], 10) / 255\n    this.defaultColors.bg = parseInt(bgColor[1], 10) / 255\n    this.defaultColors.bb = parseInt(bgColor[2], 10) / 255\n  }\n\n  public clear() { /* No op */ }\n\n  public render() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n    const w = this.view.w,\n      h = this.view.h\n\n    // Create new tile data\n    let tiles = this.view.buffer\n    let defaultColor = this.view.defaultColor\n    let defaultBgColor = this.view.defaultBackground\n    let newChars = false\n\n    for (let j = 0; j < h; ++j) {\n      for (let i = 0; i < w; ++i) {\n        const tile = tiles[j][i]\n        let ch = this.charMap[tile.ch]\n        if (ch === undefined) { // Auto-cache new characters\n          this.cacheChars(tile.ch, false)\n          newChars = true\n          ch = this.charMap[tile.ch]\n        }\n        const k = this.attribs.color.itemSize * 6 * (j * w + i)\n        const kk = this.attribs.charIndex.itemSize * 6 * (j * w + i)\n        const r = tile.r === undefined ? this.defaultColors.r : tile.r / 255\n        const g = tile.g === undefined ? this.defaultColors.g : tile.g / 255\n        const b = tile.b === undefined ? this.defaultColors.b : tile.b / 255\n        const br = tile.br === undefined ? this.defaultColors.br : tile.br / 255\n        const bg = tile.bg === undefined ? this.defaultColors.bg : tile.bg / 255\n        const bb = tile.bb === undefined ? this.defaultColors.bb : tile.bb / 255\n        for (let m = 0; m < 6; ++m) {\n          const n = k + m * this.attribs.color.itemSize\n          this.attribs.color.data[n + 0] = r\n          this.attribs.color.data[n + 1] = g\n          this.attribs.color.data[n + 2] = b\n          this.attribs.bgColor.data[n + 0] = br\n          this.attribs.bgColor.data[n + 1] = bg\n          this.attribs.bgColor.data[n + 2] = bb\n          this.attribs.charIndex.data[kk + m] = ch\n        }\n      }\n    }\n\n    // Upload\n    if (newChars) this.buildTexture()\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.color.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.color.data, this.attribs.color.hint)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.bgColor.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.bgColor.data, this.attribs.bgColor.hint)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.charIndex.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.charIndex.data, this.attribs.charIndex.hint)\n\n    const attrib = this.attribs.position\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, attrib.data.length / attrib.itemSize)\n  }\n\n  // Setup GLSL\n  private compileShader(type: number, source: string) {\n    const shader = this.gl.createShader(type)\n    this.gl.shaderSource(shader, source)\n    this.gl.compileShader(shader)\n    const ok = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)\n    if (!ok) {\n      const msg = 'Error compiling shader: ' + this.gl.getShaderInfoLog(shader)\n      this.gl.deleteShader(shader)\n      throw msg\n    }\n    return shader\n  }\n\n  private initBuffers() {\n    let a, attrib, attribs = this.attribs\n\n    const w = this.view.w,\n          h = this.view.h\n\n    // Allocate data arrays\n    for (a in this.attribs) {\n      attrib = attribs[a]\n      attrib.data = new Float32Array(attrib.itemSize * 6 * w * h)\n    }\n    // Generate static data\n    for (let j = 0; j < h; ++j) {\n      for (let i = 0; i < w; ++i) {\n        // Position & texCoords\n        const k = attribs.position.itemSize * 6 * (j * w + i)\n        this.insertQuad(attribs.position.data, k, i * this.tw, j * this.th, this.tw, this.th)\n        this.insertQuad(attribs.texCoord.data, k, 0.0, 0.0, 1.0, 1.0)\n      }\n    }\n    // Upload\n    for (a in this.attribs) {\n      attrib = attribs[a]\n      if (attrib.buffer) this.gl.deleteBuffer(attrib.buffer)\n      attrib.buffer = this.gl.createBuffer()\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attrib.buffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, attrib.data, attrib.hint)\n      this.gl.enableVertexAttribArray(attrib.location)\n      this.gl.vertexAttribPointer(attrib.location, attrib.itemSize, this.gl.FLOAT, false, 0, 0)\n    }\n  }\n\n  private insertQuad(arr: number[], i: number, x: number, y: number, w: number, h: number) {\n    const x1 = x,\n          y1 = y,\n          x2 = x + w,\n          y2 = y + h\n\n    arr[  i] = x1\n    arr[++i] = y1\n    arr[++i] = x2\n    arr[++i] = y1\n    arr[++i] = x1\n    arr[++i] = y2\n    arr[++i] = x1\n    arr[++i] = y2\n    arr[++i] = x2\n    arr[++i] = y1\n    arr[++i] = x2\n    arr[++i] = y2\n  }\n}\n\nexport const webGLRenderer = function(viewport: Viewport): Renderer {\n  return new WebGLRenderer(viewport)\n}\n","import { Creature } from '../creature'\n\nexport enum ItemGroup {\n  Armor,\n  Weapon,\n  Corpse,\n}\n\nexport enum ItemKind {\n  Katana,\n  Corpse\n}\n\nexport type ItemId = number\n\nexport class Item {\n  private static lastId: ItemId = 0\n  public static getId(): ItemId {\n    return this.lastId++\n  }\n\n  constructor(\n    public group: ItemGroup,\n    public kind: ItemKind,\n    public name: string,\n    public id: ItemId = Item.getId(),\n  ) {\n  }\n\n  public clone(): Item {\n    return new Item(\n      this.group,\n      this.kind,\n      this.name,\n    )\n  }\n}\n\nexport class Corpse extends Item {\n  constructor(creature: Creature) {\n    super(\n      ItemGroup.Corpse,\n      ItemKind.Corpse,\n      'corpse',\n    )\n  }\n}\n","import {\n  Item,\n  ItemId,\n  ItemGroup,\n  ItemKind,\n} from './internal'\n\nexport abstract class Weapon extends Item {\n  constructor(kind: ItemKind, name: string) {\n    super(\n      ItemGroup.Weapon,\n      kind,\n      name,\n    )\n  }\n}\n\nexport class Katana extends Weapon {\n  constructor() {\n    super(\n      ItemKind.Katana,\n      'Katana',\n    )\n  }\n}\n","import { Tile } from '../../vendor/unicodetiles.ts/src/index'\n\nimport {\n  Item,\n  ItemId,\n  ItemGroup,\n  ItemKind,\n\n  Katana,\n  Corpse,\n} from '../items'\n\nconst DEFAULT_GREY: number = 120\nconst IMPORTANT_GREY: number = 180\nconst DEFAULT_LIT = { r: 255, g: 165, b: 0 }\n\nclass DisplayTile extends Tile {\n  public lighted(degree: number): Tile {\n    return this\n  }\n\n  constructor(char: string, r = DEFAULT_GREY, g = DEFAULT_GREY, b = DEFAULT_GREY) {\n    super(char, r, g, b)\n  }\n\n  protected litBackground(tile: Tile, degree: number): Tile {\n    tile.setBackground(\n      DEFAULT_LIT.r * degree,\n      DEFAULT_LIT.g * degree,\n      DEFAULT_LIT.b * degree,\n    )\n    return tile\n  }\n\n  protected litColor(tile: Tile, degree: number): Tile {\n    tile.setColor(\n      DEFAULT_LIT.r * degree,\n      DEFAULT_LIT.g * degree,\n      DEFAULT_LIT.b * degree,\n    )\n    return tile\n  }\n}\n\nabstract class ImportantTile extends DisplayTile {\n  constructor(char: string) {\n    super(char, IMPORTANT_GREY, IMPORTANT_GREY, IMPORTANT_GREY)\n  }\n}\n\nexport class CreatureTile extends ImportantTile {\n  constructor(\n    char: string,\n    public vr: number,\n    public vg: number,\n    public vb: number,\n  ) {\n    super(char)\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    tile.setColor(this.vr, this.vg, this.vb)\n\n    return tile\n  }\n}\n\nexport class DoorTile extends DisplayTile {\n  constructor() {\n    super('戸')\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    this.litColor(tile, degree)\n    tile.swapColors()\n\n    return tile\n  }\n}\n\nexport class FloorTile extends DisplayTile {\n  constructor() {\n    super('・')\n  }\n\n  public lighted(degree: number) {\n    return this.litColor(this.clone(), degree)\n  }\n}\n\nexport class WallTile extends DisplayTile {\n  constructor() {\n    super('＃')\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    this.litBackground(tile, degree)\n    tile.backgroundToColor()\n\n    return tile\n  }\n}\n\nexport class ItemTile extends DisplayTile {\n  constructor(\n    char: string,\n    public vr: number,\n    public vg: number,\n    public vb: number,\n  ) {\n    super(char)\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    tile.setColor(this.vr, this.vg, this.vb)\n\n    return tile\n  }\n}\n\nconst KATANA = new ItemTile('刀', 200, 200, 200)\nconst CORPSE = new ItemTile('％', 200, 200, 200)\n\nexport const displayItem = function(item: Item) {\n  switch (item.kind) {\n    case ItemKind.Katana:\n      return KATANA\n    case ItemKind.Corpse:\n      return CORPSE\n    default:\n      throw `Unknow item ${item} with type ${item.kind}`\n  }\n}\n","export class Rect {\n  x: number\n  y: number\n  w: number\n  h: number\n\n  constructor( x: number, y: number, w: number, h: number ) {\n    // TODO: Validate?\n    this.x = x\n    this.y = y\n    this.w = w\n    this.h = h\n  }\n\n  move( x: number, y: number ): void {\n    this.x += x\n    this.y += y\n  }\n}\n\nexport const succ = function ( c: string ): string {\n  return String.fromCharCode( c.charCodeAt( 0 ) + 1 )\n}\n\nexport const rand = function ( max: number ): number {\n  return Math.floor( Math.random() * max )\n}\n\n/* tslint:disable no-any */\nexport const twoDimArray = function ( dimX: number, dimY: number,\n                                      value: ( x: number, y: number ) => any ): Array<Array<any>> {\n  let field = Array( dimX )\n\n  let i = 0\n  while ( i < dimX ) {\n    field[i] = new Array(dimY)\n    let j = 0\n    while ( j < dimY ) {\n      field[i][j] = value( i, j )\n      j++\n    }\n    i++\n  }\n\n  return field\n}\n\nexport const max = function( list: Array< number > ): number {\n  return Math.max.apply( Math, list )\n}\n\nexport const min = function( list: Array< number > ): number {\n  return Math.min.apply( Math, list )\n}\n\nexport class Point {\n  constructor(\n    public x: number,\n    public y: number,\n  ) {\n  }\n\n  public static readonly dxy = [\n    new Point(-1, -1), new Point(0, -1), new Point(1, -1),\n    new Point(-1,  0),                   new Point(1,  0),\n    new Point(-1,  1), new Point(0,  1), new Point(1,  1),\n  ]\n\n  public eq(point: Point): boolean {\n    return this.x === point.x && this.y === point.y\n  }\n\n  public nextTo(point: Point): boolean {\n    return Math.abs(this.x - point.x) <= 1 && Math.abs(this.y - point.y) <= 1\n  }\n\n  public copy(): Point {\n    return new Point(this.x, this.y)\n  }\n\n  public add(point: Point): Point {\n    return new Point(this.x + point.x, this.y + point.y)\n  }\n\n  public wrappers(): Point[] {\n    return Point.dxy.map(point => this.add(point))\n  }\n}\n\nexport abstract class Mapped<T> {\n  public readonly width: number\n  public readonly height: number\n\n  constructor(protected map: T[][]) {\n    this.width  = map[0].length\n    this.height = map.length\n  }\n\n  public at(x, y): T {\n    return this.map[y][x]\n  }\n}\n","import { Point, twoDimArray } from '../utils'\nimport { Creature, MemoryTile } from '../creature'\n\nimport { sample } from 'lodash'\n\nconst FIRST_STEP: number = 1\n\nexport abstract class AI {\n  constructor(public prevAI?: AI) {\n  }\n\n  public abstract act(actor: Creature, firstTurn: boolean): void\n\n  public abstract available(actor: Creature): boolean\n\n  protected moveTo(actor: Creature, destination: Point): boolean {\n    const path = this.leePath(\n      actor,\n      point => destination.eq(point),\n    )\n\n    if (path.length) {\n      actor.move(path[0])\n    }\n\n    return !!path.length\n  }\n\n  protected followTo(actor: Creature, destination: Point): boolean {\n    const path = this.leePath(\n      actor,\n      point => destination.nextTo(point),\n    )\n\n    if (path.length) {\n      actor.move(path[0])\n    }\n\n    return !!path.length\n  }\n\n  protected leePath(\n    actor: Creature,\n    destination: (point: Point, tile: MemoryTile) => boolean,\n    randomDestination: boolean = false,\n  ): Point[] {\n    const map = actor.stageMemory()\n\n    let stageMemory: number[][] = twoDimArray(map.height, map.width, () => undefined)\n    let pointsToVisit: Point[] = []\n    let pointsToCheck: Point[] = [actor.pos]\n\n    let step = 0\n    while ( pointsToCheck.length && !pointsToVisit.length ) {\n      let wavePoints: Array< Point > = []\n\n      pointsToCheck.forEach( ( point: Point ) => {\n        if (!map.inRange(point)) {\n          return\n        }\n\n        const tile = map.at(point.x ,  point.y)\n        // TODO: Compare, current value might be lower\n        if (tile.tangible(actor) ||\n            stageMemory[ point.x ][ point.y ] !== undefined ) {\n          return\n        }\n\n        stageMemory[ point.x ][ point.y ] = step\n        if (destination(point, tile)) {\n          pointsToVisit.push( point )\n        } else {\n          point.wrappers().forEach(dist => wavePoints.push(dist))\n        }\n      })\n      step++\n\n      pointsToCheck = wavePoints\n    }\n\n    if (pointsToVisit.length) {\n      if (randomDestination) {\n        return this.buildRoad(sample(pointsToVisit), stageMemory)\n      } else {\n        return this.buildRoad(pointsToVisit[0], stageMemory)\n      }\n    } else {\n      return []\n    }\n  }\n\n  private buildRoad(point: Point, stageMemory: number[][]): Point[] {\n    let lastPoint = point\n    let chain = [lastPoint]\n\n    let delta: Point = undefined\n\n    while ( stageMemory[ lastPoint.x ][ lastPoint.y ] !== FIRST_STEP ) {\n      delta = Point.dxy.find( ( dp ): boolean => {\n        return stageMemory[ lastPoint.x + dp.x ] &&\n          ( stageMemory[ lastPoint.x + dp.x ][ lastPoint.y + dp.y ] === stageMemory[ lastPoint.x ][ lastPoint.y ] - 1 )\n      })\n\n      if (!delta) {\n        return []\n      }\n\n      lastPoint = lastPoint.add(delta)\n\n      chain.unshift(lastPoint)\n    }\n\n    return chain\n  }\n\n  protected withinView(\n    actor: Creature,\n    visit: (point: Point, tile: MemoryTile) => void,\n  ): void {\n    const map = actor.stageMemory()\n\n    let tileVisited: boolean[][] = twoDimArray(map.height, map.width, () => false)\n    let pointsToCheck: Point[] = [actor.pos]\n\n    while (pointsToCheck.length) {\n      let wavePoints: Array< Point > = []\n\n      pointsToCheck.forEach((point: Point) => {\n        if (!map.inRange(point)) {\n          return\n        }\n\n        const tile = map.at(point.x ,  point.y)\n        if (!tile.visible || tileVisited[point.x][point.y]) {\n          return\n        }\n\n        tileVisited[point.x][point.y] = true\n\n        visit(point, tile)\n\n        point.wrappers().forEach(dist => wavePoints.push(dist))\n      })\n\n      pointsToCheck = wavePoints\n    }\n  }\n}\n","export class Fov {\n  private doubleRadius: number\n\n  constructor(\n    private startx: number,\n    private starty: number,\n    private radius: number,\n    private width: number,\n    private height: number,\n    private checkSolid: (x: number, y: number) => boolean,\n    private markVisible: (x: number, y: number, degree: number) => void,\n  ) {\n    this.doubleRadius = this.radius * this.radius\n  }\n\n  public calc(): void {\n    this.markVisible(this.startx, this.starty, 1)\n\n    if (!this.checkSolid(this.startx, this.starty)) {\n      [[1, 1], [1, -1], [-1, 1], [-1, -1]].forEach(([dx, dy]) => {\n        this.castLight(1, 1.0, 0.0, 0, dx, dy, 0)\n        this.castLight(1, 1.0, 0.0, dx, 0, 0, dy)\n      })\n    }\n  }\n\n  private castLight(row: number, start: number, end: number, xx: number, xy: number, yx: number, yy: number) {\n    if (start < end) { return }\n\n    let newStart = 0.0\n    let blocked = false\n\n    for (let distance = row; distance <= this.radius && !blocked; distance++) {\n      let deltaY = -distance\n\n      for (let deltaX: number = -distance; deltaX <= 0; deltaX++) {\n        let currentX = Math.round(this.startx + deltaX * xx + deltaY * xy)\n        let currentY = Math.round(this.starty + deltaX * yx + deltaY * yy)\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5)\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5)\n\n        if (!(currentX >= 0 && currentY >= 0 && currentX < this.width && currentY < this.height) || start < rightSlope) {\n          continue\n        } else if (end > leftSlope) {\n          break\n        }\n\n        // check if it's within the lightable area and light if needed\n        if (this.doubleDistance(deltaX, deltaY) <= this.doubleRadius) {\n          this.markVisible(\n            currentX,\n            currentY,\n            1 - this.doubleDistance(deltaX, deltaY) / this.doubleRadius,\n          )\n        }\n\n        if (blocked) { // previous cell was a blocking one\n          if (this.checkSolid(currentX, currentY)) { // hit a wall\n            newStart = rightSlope\n          } else {\n            blocked = false\n            start = newStart\n          }\n        } else {\n          if (this.checkSolid(currentX, currentY) && distance < this.radius) { // hit a wall within sight line\n              blocked = true\n              this.castLight(distance + 1, start, leftSlope, xx, xy, yx, yy)\n              newStart = rightSlope\n          }\n        }\n      }\n    }\n  }\n\n  private doubleDistance(x: number, y: number): number {\n    return x * x + y * y\n  }\n}\n","import { Phantom, Creature } from './creature'\nimport { Item, Corpse } from './items'\nimport { Point, Mapped } from './utils'\n\nexport enum TileTypes {\n  Wall,\n  Door,\n  Floor,\n}\n\nimport { remove } from 'lodash'\n\nexport class Tile {\n  public creature?: Phantom\n  public item?: Item\n\n  private static repository: { [key: string]: Tile } = {}\n\n  public static retrive(key: string): Tile {\n    let tile = this.repository[key]\n\n    switch (key) {\n      case 'R':\n        return new Tile('R', ' ', TileTypes.Floor)\n      case 'C':\n        return new Tile('C', ' ', TileTypes.Floor)\n      case 'W':\n        return new Tile('W', '#', TileTypes.Wall)\n      case 'D':\n        return new Tile('D', '+', TileTypes.Door)\n      default:\n        throw `Tile '${key}' is not registered!`\n    }\n  }\n\n  private constructor(\n    public key: string,\n    public display: string,\n    private kind: TileTypes,\n  ) {\n  }\n\n  public isDoor(): boolean {\n    return this.kind === TileTypes.Door\n  }\n\n  public isWall(): boolean {\n    return this.kind === TileTypes.Wall\n  }\n\n  public visibleThrough(): boolean {\n    return this.kind === TileTypes.Floor\n  }\n\n  public passibleThrough(actor?: Creature): boolean {\n    if (actor && this.creature) {\n      return (this.kind !== TileTypes.Wall) && this.creature.id === actor.id\n    }\n\n    return (this.kind !== TileTypes.Wall) && (!this.creature)\n  }\n\n  public clone(): Tile {\n    let tile = Tile.retrive(this.key)\n    if (this.creature) {\n      tile.creature = this.creature.clone()\n    }\n    if (this.item) {\n      tile.item = this.item.clone()\n    }\n    return tile\n  }\n\n  protected uniq(): boolean {\n    return this.creature !== undefined\n  }\n}\n\nexport type LevelMapId = number\n\nexport class LevelMap extends Mapped<Tile> {\n  public creatures: Creature[] = []\n  public id: LevelMapId\n\n  private static lastId: LevelMapId = 0\n  public static getId(): LevelMapId {\n    return this.lastId++\n  }\n\n  constructor(map: Tile[][]) {\n    super(map)\n    this.id = LevelMap.getId()\n  }\n\n  public addCreature(creature: Creature) {\n    this.creatures.push(creature)\n    // TODO fail if taken\n    this.at(creature.pos.x, creature.pos.y).creature = creature\n  }\n\n  public removeCreature(creature: Creature) {\n    let tile = this.at(creature.pos.x, creature.pos.y)\n    tile.creature = undefined\n    tile.item = new Corpse(creature)\n    remove(this.creatures, c => c.id === creature.id)\n  }\n\n  public visibleThrough(x: number, y: number): boolean {\n    return this.map[y][x].visibleThrough()\n  }\n\n  public passibleThrough(x: number, y: number): boolean {\n    return this.map[y][x].passibleThrough()\n  }\n\n  public at(x, y): Tile {\n    return this.map[y][x]\n  }\n\n  public setTile(x, y, tile: Tile): void {\n    this.map[y][x] = tile\n  }\n\n  public inRange(point: Point): boolean {\n    return point.x >= 0         && point.y >= 0\n        && point.x < this.width && point.y < this.height\n  }\n\n  public turn(): void {\n    this.creatures.forEach((creature) => creature.act(this))\n    this.creatures.forEach((creature) => creature.visionMask(this))\n  }\n}\n","import { Mapped, Point, twoDimArray } from './utils'\nimport { AI } from './ai'\nimport { Fov } from './fov'\n\nimport { LevelMap, LevelMapId, Tile } from './map'\n\nexport class MemoryTile  {\n  public visible: boolean = false\n  public degree: number = 0\n  public seen: boolean = false\n\n  constructor(\n    public tile?: Tile,\n  ) {\n  }\n\n  public see(tile: Tile, degree: number) {\n    this.visible = true\n    this.degree = degree\n    this.seen = true\n    this.tile = tile.clone()\n  }\n\n  public tangible(actor?: Creature): boolean {\n    return this.seen && !this.tile.passibleThrough(actor)\n  }\n\n  public creature(): Phantom {\n    return this.tile && this.tile.creature\n  }\n\n  public reset(): void {\n    this.visible = false\n    this.tile.creature = undefined\n  }\n}\n\nexport class Memory extends Mapped<MemoryTile> {\n  constructor(\n    width: number,\n    height: number,\n  ) {\n    const baseTile = Tile.retrive('W')\n    super(twoDimArray(height, width, () => new MemoryTile(baseTile)))\n  }\n\n  public inRange(point: Point): boolean {\n    return point.x >= 0         && point.y >= 0\n        && point.x < this.width && point.y < this.height\n  }\n\n  public resetVisible(): void {\n    this.map.forEach((row) => {\n      row.forEach((tile) => {\n        tile.reset()\n      })\n    })\n  }\n}\n\nexport type CreatureId = number\n\nexport class Phantom {\n  private static lastId: CreatureId = 0\n  public static getId(): CreatureId {\n    return this.lastId++\n  }\n\n  public pos: Point\n  public refToReal?: Creature\n\n  constructor(\n    x: number,\n    y: number,\n    public id: CreatureId = Phantom.getId(),\n  ) {\n    this.pos = new Point(x, y)\n  }\n\n  public clone(): Phantom {\n    return new Phantom(this.pos.x, this.pos.y, this.id)\n  }\n\n  public real(): Creature {\n    return this.refToReal\n  }\n}\n\nexport abstract class Event {\n  public abstract affect(actor: Creature): Reaction\n}\n\nexport class Attack {\n  constructor(public damage: number) {}\n\n  public affect(actor: Creature): Reaction {\n    actor.die()\n    return Reaction.DIE\n  }\n}\n\nexport enum EventType {\n  Attack,\n}\n\nexport enum Reaction {\n  DIE,\n}\n\nexport class Creature extends Phantom {\n  ai: AI\n  public stageMemories: { [key: string]: Memory } = {}\n  public previousPos: Point\n  private currentLevel: LevelMap\n\n  constructor(\n    x: number,\n    y: number,\n    public radius: number,\n    level: LevelMap,\n    ai: AI,\n  ) {\n    super(x, y)\n    this.previousPos = this.pos.copy()\n    this.currentLevel = level\n    this.visionMask(level)\n    level.addCreature(this)\n    this.ai = ai\n  }\n\n  public emit(eventType: EventType): Event {\n    switch (eventType) {\n    case EventType.Attack:\n      return new Attack(10)\n    default:\n      throw `Unknow event type ${eventType} for ${this}`\n    }\n  }\n\n  public die(): void {\n    this.currentLevel.removeCreature(this)\n  }\n\n  public on(event: Event): Reaction {\n    return event.affect(this)\n  }\n\n  public real(): Creature {\n    return this\n  }\n\n  public stageMemory(levelId: LevelMapId = this.currentLevel.id): Memory {\n    return this.stageMemories[levelId]\n  }\n\n  public act(stage: LevelMap): void {\n    this.visionMask(stage)\n    this.previousPos = this.pos.copy()\n    this.ai.act(this, true)\n    stage.at(this.previousPos.x, this.previousPos.y).creature = undefined\n    stage.at(this.pos.x, this.pos.y).creature = this\n  }\n\n  public move(nextPoint: Point) {\n    this.pos = nextPoint.copy()\n  }\n\n  public clone(): Phantom {\n    let phantom = new Phantom(this.pos.x, this.pos.y, this.id)\n    phantom.refToReal = this\n    return phantom\n  }\n\n  public visionMask(stage: LevelMap): void {\n    if (!this.stageMemories[stage.id]) {\n      this.stageMemories[stage.id] = new Memory(stage.width, stage.height)\n    } else {\n      this.stageMemory().resetVisible()\n    }\n\n    const see = (x: number, y: number, degree: number): void => {\n      this.stageMemory().at(x, y).see(stage.at(x, y), degree)\n    }\n\n    new Fov(\n      this.pos.x,\n      this.pos.y,\n      this.radius,\n      stage.width,\n      stage.height,\n      this.isSolid(stage),\n      see,\n    ).calc()\n  }\n\n  private isSolid(stage: LevelMap): (x: number, y: number) => boolean {\n    return (x: number, y: number) => {\n      if (stage.visibleThrough(x, y)) {\n        return false\n      } else {\n        return !(stage.at(x, y).isDoor() && this.pos.x === x && this.pos.y === y)\n      }\n    }\n  }\n}\n","import { AI } from './internal'\nimport { Phantom, Creature, Event, EventType, Reaction } from '../creature'\nimport { Point } from '../utils'\n\nexport class Attacker extends AI {\n  private victim?: Creature\n\n  public available(actor: Creature): boolean {\n    return this.canAttack(actor)\n  }\n\n  public act(actor: Creature, firstTurn: boolean = true): void {\n    if (this.victimSet() && this.victimInAccess(actor)) {\n      this.attack(actor)\n    } else {\n      if (!firstTurn) {\n        throw 'Attacker got called twice'\n      }\n\n      this.findNewVictim(actor)\n      this.act(actor, false)\n    }\n  }\n\n  protected attack(actor: Creature) {\n    if (this.victim.on(actor.emit(EventType.Attack)) === Reaction.DIE) {\n      this.victim = undefined\n    }\n  }\n\n  private canAttack(actor: Creature): boolean {\n    const memory = actor.stageMemory()\n    return actor.pos.wrappers().some(({ x, y }) => memory.at(x, y).creature() !== undefined)\n  }\n\n  private victimInAccess(actor: Creature): boolean {\n    const memory = actor.stageMemory()\n    return actor.pos.wrappers().some(({ x, y }) => memory.at(x, y).creature() && memory.at(x, y).creature().id === this.victim.id)\n  }\n\n  private victimSet(): boolean {\n    return this.victim !== undefined\n  }\n\n  private updateVictimPosition(actor: Creature) {\n    this.findCreature(\n      actor,\n      creature => creature.id === this.victim.id,\n    )\n  }\n\n  private findNewVictim(actor: Creature) {\n    this.findCreature(\n      actor,\n      creature => creature.id !== actor.id\n    )\n  }\n\n  private findCreature(\n    actor: Creature,\n    condition: (creature: Phantom) => boolean,\n  ): boolean {\n    this.withinView(\n      actor,\n      ({ x, y }, tile) => {\n        const creature = tile.creature()\n\n        if (creature && condition(creature)) {\n          this.victim = creature.real()\n          return true\n        }\n      }\n    )\n\n    return false\n  }\n}\n\n","import { AI } from './internal'\nimport { Phantom, Creature, CreatureId } from '../creature'\nimport { Point } from '../utils'\n\nexport class Chaser extends AI {\n  private victimPos?: Point\n  private victimId?: CreatureId\n\n  public available(actor: Creature): boolean {\n    return true\n  }\n\n  public act(actor: Creature): void {\n    if (this.victimSet()) {\n      this.updateVictimPosition(actor)\n      this.chase(actor)\n    } else if (this.foundNewVictim(actor)) {\n      this.chase(actor)\n    } else if (this.victimPos) {\n      if (this.moveTo(actor, this.victimPos) && this.victimPos.eq(actor.pos)) {\n        this.victimPos = undefined\n      }\n    }\n\n    if (this.victimSet() && this.caught(actor)) {\n      this.resetVictim()\n      // TODO: Loit here\n    } else {\n      // TODO: Loit here\n    }\n  }\n\n  private victimSet(): boolean {\n    return this.victimId !== undefined\n  }\n\n  private updateVictimPosition(actor: Creature) {\n    this.findCreature(\n      actor,\n      creature => creature.id === this.victimId,\n    )\n  }\n\n  private chase(actor: Creature): void {\n    this.followTo(actor, this.victimPos)\n  }\n\n  private foundNewVictim(actor: Creature): boolean {\n    return this.findCreature(\n      actor,\n      creature => creature.id !== actor.id\n    )\n  }\n\n  private caught(actor: Creature): boolean {\n    return actor.pos.nextTo(this.victimPos)\n  }\n\n  private resetVictim(): void {\n    this.victimId = undefined\n  }\n\n  private findCreature(\n    actor: Creature,\n    condition: (creature: Phantom) => boolean,\n  ): boolean {\n    this.withinView(\n      actor,\n      ({ x, y }, tile) => {\n        const creature = tile.creature()\n\n        if (creature && condition(creature)) {\n          this.victimPos = new Point(x, y)\n          this.victimId = creature.id\n          return true\n        }\n      }\n    )\n\n    return false\n  }\n}\n","import {\n  AI,\n  Attacker,\n  Chaser,\n  Escaper,\n  Explorer,\n} from '../ai'\nimport { Creature } from '../creature'\n\nexport class Dispatcher extends AI {\n  private events: Event[] = []\n\n  private escaper:  Escaper\n  private explorer: Explorer\n  private chaser: Chaser\n  private attacker: Attacker\n\n  constructor() {\n    super()\n    this.escaper  = new Escaper(this)\n    this.explorer = new Explorer(this)\n    this.chaser   = new Chaser(this)\n    this.attacker = new Attacker(this)\n  }\n\n  public available(actor: Creature): boolean {\n    return true\n  }\n\n  public act(actor: Creature, firstTurn: boolean = true): void {\n    // Never dispatch twice\n    if (!firstTurn) {\n      throw 'Meta AI called recursively'\n    }\n\n    if (this.feelsGood(actor)) {\n      if (this.enemyClose(actor)) {\n        this.attack(actor)\n      } else {\n        this.explore(actor)\n      }\n    } else if (this.enemyClose(actor)) {\n      this.runAway(actor)\n    } else {\n      this.rest(actor)\n    }\n\n    this.events = []\n  }\n\n  private feelsGood(actor: Creature): boolean {\n    return true /////////////////////\n  }\n\n  private enemyClose(actor: Creature): boolean {\n    return this.escaper.available(actor)\n  }\n\n  private attack(actor: Creature): void {\n    if (this.attacker.available(actor)) {\n      this.attacker.act(actor)\n    } else {\n      this.chaser.act(actor)\n    }\n  }\n\n  private explore(actor: Creature): void {\n    this.explorer.act(actor)\n  }\n\n  private runAway(actor: Creature): void {\n    this.escaper.act(actor)\n  }\n\n  private rest(actor: Creature): void {\n  }\n}\n","import { AI } from './internal'\nimport { Loiter } from '../ai'\nimport { Phantom, Creature, CreatureId } from '../creature'\nimport { Point } from '../utils'\n\nimport { sumBy } from 'lodash'\n\nconst STEP_DISTANCE = 2\n\nexport class Escaper extends AI {\n  private escapesFrom: Phantom[] = []\n  private runningTo?: Point\n\n  public available(actor: Creature): boolean {\n    return this.foundEnemies(actor)\n  }\n\n  public act(actor: Creature): void {\n    if (this.foundEnemies(actor)) {\n      this.buildPath(actor)\n    }\n\n    if (this.runningTo) {\n      if (this.moveTo(actor, this.runningTo) && this.runningTo.eq(actor.pos)) {\n        this.runningTo = undefined\n      }\n    } else {\n      actor.ai = new Loiter(this)\n    }\n  }\n\n  private buildPath(\n    actor: Creature,\n    minDistance: number = actor.radius / 2,\n  ): void {\n    if (minDistance <= 1) {\n      this.runningTo = undefined\n      return\n    }\n\n    const path = this.leePath(\n      actor,\n      ({ x, y }) => {\n        const score = sumBy(this.escapesFrom, enemy => {\n          // I don't use pathfinding since it should try\n          // to run away from those who are visible, so the path\n          // to them should be straightforward.\n          return Math.max(Math.abs(x - enemy.pos.x), Math.abs(y - enemy.pos.y))\n        })\n\n        return score >= minDistance\n      },\n      true,\n    )\n\n    if (path.length) {\n      this.runningTo = path.pop()\n    } else {\n      this.buildPath(actor, minDistance - STEP_DISTANCE)\n    }\n  }\n\n  private foundEnemies(\n    actor: Creature,\n  ): boolean {\n    this.escapesFrom = []\n\n    this.withinView(\n      actor,\n      (point, tile) => {\n        const creature = tile.creature()\n\n        if (creature && creature.id !== actor.id) {\n          this.escapesFrom.push(creature)\n        }\n      }\n    )\n\n    return this.escapesFrom.length > 0\n  }\n}\n","import { AI, Patrol, Loiter } from '../ai'\n\nimport { Point, twoDimArray } from '../utils'\nimport { Creature } from '../creature'\n\nconst NEW_POINT_EVERY: number = 10\n\nexport class Explorer extends AI {\n  path: Point[] = []\n  private step: number = NEW_POINT_EVERY\n  public patrol: Patrol\n\n  public available(actor: Creature): boolean {\n    if (this.path.length) {\n      return true\n    } else {\n      this.buildNewPath(actor)\n      return this.path.length > 0\n    }\n  }\n\n  act(actor: Creature, firstTurn: boolean = true): void {\n    if (this.step >= NEW_POINT_EVERY ) {\n      this.updatePatrol( actor )\n    }\n\n    if (this.path.length) {\n      const nextPoint: Point = this.path.shift()\n      if (actor.stageMemory().at(nextPoint.x, nextPoint.y).tangible(actor)) {\n        this.path = []\n        if (firstTurn) {\n          this.act(actor, false)\n        }\n      } else {\n        this.step++\n\n        actor.move(nextPoint)\n\n        if (this.shouldAddNode(actor)) {\n          this.updatePatrol(actor)\n        }\n      }\n    } else {\n      this.buildNewPath(actor)\n      if (this.path.length) {\n        if (firstTurn) {\n          this.act(actor, false)\n        }\n      } else if (this.patrol.available(actor)) {\n        // Logger.info( \"I'm done, time to patrol\" )\n        this.patrol.addNode( actor.pos.x, actor.pos.y )\n        actor.ai = this.patrol\n        actor.ai.act(actor, false)\n      } else {\n        actor.ai = new Loiter(this)\n      }\n    }\n  }\n\n  private buildNewPath( actor: Creature ): void {\n    this.path = this.leePath( actor, point => {\n      return !actor.stageMemory().at(point.x, point.y).seen\n    })\n  }\n\n  private updatePatrol( actor: Creature ): void {\n    if (this.patrol === undefined) {\n      this.patrol = new Patrol( actor.pos.x, actor.pos.y )\n    } else {\n      this.patrol.addNode( actor.pos.x, actor.pos.y )\n    }\n\n    this.step = 0\n  }\n\n  private shouldAddNode(actor: Creature): boolean {\n    return actor.stageMemory().at(actor.previousPos.x, actor.previousPos.y).tile.isDoor()\n  }\n}\n","import { AI } from './internal'\nimport { Creature } from '../creature'\n\nexport class Loiter extends AI {\n  private turns: number = 0\n\n  act(actor: Creature, firstTurn: boolean = true): void {\n    if (this.turns > 1) {\n      actor.ai = this.prevAI\n      this.prevAI.act(actor, false)\n      return\n    }\n\n    const path = this.leePath(\n      actor,\n      point => !actor.pos.eq(point),\n      true,\n    )\n\n    if (path.length) {\n      this.turns += 1\n      actor.move(path[0])\n    }\n  }\n\n  public available(actor: Creature): boolean {\n    return true\n  }\n}\n","import { AI } from './internal'\n\nimport { Point, rand, succ } from '../utils'\nimport { Creature } from '../creature'\n\nimport { Loiter } from './loiter'\n\nimport * as graphlib from 'graphlib'\n\ntype NodeID = string\n\nexport class Patrol extends AI {\n  private i: NodeID\n  private step: number\n  private graph: graphlib.Graph\n  private lastNodeVisit: { [ key: string ]: number }\n  private currentNodeID: NodeID\n  private targetNodeID: NodeID\n  private path: Point[]\n\n  constructor( x: number, y: number ) {\n    super()\n    this.i = 'a'\n\n    this.step = 0\n    this.graph = new graphlib.Graph()\n\n    this.addNode( x, y, false )\n    this.lastNodeVisit = {}\n\n    this.markNodeVisited( this.currentNodeID )\n    this.path = []\n  }\n\n  public available(actor: Creature): boolean {\n    return this.graph.nodes().length > 1\n  }\n\n  public act(actor: Creature, firstTurn: boolean = true): void {\n    if ( this.path.length ) {\n      this.moveToTarget( actor, firstTurn )\n    } else {\n      if ( this.targetNodeID ) {\n        this.markNodeVisited( this.targetNodeID )\n        this.currentNodeID = this.targetNodeID\n      }\n\n      this.pickUpNewTarget( actor )\n      this.moveToTarget( actor, firstTurn )\n    }\n    this.step += 1\n  }\n\n  // TODO: If close enough to another node, use it instead.\n  public addNode( x: number, y: number, withEdge: boolean = true ): void {\n    this.graph.setNode( this.i, new Point(x, y))\n    if ( withEdge ) {\n      this.graph.setEdge( this.currentNodeID, this.i )\n    }\n    this.currentNodeID = this.i\n    this.i = succ( this.i )\n  }\n\n  private buildNewPath( actor: Creature ): void {\n    const pos: Point = this.graph.node( this.targetNodeID )\n\n    this.path = this.leePath(actor, point => pos.eq(point))\n  }\n\n  private pickUpNewTarget( actor: Creature ): void {\n    let seenLastID: NodeID = this.graph.nodes()[0]\n    let seenLastStep: number = this.lastNodeVisit[ seenLastID ]\n\n    this.graph.neighbors( this.currentNodeID ).forEach( ( nodeID: NodeID ) => {\n      if (seenLastStep > (this.lastNodeVisit[ nodeID ] || 0)) {\n        seenLastID = nodeID\n        seenLastStep = this.lastNodeVisit[ seenLastID ]\n      }\n    })\n\n    this.targetNodeID = seenLastID\n    this.buildNewPath( actor )\n  }\n\n  private moveToTarget( actor: Creature, firstTurn: boolean ): void {\n    const nextPoint: Point = this.path.shift()\n\n    if (!nextPoint) {\n      actor.ai = new Loiter(this)\n    } else if ( actor.stageMemory().at(nextPoint.x,  nextPoint.y).tangible() ) {\n      this.buildNewPath\n\n      if (this.path.length) {\n        return this.act( actor, false )\n      }\n\n      let explorer = new Loiter(this)\n\n      if (explorer.available(actor)) {\n        actor.ai = explorer\n        explorer.act(actor)\n      }\n    } else {\n      actor.move(nextPoint)\n    }\n  }\n\n  private markNodeVisited( nodeID: NodeID ): void {\n    this.lastNodeVisit[ nodeID ] = this.step\n  }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport {\n  domRenderer,\n  canvasRenderer,\n  webGLRenderer,\n  Engine,\n  Viewport,\n  Tile,\n} from '../../vendor/unicodetiles.ts/src/index'\n\nimport {\n  CreatureTile,\n  DoorTile,\n  FloorTile,\n  ItemTile,\n  WallTile,\n\n  displayItem,\n} from './scene_tiles'\n\nimport {\n  Patrol,\n  Explorer,\n  Waiter,\n  Chaser,\n  Escaper,\n  Loiter,\n  Dispatcher,\n} from '../ai'\n\nimport {\n  Katana,\n  ItemKind,\n} from '../items'\n\nconst HUMAN  = new CreatureTile('俺', 0, 255, 0)\nconst HUMAN2 = new CreatureTile('俺', 255, 0, 0)\nconst HUMAN3 = new CreatureTile('俺', 0, 0, 255)\nconst HUMAN4 = new CreatureTile('俺', 255, 0, 255)\nconst HUMAN5 = new CreatureTile('俺', 0, 255, 255)\n\nconst DOOR = new DoorTile()\nconst WALL = new WallTile()\nconst FLOOR = new FloorTile()\nconst NULLTILE = new Tile('　', 0, 0, 0)\n\nexport default Vue.extend({\n  props: ['level'],\n  data() {\n    return {\n      term: null,\n      eng: null,\n      drawInterval: null,\n      ts: Date.now(),\n      fps: 0,\n      counter: 0,\n      interval: 100,\n      nextStep: false,\n      pause: false,\n      player: this.level.creatures[0]\n    }\n  },\n  methods: {\n    aiName(ai) {\n      if (ai instanceof Patrol) {\n        return 'Patrol'\n      }\n      if (ai instanceof Escaper) {\n        return 'Escaper'\n      }\n      if (ai instanceof Chaser) {\n        return 'Chaser'\n      }\n      if (ai instanceof Explorer) {\n        return 'Explorer'\n      }\n      if (ai instanceof Waiter) {\n        return 'Waiter'\n      }\n      if (ai instanceof Loiter) {\n        return `Loiter (${this.aiName(ai.prevAI)})`\n      }\n      if (ai instanceof Dispatcher) {\n        return `Dispatcher (${this.aiName(ai.prevAI)})`\n      }\n    },\n    getTile(x, y) {\n      const tile = this.stage.at(x, y).tile\n      if (!tile) {\n        return NULLTILE\n      }\n\n      if (tile.creature) {\n        switch (tile.creature.id % 5) {\n          case 0:\n            return HUMAN5\n          case 1:\n            return HUMAN4\n          case 2:\n            return HUMAN3\n          case 3:\n            return HUMAN2\n          case 4:\n            return HUMAN\n        }\n      }\n\n      if (tile.item) {\n        return displayItem(tile.item)\n      }\n\n      switch (tile.display) {\n      case '#':\n        return WALL\n      case '+':\n        return DOOR\n      case ' ':\n        return FLOOR\n      default:\n        return NULLTILE\n      }\n    },\n    initViewport() {\n      this.term = new Viewport(\n        this.$refs.scene,\n        this.level.width,\n        this.level.height,\n        webGLRenderer,\n        true,\n      )\n\n      this.eng = new Engine(\n        this.term,\n        (x, y) => this.getTile(x, y),\n        this.level.width,\n        this.level.height\n      )\n\n      this.eng.setMaskFunc((x, y) => {\n        return this.stage.at(x, y).seen\n      });\n\n      this.eng.setShaderFunc((tile, x, y, time) => {\n        return this.lighting(tile, x, y, time)\n      })\n\n      clearInterval(this.drawInterval)\n      this.drawInterval = setInterval(() => { this.drawScene() }, this.interval)\n    },\n    drawScene() {\n      if (this.done) { return }\n      const ts = Date.now()\n      if (this.ts + 1000 < ts) {\n        this.fps = this.counter\n        this.counter = 0\n        this.ts = ts\n      }\n\n      this.done = true\n      if (!this.pause || this.nextStep) {\n        this.nextStep = false\n\n        this.level.turn()\n        this.player = this.level.creatures[0]\n      }\n\n      // this.eng.update(this.player.x, this.player.y);\n      this.eng.update(this.term.cx, this.term.cy);\n      this.term.render();\n\n      this.done = false\n      this.counter += 1\n    },\n    lighting(tile, x, y, time) {\n      const fovTile = this.stage.at(x, y)\n\n      if (fovTile.visible && tile.lighted) {\n        return tile.lighted(fovTile.degree)\n      }\n\n      return tile\n    }\n  },\n  computed: {\n    stage() {\n      return this.player.stageMemory(this.level.id)\n    }\n  },\n  mounted() {\n    this.initViewport()\n  },\n  beforeDestroy() {\n    clearInterval(this.drawInterval)\n  },\n  watch: {\n    level() {\n      this.initViewport()\n    },\n    interval() {\n      this.initViewport()\n    }\n  }\n})\n","import { AI } from './internal'\nimport { Creature } from '../creature'\n\nexport class Waiter extends AI {\n  act(actor: Creature): void {}\n\n  public available(actor: Creature): boolean {\n    return true\n  }\n}\n","function injectStyle (context) {\n  require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!css-loader?{\\\"autoprefixer\\\":false,\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Scene.vue\")\n}\n/* script */\nexport * from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scene.vue\"\nimport __vue_script__ from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scene.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e1710bea\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=slm&optionsId=0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Scene.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"scene\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col mr-0\"},[_c('div',{ref:\"scene\",staticClass:\"unicodetiles\"})]),_c('div',{staticClass:\"col pl-0\"},[_c('div',{staticClass:\"fps mb-2\"},[_vm._v(\"FPS \"+_vm._s(_vm.fps))]),_vm._l((_vm.level.creatures),function(creature){return _c('dl',{staticClass:\"row small\"},[_c('dd',{staticClass:\"col-sm-3\"},[_vm._v(\"ID\")]),_c('dt',{staticClass:\"col-sm-9\"},[_vm._v(_vm._s(creature.id))]),_c('dd',{staticClass:\"col-sm-3\"},[_vm._v(\"POS\")]),_c('dt',{staticClass:\"col-sm-9\"},[_vm._v(_vm._s(creature.pos))]),_c('dd',{staticClass:\"col-sm-3\"},[_vm._v(\"AI\")]),_c('dt',{staticClass:\"col-sm-9\"},[_vm._v(_vm._s(_vm.aiName(creature.ai)))])])}),_c('div',{staticClass:\"form-group row\"},[_c('div',{staticClass:\"col-sm-2\"},[_vm._v(\"Map\")]),_c('div',{staticClass:\"col-sm-10\"},[_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.interval),expression:\"interval\"}],staticClass:\"form-control\",attrs:{\"id\":\"interval\",\"type\":\"number\"},domProps:{\"value\":(_vm.interval)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.interval=$event.target.value}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"interval\"}},[_vm._v(\"Tick interval\")])]),_c('button',{staticClass:\"btn btn-secondary\",on:{\"click\":function($event){_vm.nextStep = true}}},[_vm._v(\"Next step\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-secondary\",on:{\"click\":function($event){_vm.pause = !_vm.pause}}},[_vm._v(_vm._s(_vm.pause ? 'Start' : 'Pause'))])])])],2)])])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","import { Rect, Point, rand, min, max, twoDimArray } from '../utils'\n\nimport { LevelMap, Tile, TileTypes } from '../map'\n\nconst THICKNESS = 0\n\nconst newRoomSpace = function(): Tile {\n  return Tile.retrive('R')\n}\n\nconst newCoridor = function(): Tile {\n  return Tile.retrive('C')\n}\n\nconst newWall = function(): Tile {\n  return Tile.retrive('W')\n}\n\ntype Stage = Tile[][]\n\nconst generate = function (\n  dimX: number,\n  dimY: number,\n  minSize: number = 5,\n  maxSize: number = 5,\n  roomsCount: number = 3,\n): LevelMap {\n  const dungeon = new DungeonGenerator(\n    dimX,\n    dimY,\n    minSize,\n    maxSize,\n    roomsCount,\n  )\n\n  let stage = twoDimArray(dimX, dimY, newWall)\n\n  for ( let i = 0; i < dungeon.rooms.length; i++ )\n    dungeon.rooms[ i ].add( stage )\n\n  for ( let i = 0; i < dungeon.roads.length; i++ )\n    dungeon.roads[ i ].add( stage )\n\n  return new LevelMap(stage)\n}\n\nclass Room extends Rect {\n  notCross( rect: Rect ): boolean {\n    return ( rect.x - THICKNESS > this.x + this.w ) ||\n      ( rect.y - THICKNESS > this.y + this.h ) ||\n      ( rect.x + rect.w < this.x - THICKNESS ) ||\n      ( rect.y + rect.h < this.y - THICKNESS )\n  }\n\n  pointWithin(): Point {\n    return new Point(\n      this.x + 1 + rand( this.w - 1 ),\n      this.y + 1 + rand( this.h - 1 )\n    )\n  }\n\n  add( stage: Stage ): void {\n    let i: number = 0\n    while ( i < this.w ) {\n      let j: number = 0\n      while ( j < this.h ) {\n        stage[ this.x + i ][ this.y + j ] = newRoomSpace()\n        j++\n      }\n\n      i++\n    }\n  }\n}\n\nclass Road extends Rect {\n  lined: boolean\n\n  constructor( x: number, y: number, w: number, h: number ) {\n    super( x, y, w, h )\n    this.lined = ( ( x >= w ) && ( y >= h ) ) || ( w >= x ) && ( h >= y )\n  }\n\n  add( stage: Stage ): void {\n    let [ hx, hy, w ] = this.horizontalLine()\n\n    let i = 0\n    while ( i < w ) {\n      if (stage[ hx + i ][ hy ].key === 'W') {\n        stage[ hx + i ][ hy ] = newCoridor()\n      }\n      i += 1\n    }\n\n    let [ vx, vy, h ] = this.verticallLine()\n    let j = 0\n    while ( j < h ) {\n      if (stage[ vx ][ vy + j ].key === 'W') {\n        stage[ vx ][ vy + j ] = newCoridor()\n      }\n      j += 1\n    }\n  }\n\n  horizontalLine(): [ number, number, number ] {\n    // x\n    // |\\\n    // .-x\n    if ( this.lined )\n      return [ Math.min( this.x, this.w ), Math.max( this.y, this.h ), Math.abs( this.w - this.x ) ]\n    // .-x\n    // |/\n    // x\n    else\n      return [ Math.min( this.x, this.w ), Math.min( this.y, this.h ), Math.abs( this.w - this.x ) ]\n  }\n\n  verticallLine(): [ number, number, number ] {\n    // x\n    // |\\\n    // .-x\n    if ( this.lined )\n      return [ Math.min( this.x, this.w ), Math.min( this.y, this.h ), Math.abs( this.h - this.y ) ]\n    // .-x\n    // |/\n    // x\n    else\n      return [ Math.min( this.x, this.w ), Math.min( this.y, this.h ), Math.abs( this.h - this.y ) ]\n  }\n}\n\nclass DungeonGenerator {\n  rooms: Array< Room >\n  roads: Array< Road >\n\n  constructor(\n    protected maxX: number,\n    protected maxY: number,\n    private minSize: number,\n    private maxSize: number,\n    private roomsCount: number,\n  ) {\n    let rooms: Array< Room > = []\n\n    let i = 0\n    while ( i < this.roomsCount ) {\n      rooms.push( this.generateRoom() )\n      i += 1\n    }\n\n    this.rooms = this.normalize( this.fuzzifyRooms( rooms ) )\n    this.roads = this.buildRoads( this.rooms )\n  }\n\n  private generateRoom(): Room {\n    return new Room(\n      0,\n      0,\n      this.minSize + rand(this.maxSize - this.minSize),\n      this.minSize + rand(this.maxSize - this.minSize),\n    )\n  }\n\n  private fuzzifyRooms( rooms: Array< Room > ): Array< Room > {\n    let pickedRooms: Array< Room > = [ rooms.shift() ]\n\n    while ( rooms.length ) {\n      let currentRoom: Room = rooms.shift()\n\n      let angle: number = rand( 360 ) / 180 * Math.PI\n\n      // TODO: Build table with these values.\n      const cos: number = Math.cos( angle )\n      const sin: number = Math.sin( angle )\n      let l: number = 0\n      let dx: number = 0\n      let dy: number = 0\n\n      while ( !pickedRooms.every( ( room ) => currentRoom.notCross( room ) )) {\n        let ndx = Math.round( l * cos )\n        let ndy = Math.round( l * sin )\n\n        while ( true ) {\n          l += 1\n          ndx = Math.round( l * cos )\n          ndy = Math.round( l * sin )\n\n          if ( ndx !== dx || ndy !== dy ) {\n            break\n          }\n        }\n\n        currentRoom.move( ndx - dx, ndy - dy )\n        dx = ndx\n        dy = ndy\n      }\n\n      pickedRooms.push( currentRoom )\n    }\n\n    return pickedRooms\n  }\n\n  private normalize( rooms: Array< Room > ): Array< Room > {\n    const minX = min( rooms.map( ( room ) => room.x ) ) - 1\n    const minY = min( rooms.map( ( room ) => room.y ) ) - 1\n    rooms.forEach( ( room ) => { room.move( - minX, - minY ) } )\n\n    return rooms.filter( ( room: Room ) => {\n      return ( room.x + room.w < this.maxX ) && ( room.y + room.h < this.maxY )\n    })\n  }\n\n  private buildRoads( rooms: Array< Room > ): Array< Road > {\n    let points: Array< Point > = rooms.map( ( room ) => { return room.pointWithin() } )\n\n    let connectedPoints: Array< Point > = [ points.shift() ]\n    let roads: Array< Road > = []\n\n    const distance = function( point1: Point, point2: Point ): number {\n      // No need to calc square root since it's being used for comparison only.\n      return ( point1.x - point2.x ) ** 2 + ( point1.y - point2.y ) ** 2\n    }\n\n    while ( points.length ) {\n      let currentPoint = points.shift()\n\n      let pointToConnect = connectedPoints[ 0 ]\n      let minDistance = distance( currentPoint, pointToConnect )\n\n      connectedPoints.forEach( ( point ) => {\n        const currentDistance = distance( point, currentPoint )\n        if ( currentDistance < minDistance ) {\n          pointToConnect = point\n          minDistance = currentDistance\n        }\n      })\n\n      connectedPoints.push( currentPoint )\n\n      roads.push( new Road(\n        currentPoint.x,\n        currentPoint.y,\n        pointToConnect.x,\n        pointToConnect.y\n      ))\n    }\n\n    return roads\n  }\n}\n\nexport { generate }\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\nimport * as _ from 'lodash'\n\nimport Cell from './Cell.vue'\nimport Scene from './Scene.vue'\n\nimport { LevelMap } from '../map'\nimport { Creature } from '../creature'\nimport { Memory, MemoryTile } from '../creature'\nimport { generate } from '../generator/dungeon'\nimport { addDoors } from '../generator/post'\n\nimport { Katana } from '../items'\n\nimport { Escaper, Chaser, Waiter, Explorer, Dispatcher } from '../ai'\n\nexport default Vue.extend({\n  data() {\n    return {\n      map: new LevelMap([[]]),\n      radius: 10,\n      ts: Date.now(),\n      generatorOptions: {\n        addDoors: false,\n        minSize: 5,\n        maxSize: 5,\n        roomsCount: 3,\n      }\n    }\n  },\n  components: {\n    Cell,\n    Scene\n  },\n  methods: {\n    generateMap() {\n      this.map = this.buildMap()\n      let x = 1,\n          y = 1\n\n      while (!this.map.visibleThrough(x, y)) {\n        if (x < this.map.width - 1) {\n          x += 1\n        } else {\n          x = 1\n          y += 1\n        }\n      }\n\n      new Creature(\n        x,\n        y,\n        this.radius,\n        this.map,\n        new Dispatcher(),\n      )\n\n      x = this.map.width - 1\n      y = this.map.height -1\n\n      while (!this.map.visibleThrough(x, y)) {\n        if (x > 1) {\n          x -= 1\n        } else {\n          x = this.map.width - 1\n          y -= 1\n        }\n      }\n\n      new Creature(\n        x,\n        y,\n        this.radius,\n        this.map,\n        new Dispatcher(),\n      )\n\n      // new Creature(\n      //   x - 1,\n      //   y - 1,\n      //   this.radius,\n      //   this.map,\n      //   new Explorer(),\n      // )\n\n      // new Creature(\n      //   x,\n      //   y,\n      //   this.radius,\n      //   this.map,\n      //   new Chaser(),\n      // )\n    },\n    buildMap() {\n      let map = generate(\n        50,\n        50,\n        this.generatorOptions.minSize,\n        this.generatorOptions.maxSize,\n        this.generatorOptions.roomsCount,\n      )\n\n      if (this.generatorOptions.addDoors) {\n        return addDoors(map)\n      }\n\n      map.at(3, 3).item = new Katana()\n\n      return map\n    }\n  },\n  created() {\n    this.generateMap()\n  }\n})\n","import { LevelMap, Tile, TileTypes } from '../map'\n\nexport const addDoors = function (\n  level: LevelMap,\n  addDoor: () => boolean = () => true,\n): LevelMap {\n  for (let j = 1; j < level.height - 1; j++) {\n\n    for (let i = 1; i < level.width; i++) {\n      const\n        tile  = level.at(i, j),\n        up    = level.at(i, j - 1),\n        down  = level.at(i, j + 1),\n        left  = level.at(i - 1, j),\n        right = level.at(i + 1, j)\n\n      if (!addDoor() || tile.key !== 'C') {\n        continue\n      }\n\n      if (left.key === 'D' || right.key === 'D' || up.key === 'D' || down.key === 'D') {\n        continue\n      }\n\n      if (left.key !== 'R' && right.key !== 'R' && up.key !== 'R' && down.key !== 'R') {\n        continue\n      }\n\n      if ((left.key === 'W' && right.key === 'W') || (up.key === 'W' && down.key === 'W')) {\n        level.setTile(i, j, Tile.retrive('D'))\n      }\n    }\n  }\n\n  return level\n}\n","function injectStyle (context) {\n  require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!css-loader?{\\\"autoprefixer\\\":false,\\\"sourceMap\\\":false,\\\"minimize\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\n/* script */\nexport * from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!ts-loader?{\\\"appendTsSuffixTo\\\":[{}]}!../../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33fef234\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=slm&optionsId=0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\",attrs:{\"id\":\"app\"}},[_c('Scene',{attrs:{\"level\":_vm.map}}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6 mt-2\"},[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-sm-2 col-form-label\",attrs:{\"for\":\"radius\"}},[_vm._v(\"Radius\")]),_c('div',{staticClass:\"col-sm-10\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.radius),expression:\"radius\"}],staticClass:\"form-control\",attrs:{\"id\":\"radius\",\"type\":\"number\"},domProps:{\"value\":(_vm.radius)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.radius=$event.target.value}}})])]),_c('div',{staticClass:\"form-group row\"},[_c('div',{staticClass:\"col-sm-2\"},[_vm._v(\"Map\")]),_c('div',{staticClass:\"col-sm-10\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.generatorOptions.addDoors),expression:\"generatorOptions.addDoors\"}],staticClass:\"form-check-input\",attrs:{\"id\":\"doors\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.generatorOptions.addDoors)?_vm._i(_vm.generatorOptions.addDoors,null)>-1:(_vm.generatorOptions.addDoors)},on:{\"change\":function($event){var $$a=_vm.generatorOptions.addDoors,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.generatorOptions, \"addDoors\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.generatorOptions, \"addDoors\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.generatorOptions, \"addDoors\", $$c)}}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"doors\"}},[_vm._v(\"Add doors\")])]),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.generatorOptions.roomsCount),expression:\"generatorOptions.roomsCount\"}],staticClass:\"form-control\",attrs:{\"id\":\"roomsCount\",\"type\":\"number\"},domProps:{\"value\":(_vm.generatorOptions.roomsCount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.generatorOptions, \"roomsCount\", $event.target.value)}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"roomsCount\"}},[_vm._v(\"roomsCount\")])]),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.generatorOptions.minSize),expression:\"generatorOptions.minSize\"}],staticClass:\"form-control\",attrs:{\"id\":\"minSize\",\"type\":\"number\"},domProps:{\"value\":(_vm.generatorOptions.minSize)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.generatorOptions, \"minSize\", $event.target.value)}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"minSize\"}},[_vm._v(\"minSize\")])]),_c('div',{staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.generatorOptions.maxSize),expression:\"generatorOptions.maxSize\"}],staticClass:\"form-control\",attrs:{\"id\":\"maxSize\",\"type\":\"number\"},domProps:{\"value\":(_vm.generatorOptions.maxSize)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.generatorOptions, \"maxSize\", $event.target.value)}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"maxSize\"}},[_vm._v(\"maxSize\")])])])]),_c('div',{staticClass:\"form-group row\"},[_c('div',{staticClass:\"col-sm-10\"},[_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":function($event){_vm.generateMap()}}},[_vm._v(\"Rebuild!\")])])])])])],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","import Vue from 'vue'\nimport App from './components/App.vue'\n\nimport './application.css'\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"sourceRoot":""}