{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine/events/internal.ts","webpack:///./src/engine/utils/utils.ts","webpack:///./src/engine/models/tile.ts","webpack:///./src/engine/presenters/internal.ts","webpack:///./src/engine/models/item.ts","webpack:///./src/onisun.ts","webpack:///./src/engine/lib/calculator.ts","webpack:///./src/engine/lib/material.ts","webpack:///./src/engine/ai/internal.ts","webpack:///./src/engine/models/inventory_slot.ts","webpack:///./src/engine/events/move_event.ts","webpack:///./src/engine/events/die_event.ts","webpack:///./src/engine/lib/map_fov.ts","webpack:///./src/engine/models/creature.ts","webpack:///./src/engine/presenters/character_info_presenter.ts","webpack:///./src/engine/events/hurt_event.ts","webpack:///./src/engine/lib/stat.ts","webpack:///./src/engine/events/visible_creature_event.ts","webpack:///./src/engine/events/stay_event.ts","webpack:///./src/engine/lib/damage.ts","webpack:///./src/engine/presenters/items_listing_presenter.ts","webpack:///./src/onisun/races.ts","webpack:///./src/onisun/items.ts","webpack:///./src/onisun/potions.ts","webpack:///./src/engine/ai/meta_ai.ts","webpack:///./src/engine/lib/bunch.ts","webpack:///./src/engine/events/remove_item_event.ts","webpack:///./src/engine/lib/post.ts","webpack:///./src/engine/models/specie.ts","webpack:///./src/engine/lib/impact.ts","webpack:///./src/onisun/professions.ts","webpack:///./src/engine/events/after_event.ts","webpack:///./src/engine/ai/player_ai.ts","webpack:///./src/engine/events/add_experience_event.ts","webpack:///./src/engine/events/add_impact_event.ts","webpack:///./src/engine/events/take_off_item_event.ts","webpack:///./src/engine/events/trap_event.ts","webpack:///./src/engine/presenters/equipment_presenter.ts","webpack:///./src/engine/presenters/pick_point_presenter.ts","webpack:///./src/onisun/ai.ts","webpack:///./src/engine/lib/timeline.ts","webpack:///./src/onisun/talents.ts","webpack:///./src/engine/utils/fov.ts","webpack:///./src/engine/lib/attribute.ts","webpack:///./src/engine/ai/loiter.ts","webpack:///./src/engine/presenters/death_presenter.ts","webpack:///./src/engine/events/drop_items_event.ts","webpack:///./src/engine/events/level_up_event.ts","webpack:///./src/engine/models/tile_effect.ts","webpack:///./src/engine/events/throw_event.ts","webpack:///./src/engine/events/open_door_event.ts","webpack:///./src/engine/events/water_damage_event.ts","webpack:///./src/engine/models/level_map.ts","webpack:///./src/engine/models/logger.ts","webpack:///./src/engine/utils/kill_stat.ts","webpack:///./src/engine/models/traps/air_blow_trap.ts","webpack:///./src/engine/models/traps/bare_wire_trap.ts","webpack:///./src/engine/models/traps/falling_rock_trap.ts","webpack:///./src/engine/models/traps/hole_trap.ts","webpack:///./src/engine/models/traps/light_trap.ts","webpack:///./src/engine/models/traps/teleportation_trap.ts","webpack:///./src/engine/models/traps/water_trap.ts","webpack:///./src/engine/presenters/pick_single_option_presenter.ts","webpack:///./src/engine/presenters/talents_picking_presenter.ts","webpack:///./src/engine/presenters/talents_presenter.ts","webpack:///./src/onisun/menus.ts","webpack:///./src/engine/presenters/missile_presenter.ts","webpack:///./src/engine/presenters/idle_presenter.ts","webpack:///./src/onisun/creatures.ts","webpack:///./src/onisun/dungeons/title_dungeon.ts","webpack:///./src/engine/ai/attacker.ts","webpack:///./src/engine/ai/chaser.ts","webpack:///./src/engine/ai/descender.ts","webpack:///./src/engine/ai/escaper.ts","webpack:///./src/engine/ai/explorer.ts","webpack:///./src/engine/ai/patrol.ts","webpack:///./src/engine/ai/picker.ts","webpack:///./src/engine/ai/selfhealer.ts","webpack:///./src/engine/ai/thrower.ts","webpack:///./src/engine/events/attack_event.ts","webpack:///./src/engine/events/close_door_event.ts","webpack:///./src/engine/events/drink_potion_event.ts","webpack:///./src/engine/events/missile_attack_event.ts","webpack:///./src/engine/events/pick_up_items_event.ts","webpack:///./src/engine/events/put_on_item_event.ts","webpack:///./src/engine/events/remove_impact_event.ts","webpack:///./src/engine/events/teleportation_event.ts","webpack:///./src/engine/events/untrap_event.ts","webpack:///./src/engine/generator/dungeon.ts","webpack:///./src/engine/lib/gender.ts","webpack:///./src/engine/lib/level.ts","webpack:///./src/engine/lib/pool.ts","webpack:///./src/engine/models/dungeon.ts","webpack:///./src/engine/models/game.ts","webpack:///./src/engine/models/inventory.ts","webpack:///./src/engine/models/memory.ts","webpack:///./src/engine/models/player.ts","webpack:///./src/engine/models/profession.ts","webpack:///./src/engine/presenters/bag_presenter.ts","webpack:///./src/engine/presenters/base_info_presenter.ts","webpack:///./src/engine/presenters/drink_presenter.ts","webpack:///./src/engine/presenters/drop_items_presenter.ts","webpack:///./src/engine/presenters/history_info_presenter.ts","webpack:///./src/engine/presenters/look_presenter.ts","webpack:///./src/engine/presenters/pick_up_presenter.ts","webpack:///./src/engine/presenters/profession_picking_presenter.ts","webpack:///./src/engine/presenters/put_on_items_presenter.ts","webpack:///./src/engine/presenters/teleportation_presenter.ts","webpack:///./src/engine/utils/lee_path.ts","webpack:///./components/MenuOption.vue?8fbd","webpack:///./components/Menu/AttributesSelectionMenu.vue?ffb3","webpack:///./components/Scene.vue?bf04","webpack:///./components/Title.vue?0f3c","webpack:///./components/MenuOption.vue?e62d","webpack:///./components/MenuOption.vue?9763","webpack:///./components/MenuOption.vue","webpack:///./components/MenuOption.vue?c883","webpack:///./components/Menu/ChooseRaceMenu.vue?fe02","webpack:///./components/Menu/ChooseRaceMenu.vue?e131","webpack:///./components/Menu/ChooseRaceMenu.vue","webpack:///./components/Menu/ChooseRaceMenu.vue?21ee","webpack:///./components/Menu/ChooseGenderMenu.vue?aad4","webpack:///./components/Menu/ChooseGenderMenu.vue?a1f5","webpack:///./components/Menu/ChooseGenderMenu.vue","webpack:///./components/Menu/ChooseGenderMenu.vue?b0b7","webpack:///./components/Menu/MainMenu.vue?6332","webpack:///./components/Menu/MainMenu.vue?a8b7","webpack:///./components/Menu/MainMenu.vue","webpack:///./components/Menu/MainMenu.vue?ba6b","webpack:///./components/Menu/AttributesMenu.vue?decb","webpack:///./components/Menu/AttributesMenu.vue?52d0","webpack:///./components/Menu/AttributesMenu.vue","webpack:///./components/Menu/AttributesMenu.vue?f355","webpack:///./components/Menu/AttributesSelectionMenu.vue?4ec3","webpack:///./components/Menu/AttributesSelectionMenu.vue?7dde","webpack:///./components/Menu/AttributesSelectionMenu.vue","webpack:///./components/Menu/AttributesSelectionMenu.vue?68be","webpack:///./vendor/unicodetiles.ts/src/unicodetiles.ts","webpack:///./vendor/unicodetiles.ts/src/CanvasRenderer.ts","webpack:///./vendor/unicodetiles.ts/src/WebGLRenderer.ts","webpack:///./components/scene_tiles.ts","webpack:///./components/Scene.vue?a309","webpack:///./components/Scene.vue?972d","webpack:///./components/Scene.vue","webpack:///./components/Scene.vue?8979","webpack:///./components/Title.vue?038d","webpack:///./components/Title.vue?85f3","webpack:///./components/Title.vue","webpack:///./components/Title.vue?77b7","webpack:///./components/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Reaction","PlayerEvent","CreatureEvent","[object Object]","subject","this","affectCreature","Rect","x","y","w","h","rand","max","Math","floor","random","twoDimArray","width","height","field","Array","Point","point","abs","dxy","map","add","Mapped","on","forEach","column","tile","cycle","list","dx","pop","unshift","bresenham","p0","p1","x0","x1","y0","y1","steps","delta","round","bresenhamInclusion","Direction","super","ratio","up","down","left","right","upLeft","upRight","downLeft","downRight","all","minUnsafe","elem","lodash__WEBPACK_IMPORTED_MODULE_0__","undefined","TileTypes","TrapType","Tile","kind","item","count","items","_lib_bunch__WEBPACK_IMPORTED_MODULE_0__","put","creature","isFloor","passibleThrough","Floor","actor","Wall","id","from","buildNew","clone","tileVisitor","onFloor","Corridor","Room","Door","open","onDoor","onWall","Stairway","type","currentMap","adjacentMapName","levelMap","adjacentMap","_enterPos","matchStairs","StairwayDown","onStairwayDown","StairwayUp","onStairwayUp","Trap","revealed","onTrap","player","game","logger","succeededToUntrap","setTile","TileVisitor","wall","default","stairway","onStairway","door","trigger","trap","PresenterType","Presenter","creatureTile","ai","endTurn","presenter","redirect","_engine__WEBPACK_IMPORTED_MODULE_0__","BaseMenusPresenter","Usage","ItemGroup","ItemSubgroup","CorrosionLevel","ProtectionType","Item","group","weight","material","usages","getId","impacts","corrosionLevel","None","lastId","Slightly","Mostly","Fully","affectedWithWater","firm","insulator","canSeeDetails","Corpse","specie","Consumable","Potion","_lib_material__WEBPACK_IMPORTED_MODULE_0__","glass","Weapon","rawDamages","damages","damageWithCorrosion","penalty","dice","extra","Missile","MissileWeapon","Shoot","OneHandWeapon","WeaponOneHand","Armor","rawProtections","usage","protections","protectionWithCorrosion","BodyArmor","WearsOnBody","Boots","Scroll","Scrolls","paper","critical","chance","multiplier","TitleGame","_engine__WEBPACK_IMPORTED_MODULE_1__","turn","playerTurn","done","dead","turns","Application","menu","_onisun_menus__WEBPACK_IMPORTED_MODULE_8__","Male","_onisun_races__WEBPACK_IMPORTED_MODULE_7__","_onisun_ai__WEBPACK_IMPORTED_MODULE_3__","clan","Player","abilities","Pure","times","maxHealthValue","regenerationRate","regenerationValue","resistances","visionRadius","moveSpeed","attackSpeed","bodyControl","leavesCorpseRatio","flesh","throwingDamages","race","gender","eyeColor","Aqua","hairColor","Fuchsia","skinColor","Purple","_onisun_professions__WEBPACK_IMPORTED_MODULE_6__","dungeon","_onisun_dungeons_title_dungeon__WEBPACK_IMPORTED_MODULE_4__","register","enter","Calculator","attackerBC","victimBC","pow","min","lowerWeight","hit","of","actorBC","atan","PI","protectionTypes","victimResistances","every","resistTo","damage","resist","dropDice","protectionValue","damageType","Melee","Pierce","Blunt","_models_specie__WEBPACK_IMPORTED_MODULE_2__","Intangible","Magic","MagicDamage","armorToDamageRatio","armorType","Medium","Solid","Light","Unarmored","Heavy","WaterAffect","Material","cloth","fragile","iron","Corrosion","leather","Destroy","stone","wood","AI","destination","move","eq","dest","buildPath","_events_move_event__WEBPACK_IMPORTED_MODULE_2__","_engine__WEBPACK_IMPORTED_MODULE_3__","stageMemory","creaturePos","tangible","pos","visit","tileVisited","_utils_utils__WEBPACK_IMPORTED_MODULE_0__","pointsToCheck","wavePoints","inRange","at","visible","wrappers","dist","enemy","_models_creature__WEBPACK_IMPORTED_MODULE_1__","FreeForAll","PlayerOnlyEnemy","FollowTargetAI","foundNewTarget","checkCurrentTile","event","goTo","onCantMove","moveTo","onReach","GoToTileAI","matcher","path","InventorySlot","useSingleItem","equipment","inventory","cares","filter","itemGroup","match","lodash__WEBPACK_IMPORTED_MODULE_1__","baseMatch","groupedItem","worksWith","BodyPart","RightHandSlot","_item__WEBPACK_IMPORTED_MODULE_0__","LeftHandSlot","HeadSlot","WearsOnHead","ChestSlot","BootsSlot","GlovesSlot","Gloves","GauntletsSlot","Gauntlets","BeltSlot","Belt","AmuletSlot","Amulet","LeftFingerSlot","Ring","RightFingerSlot","CloakSlot","Cloak","MissileWeaponSlot","matchingItems","missile","missileSlot","withPairItem","MissileSlot","Throw","missileWeapon","missileWeaponSlot","ToolsSlot","Tool","SteppingTileVisitor","_models_tile__WEBPACK_IMPORTED_MODULE_1__","reaction","_engine__WEBPACK_IMPORTED_MODULE_2__","NOTHING","activate","MoveEvent","_internal__WEBPACK_IMPORTED_MODULE_0__","nextPoint","nextLevel","removeCreature","addCreature","visitor","reset","DieReason","DieEvent","reason","addItem","_models_item__WEBPACK_IMPORTED_MODULE_1__","inventoryItems","invItem","DIE","pushEvent","_ai_player_ai__WEBPACK_IMPORTED_MODULE_2__","buildFov","radius","memory","fov","stage","visibleThrough","degree","see","calc","Clan","Ability","allAbilities","GoStairwayDown","Inventory","PutOn","Throwing","creature_Creature","stageMemories","Map","health","stat","throwDamages","ability","lodash","speed","visionMask","resetVisible","engine","set","impactsBunch","_impactsBunch","effect","addConstImpact","addImpact","removeConstImpact","removeImpact","hasImpact","impact","Blind","activeImpacts","resistance","weightWithCarryings","creature_AICreature","statsTurn","command","act","after_event","throwingItem","bag","bunch","remove","CharacterInfoPage","CharacterInfoPresenter","CharacterInfo","HurtEvent","dieReason","doneDamage","_lib_calculator__WEBPACK_IMPORTED_MODULE_2__","RESIST","currentValue","_die_event__WEBPACK_IMPORTED_MODULE_1__","decrease","HURT","Stat","base","rate","current","val","CapacityLimitStat","strength","constitution","strengthRatio","constitutionRatio","stressed","loadedStart","overloadedStart","flattenedStart","HealthStat","_attribute__WEBPACK_IMPORTED_MODULE_0__","currentTurn","increase","StrengthStat","meleeAdjustment","ConstitutionStat","levelUpHPBonus","DexterityStat","bodyControlAdjustment","missileAdjustment","VisibleCreatureEvent","StayEvent","DamageType","ItemsListingPresenter","positions","initPositions","ItemsListing","goIdle","SingleItemUseListingPresenter","singleItemMode","MultipleItemUseListingPresenter","humanRace","primaryAttributes","dexterity","intelligence","wisdom","charisma","dwarfRace","allRaces","items_MissileRock","items_Sling","items_Arrow","items_Bow","commonBow","smallRock","woodenArrow","ironArrow","items_LightSpeedBoots","AIEvent","AIItemPickedEvent","MetaAI","aiToRun","events","res","run","resetEvents","ItemsBunch","find","groupsWith","inventoryItem","inv","RemoveItemEvent","slot","_take_off_item_event__WEBPACK_IMPORTED_MODULE_1__","addDoors","level","doorTile","addDoor","addCreatures","creaturesPool","pick","centralize","minX","minY","maxX","maxY","dy","row","withMatchingTile","onValid","iters","safeWithMatchingTile","withEachTile","each","Resistance","Color","ImpactType","Impact","constEffects","tempEffects","ImpactBunch","types","active","impactByType","addTempEffect","removeTempEffect","addConstEffect","removeConstEffect","OnisunProfessionId","OnisunAttackerProfession","twoHandedWeapons","_talents__WEBPACK_IMPORTED_MODULE_1__","strongGrip","Attacker","depthCost","grid","OnisunDefenderProfession","Defender","OnisunProfessionPicker","attacker","defender","AfterEvent","_internal__WEBPACK_IMPORTED_MODULE_1__","Overloaded","Stressed","Loaded","stuffWeight","carryingCapacity","AINewLevelEvent","_meta_ai__WEBPACK_IMPORTED_MODULE_2__","AIDieEvent","rebuildVision","_presenters_death_presenter__WEBPACK_IMPORTED_MODULE_1__","AITeleportationEvent","PlayerAI","levelUps","runEvents","PlayerBorgAI","AddExperienceEvent","AddImpactEvent","impactType","source","duration","TakeOffItemEvent","takeOff","onTakeOff","putToBag","itemProtection","itemsProtections","protection","TrapEvent","_visible_creature_event__WEBPACK_IMPORTED_MODULE_0__","onCreatureDodge","onCreatureActivated","dodgeRatio","sees","playerSees","dodges","_internal__WEBPACK_IMPORTED_MODULE_2__","DODGE","_lib_calculator__WEBPACK_IMPORTED_MODULE_1__","EquipmentPresenter","_character_info_presenter__WEBPACK_IMPORTED_MODULE_2__","takeTime","rebuildPositions","page","Equipment","position","inventorySlot","availableItems","_idle_presenter__WEBPACK_IMPORTED_MODULE_1__","slots","PickPointPresenter","targetPos","drawTarget","removeEffect","close","memoryTile","direction","updateTarget","newPos","copy","Dispatcher","escaper","explorer","chaser","picker","patrol","loiter","thrower","descender","feelsGood","explore","healthCritical","maximum","trackMovement","Timeline","step","ts","element","nextStep","next","actors","parseInt","OnisunTalent","depth","rank","maxRank","AttackerTwoHandedWeapons","AttackerStrongGrip","Fov","startx","starty","solidChecker","markVisible","doubleRadius","isSolid","castLight","start","end","xx","xy","yx","yy","newStart","blocked","distance","deltaY","deltaX","currentX","currentY","leftSlope","rightSlope","doubleDistance","Attribute","modifiers","atMax","modifier","Loiter","DeathPresenter","Death","playerName","DropItemsEvent","removeItem","subtract","droppedItem","LevelUpEvent","updateHealth","constantIncrease","TileEffect","onDone","ItemFlightTileEffect","frames","patchMemory","ThrowEvent","_internal__WEBPACK_IMPORTED_MODULE_4__","victim","process","_add_experience_event__WEBPACK_IMPORTED_MODULE_2__","isPlayer","throw","attackLogger","misses","hurtEvent","withCritical","_die_event__WEBPACK_IMPORTED_MODULE_3__","OpenDoorEvent","_visible_creature_event__WEBPACK_IMPORTED_MODULE_1__","doorLogger","alreadyOpen","WaterDamageEvent","playerReaction","_hurt_event__WEBPACK_IMPORTED_MODULE_3__","_die_event__WEBPACK_IMPORTED_MODULE_2__","affectBodyParts","affectInventory","affectEquipment","_lib_material__WEBPACK_IMPORTED_MODULE_1__","_lib_calculator__WEBPACK_IMPORTED_MODULE_0__","corrode","itemCorrode","destroyedCount","itemDestroyByWater","_remove_item_event__WEBPACK_IMPORTED_MODULE_5__","removeFromBag","bodyParts","bodyPart","waterBodyPartEquipmentResist","trackReaction","waterBodyPartDamage","LevelMap","creatures","timeline","_lib_timeline__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_3__","adjustName","stairPos","_tile__WEBPACK_IMPORTED_MODULE_2__","LogLevel","Logger","messages","AttackLogger","DoorLogger","trapAirBlow","TrapAirBlowLogger","trapBareWire","TrapBareWireLogger","trapFallingRock","TrapFallingRockLogger","trapHole","TrapHoleLogger","target","warning","addMessage","DEBUG","INFO","WARNING","info","debug","danger","message","DANGER","lastRow","counter","SubLogger","KillStat","total","AirBlowTrap","_tile__WEBPACK_IMPORTED_MODULE_0__","AirBlow","failedToUntrap","disarmTile","creatureWeightBlowThreshold","_events_trap_event__WEBPACK_IMPORTED_MODULE_3__","dodge","randomPos","higherWeight","_events_move_event__WEBPACK_IMPORTED_MODULE_6__","headSlot","headBlow","rightHandSlot","handBlow","leftHandSlot","maxChance","throwItem","_events_remove_item_event__WEBPACK_IMPORTED_MODULE_4__","_engine__WEBPACK_IMPORTED_MODULE_7__","origin","maxDistance","lastPos","foundPos","lodash__WEBPACK_IMPORTED_MODULE_5__","_utils_utils__WEBPACK_IMPORTED_MODULE_1__","brokenLos","multiple","BareWireTrapEvent","_events_visible_creature_event__WEBPACK_IMPORTED_MODULE_5__","_events_hurt_event__WEBPACK_IMPORTED_MODULE_2__","_events_die_event__WEBPACK_IMPORTED_MODULE_3__","_lib_damage__WEBPACK_IMPORTED_MODULE_4__","hurtReaction","activated","bootsSlot","_events_internal__WEBPACK_IMPORTED_MODULE_6__","BareWireTrap","BareWire","glovesSlot","doNotWant","FallingRockTrap","newRock","missilesCount","FallingRock","throwMissile","ranOut","HoleTrap","_tile__WEBPACK_IMPORTED_MODULE_3__","Hole","canNotUntrap","fallEvent","_events_hurt_event__WEBPACK_IMPORTED_MODULE_4__","_lib_damage__WEBPACK_IMPORTED_MODULE_5__","_events_die_event__WEBPACK_IMPORTED_MODULE_6__","shallowActivated","_events_stay_event__WEBPACK_IMPORTED_MODULE_2__","downLevelMap","getMap","downPos","_events_move_event__WEBPACK_IMPORTED_MODULE_1__","LightTrap","_lib_calculator__WEBPACK_IMPORTED_MODULE_4__","_events_trap_event__WEBPACK_IMPORTED_MODULE_1__","lightTrapDodge","_lib_impact__WEBPACK_IMPORTED_MODULE_3__","_engine__WEBPACK_IMPORTED_MODULE_5__","lightTrapActivated","_events_add_impact_event__WEBPACK_IMPORTED_MODULE_2__","TeleportationTrap","_tile__WEBPACK_IMPORTED_MODULE_1__","Teleportation","playerDodgesTeleportationTrap","creatureDodgesTeleportationTrap","WaterTrap","Water","_lib_damage__WEBPACK_IMPORTED_MODULE_2__","waterTrapDamage","waterTrapActivated","_events_water_damage_event__WEBPACK_IMPORTED_MODULE_3__","PickSingleOptionPresenter","options","withOption","PickHandleOption","option","TalentsPickingPresenter","talentsPage","_talents_presenter__WEBPACK_IMPORTED_MODULE_3__","TalentsPicking","profession","talent","status","Available","upgrade","points","_events_level_up_event__WEBPACK_IMPORTED_MODULE_2__","TalentsPresenter","_character_info_presenter__WEBPACK_IMPORTED_MODULE_0__","Talents","professions","MenuComponent","Menu","application","MainMenu","ChooseGenderMenu","component","ChooseRaceMenu","withGender","lodash__WEBPACK_IMPORTED_MODULE_2__","Female","AttributesMenu","withRace","_races__WEBPACK_IMPORTED_MODULE_1__","AttributesSelectionMenu","attributeNames","keys","racialAttributes","genderAttributes","calcGenderAttributes","baseAttributes","missile_presenter_MissilePresenter","internal","targetEnemyIndex","enemies","findEnemies","resetTargetId","resetPath","idle_presenter_IdlePresenter","drawPath","stop","utils","idle_presenter_HandleTileVisitor","commands","move_event","enterPos","idle_presenter_AdjustHandleTileVisitor","open_door_event","Idle","equipment_presenter","stay_event","ranIntoAnObstacle","noItemsToPickUp","canThrow","needMissileWeapon","nothingToShotWith","adjustVisitor","howToHandle","pick_single_option_presenter","newCreature","creaturesPool1","titleId","config","minSize","maxSize","roomsCount","addTraps","tiles","traps","air_blow_trap","bare_wire_trap","falling_rock_trap","hole_trap","light_trap","teleportation_trap","water_trap","title_dungeon_TitleDungeon","addMap","generateMap","post","firstTurn","canAttack","victimInAccess","pickNewVictim","findCreature","condition","Chaser","victimSet","buildVictimPath","foundNewVictim","victimId","followTo","withinView","nextTo","StairwayDownFinderVisitor","StairwayDownTileMoverVisitor","Descender","can","STEP_DISTANCE","Escaper","escapesFrom","foundEnemies","buildEscapePath","minDistance","Explorer","seen","NEW_POINT_EVERY","PatrolTileVisitor","_models_tile__WEBPACK_IMPORTED_MODULE_3__","Patrol","firstCallPatrol","graph","graphlib__WEBPACK_IMPORTED_MODULE_1__","lastNodeVisit","currentNodeID","markNodeVisited","nodes","addNode","moveToTarget","targetNodeID","pickUpNewTarget","setNode","setEdge","newNodeId","node","seenLastID","seenLastStep","neighbors","nodeID","buildNewPath","_events_move_event__WEBPACK_IMPORTED_MODULE_4__","_loiter__WEBPACK_IMPORTED_MODULE_2__","String","fromCharCode","charCodeAt","Picker","_meta_ai__WEBPACK_IMPORTED_MODULE_3__","SelfHealer","_events_stay_event__WEBPACK_IMPORTED_MODULE_1__","Thrower","hasMissile","_utils_utils__WEBPACK_IMPORTED_MODULE_2__","_events_internal__WEBPACK_IMPORTED_MODULE_4__","previousVictim","missiles","findWithId","obstacles","AttackEvent","_add_experience_event__WEBPACK_IMPORTED_MODULE_1__","melee","_die_event__WEBPACK_IMPORTED_MODULE_4__","Attack","CloseDoorEvent","alreadyClosed","DrinkPotionEvent","potion","onDrink","drink","MissileAttackEvent","withMissile","_remove_item_event__WEBPACK_IMPORTED_MODULE_3__","flightPath","_models_tile_effect__WEBPACK_IMPORTED_MODULE_1__","_throw_event__WEBPACK_IMPORTED_MODULE_2__","PickUpItemsEvent","tileItems","withTileItems","pickedUpItem","PutOnItemEvent","groupItem","findInBag","equip","onPutOn","putOn","_models_item__WEBPACK_IMPORTED_MODULE_2__","concat","_add_impact_event__WEBPACK_IMPORTED_MODULE_3__","RemoveImpactEvent","TeleportationEvent","selfCast","hasResistance","_models_specie__WEBPACK_IMPORTED_MODULE_4__","TeleportationControl","teleport","creatureNotTeleported","creatureTeleported","_internal__WEBPACK_IMPORTED_MODULE_6__","playerTeleportationCaused","_ai_player_ai__WEBPACK_IMPORTED_MODULE_5__","playerTeleported","playerNotTeleported","teleported","_lib_post__WEBPACK_IMPORTED_MODULE_1__","free","_move_event__WEBPACK_IMPORTED_MODULE_2__","_utils_utils__WEBPACK_IMPORTED_MODULE_3__","_a","UntrapEvent","trapPosition","untrap","THICKNESS","RAY_TURNS","DELTA_ANGLE","rect","walls","newRoomSpace","Road","lined","newCorridor","hx","hy","horizontalLine","vx","vy","verticalLine","__webpack_exports__","dimX","dimY","newWall","rooms","fill","_","generateRoom","normalize","ray","roads","buildRoads","reduce","pickedRooms","currentRoom","angle","cos","sin","roomToMove","ndx","ndy","room","notCross","pointWithin","firstPoint","connectedPoints","point1","point2","maybePoint","currentPoint","pointToConnect","currentDistance","Gender","Level","requires","currentExperience","doneLeveling","requiredExperience","exp","levelUp","Pool","totalWeight","ceil","input","found","pool","totalPool","Dungeon","levels","adjustMapName","addStairs","_lib_post__WEBPACK_IMPORTED_MODULE_0__","Game","professionPicker","running","maps","_logger__WEBPACK_IMPORTED_MODULE_1__","mutexTurn","levelMapTurn","_level_map__WEBPACK_IMPORTED_MODULE_0__","Function","builtLevelMap","generator","has","actorId","_lib_bunch__WEBPACK_IMPORTED_MODULE_1__","_inventory_slot__WEBPACK_IMPORTED_MODULE_0__","_lib_material__WEBPACK_IMPORTED_MODULE_3__","amuletSlot","cloakSlot","chestSlot","leftFingerSlot","rightFingerSlot","gauntletsSlot","beltSlot","toolsSlot","allItems","unarmoredSlotsCount","MemoryTile","Memory","baseTile","_creature__WEBPACK_IMPORTED_MODULE_5__","strengthValue","dexterityValue","constitutionValue","itemsResistances","killStat","_utils_kill_stat__WEBPACK_IMPORTED_MODULE_6__","_lib_stat__WEBPACK_IMPORTED_MODULE_3__","_events_after_event__WEBPACK_IMPORTED_MODULE_2__","affectPlayer","dexterityAdjustment","missileItemsDamages","dmg","strengthAdjustment","meleeItemsDamages","_item__WEBPACK_IMPORTED_MODULE_4__","rightHandEq","leftHandEq","missileEq","missileWeaponEq","TalentStatus","Talent","onObtain","Completed","Unavailable","Profession","talents","ProfessionPicker","maxLevel","maxTaken","pickedProfession","canUpdate","updatableProfession","canTakeNewProfession","newFromPool","some","excludeId","excluding","BagPresenter","_items_listing_presenter__WEBPACK_IMPORTED_MODULE_0__","title","BaseInfoPresenter","Base","DrinkPresenter","_items_listing_presenter__WEBPACK_IMPORTED_MODULE_2__","DropItemsPresenter","_events_drop_items_event__WEBPACK_IMPORTED_MODULE_1__","HistoryInfoPresenter","History","LookPresenterVisibility","LookPresenter","_pick_point_presenter__WEBPACK_IMPORTED_MODULE_2__","Look","See","Recall","Hidden","body","PickUpPresenter","ProfessionPickingPresenter","available","ProfessionPicking","_talents_picking_presenter__WEBPACK_IMPORTED_MODULE_1__","PutOnItemsPresenter","onWithItem","_equipment_presenter__WEBPACK_IMPORTED_MODULE_1__","TeleportationPresenter","_pick_point_presenter__WEBPACK_IMPORTED_MODULE_1__","playerTeleportedWhereTheyWere","leePath","randomDestination","_utils__WEBPACK_IMPORTED_MODULE_0__","pointsToVisit","randomPointToVisit","buildRoad","lastPoint","chain","dp","components_MenuOptionvue_type_script_lang_ts_","vue_runtime_esm","extend","props","componentNormalizer","_h","$createElement","_c","_self","staticClass","class","-separator","separator","_v","domProps","textContent","_s","char","__file","MenuOption","Menu_ChooseRaceMenuvue_type_script_lang_ts_","components","methods","toUpperCase","onisun","back","ChooseRaceMenu_component","attrs","Menu_ChooseGenderMenuvue_type_script_lang_ts_","ChooseGenderMenu_component","Menu_MainMenuvue_type_script_lang_ts_","newGame","MainMenu_component","Menu_AttributesMenuvue_type_script_lang_ts_","manually","AttributesMenu_component","Menu_AttributesSelectionMenuvue_type_script_lang_ts_","selectedAttributes","ready","attributeModifier","attribute","toString","index","attributeName","totalAttribute","canIncrease","canDecrease","AttributesSelectionMenu_component","_vm","_f","_l","invisible","click","$event","ch","g","b","br","bg","bb","grey","other","CSSCLASS","NULLTILE","VERTEX_SHADER","FRAGMENT_SHADER","webGLRenderer","viewport","view","canvas","document","createElement","getContext","gl","appendChild","charMap","charArray","defaultColors","attribs","buffer","itemSize","location","hint","STATIC_DRAW","texCoord","color","DYNAMIC_DRAW","bgColor","charIndex","offscreen","style","top","ctx","updateStyle","squarify","th","tw","vertexShader","compileShader","fragmentShader","program","createProgram","attachShader","linkProgram","deleteShader","getProgramParameter","LINK_STATUS","msg","getProgramInfoLog","deleteProgram","useProgram","getAttribLocation","initBuffers","resolutionLocation","getUniformLocation","uniform2f","tileCountsLocation","paddingLocation","texture","createTexture","bindTexture","TEXTURE_2D","cacheChars","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","activeTexture","TEXTURE0","setTimeout","buildTexture","render","pad","charCount","sqrt","fillStyle","fillRect","halfGap","gap","fillText","texImage2D","RGBA","UNSIGNED_BYTE","chars","build","changed","getComputedStyle","font","fontSize","lineHeight","fontFamily","textBaseline","measureText","backgroundColor","clear","COLOR_BUFFER_BIT","newChars","defaultColor","defaultBackground","k","kk","bindBuffer","ARRAY_BUFFER","bufferData","attrib","drawArrays","TRIANGLES","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","a","Float32Array","insertQuad","deleteBuffer","createBuffer","enableVertexAttribArray","vertexAttribPointer","FLOAT","arr","x2","y2","DEFAULT_GREY","IMPORTANT_GREY","DEFAULT_LIT","scene_tiles_DisplayTile","setBackground","setColor","ImportantTile","CreatureTile","vr","vg","vb","ClosedDoorTile","litColor","swapColors","ItemTile","WEAPON","CORPSE","BODY_ARMOR","MISSILE","MISSILE_WEAPON","BOOTS","SCROLL","POTION","displayItem","CLOSED_DOOR","OPEN_DOOR","WALL","litBackground","backgroundToColor","FLOOR","STAIRWAY_DOWN","STAIRWAY_UP","NULL_TILE","AIR_BLOW_TRAP","TELEPORTATION_TRAP","LIGHT_TRAP","HOLE_TRAP","BARE_WIRE_TRAP","FALLING_ROCK_TRAP","WATER_TRAP","displayTileVisitor","HUMAN","RAT","GOLEM","Scenevue_type_script_lang_ts_NULL_TILE","nextItemAnimation","components_Scenevue_type_script_lang_ts_","wholeMap","term","eng","drawInterval","Date","now","interval","dTile","frame","animationFps","itemId","displayTile","renderer","cx","cy","innerHTML","className","indexOf","updateRenderer","getRendererString","str","len","unsafePut","$refs","scene","tileFunc","refreshCache","cacheEnabled","transitionDuration","cachex","cachey","tileCache","tileCache2","func","transition","new_t","old_t","factor","halfw","halfh","transitionTimer","getTime","maskFunc","shaderFunc","timeNow","transTime","ixx","jyy","lookupx","lookupy","tempCache","getTile","setMaskFunc","setShaderFunc","time","lighting","clearInterval","setInterval","drawScene","update","lighted","fovTile","computed","initViewport","watch","Scene_component","ref","Scene","components_Titlevue_type_script_lang_ts_","app","titleGame","loopIntervalId","menuComponent","onEvent","loop","addEventListener","removeEventListener","Title_component","_e","menuPage","tag","Title","use","es","fetch","cache","then","response","json","polyglot","node_polyglot_default","phrases","locale","prefix","suffix","args","el"],"mappings":"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","file":"main.4384b7a4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/onisun/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([136,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Creature } from '../models/creature'\nimport { Player } from '../models/player'\n\nexport enum Reaction {\n  DIE,\n  HURT,\n  DODGE,\n  NOTHING,\n  RESIST,\n}\n\nexport abstract class PlayerEvent {\n  public abstract affectPlayer(subject: Player): Reaction\n}\n\nexport abstract class CreatureEvent extends PlayerEvent {\n  public abstract affectCreature(subject: Creature): Reaction\n  public affectPlayer(subject: Player): Reaction {\n    return this.affectCreature(subject)\n  }\n}\n","import { min } from 'lodash'\n\nexport class Rect {\n  constructor(\n    public x: number,\n    public y: number,\n    public w: number,\n    public h: number\n  ) {\n    if (w <= 0 || h <= 0) {\n      throw `Rect ${x} ${y} ${w} ${h}: size is negative or zero`\n    }\n  }\n\n  move(x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n}\n\nexport const rand = function(max: number): number {\n  return Math.floor(Math.random() * max)\n}\n\nexport const twoDimArray = function<T>(\n  width: number,\n  height: number,\n  value: (x: number, y: number) => T\n): T[][] {\n  let field = Array(width)\n\n  for (let i = 0; i < width; i++) {\n    field[i] = new Array(height)\n    for (let j = 0; j < height; j++) {\n      field[i][j] = value(i, j)\n    }\n  }\n\n  return field\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n\n  public static readonly dxy = [\n    new Point(-1, -1),\n    new Point(0, -1),\n    new Point(1, -1),\n    new Point(-1, 0),\n    new Point(1, 0),\n    new Point(-1, 1),\n    new Point(0, 1),\n    new Point(1, 1),\n  ]\n\n  public eq(point: Point): boolean {\n    return this.x === point.x && this.y === point.y\n  }\n\n  public nextTo(point: Point): boolean {\n    return Math.abs(this.x - point.x) <= 1 && Math.abs(this.y - point.y) <= 1\n  }\n\n  public copy(): Point {\n    return new Point(this.x, this.y)\n  }\n\n  public add(point: Point): Point {\n    return new Point(this.x + point.x, this.y + point.y)\n  }\n\n  public wrappers(): Point[] {\n    return Point.dxy.map(point => this.add(point))\n  }\n}\n\nexport abstract class Mapped<T> {\n  public readonly width: number\n  public readonly height: number\n\n  constructor(public map: T[][]) {\n    this.width = map.length\n    this.height = map[0].length\n  }\n\n  public at(x: number, y: number): T {\n    return this.map[x][y]\n  }\n\n  public inRange(point: Point): boolean {\n    return (\n      point.x >= 0 &&\n      point.y >= 0 &&\n      point.x < this.width &&\n      point.y < this.height\n    )\n  }\n\n  public each(on: (tile: T, x: number, y: number) => any): void {\n    this.map.forEach((column, x) => {\n      column.forEach((tile, y) => {\n        on(tile, x, y)\n      })\n    })\n  }\n}\n\nexport const cycle = function(list: any[], dx: number): any[] {\n  let x\n  if (dx > 0) {\n    for (let i = 0; i < dx; i++) {\n      x = list.pop()\n      list.unshift(x)\n    }\n  } else if (dx < 0) {\n    for (let i = dx; i < 0; i++) {\n      x = list.shift()\n      list.push(x)\n    }\n  }\n\n  return list\n}\n\nexport const bresenham = function(\n  p0: Point,\n  p1: Point,\n  on: (x: number, y: number) => void\n): void {\n  let [x0, x1, y0, y1] = [p0.x, p1.x, p0.y, p1.y]\n  let steps = Math.max(Math.abs(x0 - x1), Math.abs(y0 - y1))\n  const delta = new Point((x1 - x0) / steps, (y1 - y0) / steps)\n\n  while (steps > 1) {\n    x0 += delta.x\n    y0 += delta.y\n\n    on(Math.round(x0), Math.round(y0))\n\n    steps -= 1\n  }\n}\n\nexport const bresenhamInclusion = function(\n  p0: Point,\n  p1: Point,\n  on: (x: number, y: number) => void\n): void {\n  bresenham(p0, p1, on)\n  on(p1.x, p1.y)\n}\n\nexport class Direction extends Point {\n  private constructor(x: number, y: number) {\n    super(x, y)\n  }\n\n  static readonly up = new Direction(0, -1)\n  static readonly down = new Direction(0, 1)\n  static readonly left = new Direction(-1, 0)\n  static readonly right = new Direction(1, 0)\n\n  static readonly upLeft = new Direction(-1, -1)\n  static readonly upRight = new Direction(1, -1)\n  static readonly downLeft = new Direction(-1, 1)\n  static readonly downRight = new Direction(1, 1)\n\n  static readonly all = [\n    Direction.up,\n    Direction.down,\n    Direction.left,\n    Direction.right,\n    Direction.upLeft,\n    Direction.upRight,\n    Direction.downLeft,\n    Direction.downRight,\n  ]\n\n  public multiple(ratio: number): Point {\n    return new Point(this.x * ratio, this.y * ratio)\n  }\n}\n\nexport const minUnsafe = function<T>(list: T[]): T {\n  const elem = min(list)\n  if (elem !== undefined) {\n    return elem\n  }\n\n  throw 'minUnsafe got empty array'\n}\n","import { Creature } from './creature'\nimport { Point } from '../utils/utils'\nimport { LevelMap } from './level_map'\nimport { Item } from './item'\nimport { Game } from './game'\nimport { ItemsBunch } from '../lib/bunch'\nimport { Player } from './player'\nimport { Reaction } from '../events/internal'\n\nexport enum TileTypes {\n  Wall,\n  Door,\n  Floor,\n  StairwayDown,\n  StairwayUp,\n  Trap,\n  Trigger,\n}\n\nexport abstract class Tile {\n  public creature?: Creature\n  public items: ItemsBunch<Item> | undefined\n\n  constructor(public key: string, public kind: TileTypes) {}\n\n  public addItem(item: Item, count: number): void {\n    if (!this.items) {\n      this.items = new ItemsBunch()\n    }\n\n    this.items.put(item, count)\n  }\n\n  public free(creature?: Creature): boolean {\n    return this.isFloor() && this.passibleThrough(creature)\n  }\n\n  public isFloor(): boolean {\n    return this.kind === TileTypes.Floor\n  }\n\n  public visibleThrough(): boolean {\n    return true\n  }\n\n  public passibleThrough(actor?: Creature): boolean {\n    if (actor && this.creature) {\n      return this.kind !== TileTypes.Wall && this.creature.id === actor.id\n    }\n\n    return this.kind !== TileTypes.Wall && !this.creature\n  }\n\n  public abstract visit(tileVisitor: TileVisitor): void\n\n  public clone(from: Tile = this): Tile {\n    let tile = this.buildNew() // TODO: Rethink & make clear\n\n    if (from.creature) {\n      tile.creature = from.creature\n    }\n    tile.items = from.items && from.items.clone()\n    return tile\n  }\n\n  protected abstract buildNew(): Tile\n}\n\nexport class Floor extends Tile {\n  public visibleThrough(): boolean {\n    return true\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onFloor(this)\n  }\n\n  protected buildNew(): Tile {\n    return new Floor(this.key, this.kind)\n  }\n}\n\nexport class Corridor extends Floor {}\n\nexport class Room extends Floor {\n  constructor() {\n    super('R', TileTypes.Floor)\n  }\n}\n\nexport class Door extends Tile {\n  constructor(public open: boolean = Math.random() >= 0.5) {\n    super('D', TileTypes.Door)\n  }\n\n  public visibleThrough(): boolean {\n    return this.open\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onDoor(this)\n  }\n\n  protected buildNew(): Tile {\n    return new Door(this.open)\n  }\n}\n\nexport class Wall extends Tile {\n  constructor() {\n    super('W', TileTypes.Wall)\n  }\n\n  public visibleThrough(): boolean {\n    return false\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onWall(this)\n  }\n\n  protected buildNew(): Tile {\n    return new Wall()\n  }\n}\n\nexport abstract class Stairway extends Tile {\n  private _enterPos: Point | undefined\n\n  constructor(\n    key: string,\n    type: TileTypes,\n    public currentMap: LevelMap,\n    public adjacentMapName: string\n  ) {\n    super(key, type)\n  }\n\n  public enterPos(levelMap: LevelMap, adjacentMap: LevelMap): Point {\n    if (this._enterPos) {\n      return this._enterPos\n    }\n\n    return (this._enterPos = adjacentMap.matchStairs(levelMap.name))\n  }\n\n  public visibleThrough(): boolean {\n    return true\n  }\n}\n\nexport class StairwayDown extends Stairway {\n  constructor(currentMap: LevelMap, adjacentMapName: string) {\n    super('>', TileTypes.StairwayDown, currentMap, adjacentMapName)\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onStairwayDown(this)\n  }\n\n  protected buildNew(): Tile {\n    return new StairwayDown(this.currentMap, this.adjacentMapName)\n  }\n}\n\nexport class StairwayUp extends Stairway {\n  constructor(currentMap: LevelMap, adjacentMapName: string) {\n    super('<', TileTypes.StairwayUp, currentMap, adjacentMapName)\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onStairwayUp(this)\n  }\n\n  protected buildNew(): Tile {\n    return new StairwayUp(this.currentMap, this.adjacentMapName)\n  }\n}\n\nexport enum TrapType {\n  AirBlow,\n  BareWire,\n  FallingRock,\n  Hole,\n  Light,\n  Teleportation,\n  Water,\n}\n\nexport abstract class Trap extends Tile {\n  constructor(\n    public readonly type: number,\n    public tile: Tile,\n    public revealed: boolean = false\n  ) {\n    super('^', TileTypes.Trap)\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onTrap(this)\n  }\n\n  abstract get dodgeRatio(): number\n\n  public abstract activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction\n\n  protected disarmTile(\n    { x, y }: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    game.logger.succeededToUntrap(player)\n    levelMap.setTile(x, y, this.tile.clone(this))\n  }\n\n  public abstract untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void\n}\n\nexport abstract class TriggerTile extends Tile {\n  constructor(public singleUse: boolean = true, public tile: Tile) {\n    super('T', TileTypes.Trigger)\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    tileVisitor.onTrigger(this)\n  }\n\n  public activate(game: Game, levelMap: LevelMap, actor: Creature): void {\n    if (this.singleUse) {\n      const { x, y } = levelMap.creaturePos(actor)\n      const tile = this.clone()\n      tile.creature = actor\n      levelMap.setTile(x, y, tile)\n    }\n\n    this.onTrigger(game, levelMap, actor)\n  }\n\n  public buildNew(): Tile {\n    return this.tile.clone()\n  }\n\n  protected abstract onTrigger(\n    game: Game,\n    levelMap: LevelMap,\n    actor: Creature\n  ): void\n}\n\nexport class LogMessageTrigger extends TriggerTile {\n  constructor(private message: string, singleUse: boolean = true, tile: Tile) {\n    super(singleUse, tile)\n  }\n\n  protected onTrigger(game: Game): void {\n    game.logger.info(this.message)\n  }\n}\n\n// TODO: Add return type?\nexport abstract class TileVisitor {\n  public onWall(wall: Wall): void {\n    this.default(wall)\n  }\n\n  public onFloor(floor: Floor): void {\n    this.default(floor)\n  }\n\n  public onStairwayDown(stairway: StairwayDown): void {\n    this.onStairway(stairway)\n  }\n\n  public onStairwayUp(stairway: StairwayUp): void {\n    this.onStairway(stairway)\n  }\n\n  public onDoor(door: Door): void {\n    this.default(door)\n  }\n\n  public onTrigger(trigger: TriggerTile): void {\n    this.default(trigger)\n  }\n\n  public onTrap(trap: Trap): void {\n    this.default(trap)\n  }\n\n  protected onStairway(stairway: Stairway): void {\n    this.default(stairway)\n  }\n\n  protected default(tile: Tile): void {}\n}\n","import { Player } from '../models/player'\nimport { LevelMap } from '../models/level_map'\nimport { Tile } from '../models/tile'\nimport {\n  Game,\n  IdlePresenter,\n  BaseInfoPresenter,\n  EquipmentPresenter,\n  HistoryInfoPresenter,\n  TalentsPresenter,\n} from '../../engine'\n\nexport enum PresenterType {\n  TalentsPicking,\n  Death,\n  Idle,\n  ItemsListing,\n  Missile,\n  ProfessionPicking,\n  Look,\n  Teleportation,\n  PickHandleOption,\n  CharacterInfo,\n}\n\nexport abstract class Presenter {\n  public player: Player\n\n  abstract get type(): PresenterType\n\n  constructor(protected levelMap: LevelMap, protected game: Game) {\n    this.player = this.game.player\n  }\n\n  get tile(): Tile {\n    return this.levelMap.creatureTile(this.player)\n  }\n\n  protected endTurn(): void {\n    this.game.player.ai.endTurn(this.game, this.levelMap)\n  }\n\n  protected redirect(presenter: Presenter): void {\n    this.game.player.ai.redirect(presenter)\n  }\n\n  public goIdle(): void {\n    this.redirect(new IdlePresenter(this.levelMap, this.game))\n  }\n}\n\nexport abstract class BaseMenusPresenter extends Presenter {\n  public goToBaseInfo(): void {\n    this.redirect(new BaseInfoPresenter(this.levelMap, this.game))\n  }\n\n  public goToInventory(): void {\n    this.redirect(new EquipmentPresenter(this.levelMap, this.game))\n  }\n\n  public goToHistoryInfo(): void {\n    this.redirect(new HistoryInfoPresenter(this.levelMap, this.game))\n  }\n\n  public goToTalents(): void {\n    this.redirect(new TalentsPresenter(this.levelMap, this.game))\n  }\n}\n","import { Player } from './player'\nimport { CreatureSpecie } from './specie'\n\nimport { Game } from './game'\nimport { Damage } from '../lib/damage'\nimport { ImpactType } from '../lib/impact'\nimport { Material, WaterAffect } from '../lib/material'\n\nexport enum Usage {\n  WeaponOneHand,\n  WearsOnHead,\n  WearsOnBody,\n  Ring,\n  Amulet,\n  Throw,\n  Shoot,\n  Boots,\n  Tool,\n  Belt,\n  Gloves,\n  Gauntlets,\n  Cloak,\n  Scroll,\n}\n\nexport enum ItemGroup {\n  BodyArmor,\n  OneHandWeapon,\n  Consumable,\n  Missile,\n  Potion,\n  MissileWeapon,\n  Boots,\n  Scrolls,\n  Hat,\n}\n\nexport enum ItemSubgroup {\n  MissileRock,\n  Sling,\n\n  Bow,\n  Arrows,\n}\n\nexport type ItemId = number\n\nexport enum CorrosionLevel {\n  None,\n  Slightly,\n  Mostly,\n  Fully,\n}\n\nexport class Item {\n  private static lastId: ItemId = 0\n  public static getId(): ItemId {\n    return this.lastId++\n  }\n\n  public impacts: ImpactType[] = []\n  public corrosionLevel: CorrosionLevel = CorrosionLevel.None\n\n  constructor(\n    public group: ItemGroup,\n    public name: string,\n    public weight: number,\n    public material: Material,\n    public readonly usages: Usage[] = [],\n    public id: ItemId = Item.getId()\n  ) {}\n\n  // TODO: Recalculate stats on corrosion\n  public corrode(): boolean {\n    switch (this.corrosionLevel) {\n      case CorrosionLevel.None:\n        this.corrosionLevel = CorrosionLevel.Slightly\n        return true\n      case CorrosionLevel.Slightly:\n        this.corrosionLevel = CorrosionLevel.Mostly\n        return true\n      case CorrosionLevel.Mostly:\n        this.corrosionLevel = CorrosionLevel.Fully\n        return true\n    }\n\n    return false\n  }\n\n  get affectedWithWater(): boolean {\n    return this.material.affectedWithWater !== undefined\n  }\n\n  get firm(): boolean {\n    return this.material.firm\n  }\n\n  get insulator(): boolean {\n    return this.material.insulator\n  }\n\n  get canSeeDetails(): boolean {\n    return true\n  }\n\n  public clone(): Item {\n    return new Item(this.group, this.name, this.weight, this.material)\n  }\n\n  public groupsWith(item: Item): boolean {\n    return this.name === item.name\n  }\n\n  public worksWith(item: Item): boolean {\n    return false\n  }\n\n  public canThrow(player: Player): boolean {\n    return true\n  }\n}\n\nexport class Corpse extends Item {\n  constructor(public readonly specie: CreatureSpecie) {\n    super(\n      ItemGroup.Consumable,\n      `${specie.name}'s corpse`,\n      specie.weight,\n      specie.material\n    )\n  }\n}\n\nexport abstract class Potion extends Item {\n  constructor(public name: string, material: Material = Material.glass) {\n    super(ItemGroup.Potion, name, 0.2, material)\n  }\n\n  abstract onDrink(game: Game): void\n}\n\nexport abstract class Weapon extends Item {\n  constructor(\n    group: ItemGroup,\n    name: string,\n    weight: number,\n    material: Material,\n    protected rawDamages: Damage[],\n    usages: Usage[]\n  ) {\n    super(group, name, weight, material, usages)\n  }\n\n  get damages(): Damage[] {\n    switch (this.corrosionLevel) {\n      case CorrosionLevel.Slightly:\n        return this.damageWithCorrosion(1)\n      case CorrosionLevel.Mostly:\n        return this.damageWithCorrosion(2)\n      case CorrosionLevel.Fully:\n        return this.damageWithCorrosion(4)\n      default:\n        return this.rawDamages\n    }\n  }\n\n  protected damageWithCorrosion(penalty: number): Damage[] {\n    return this.rawDamages.map(({ dice, type, extra }: Damage) => {\n      return { dice, type, extra: extra - penalty }\n    })\n  }\n}\n\nexport abstract class Missile extends Weapon {\n  constructor(\n    name: string,\n    weight: number,\n    damages: Damage[],\n    material: Material\n  ) {\n    super(ItemGroup.Missile, name, weight, material, damages, [])\n  }\n}\n\nexport abstract class MissileWeapon extends Weapon {\n  constructor(\n    name: string,\n    weight: number,\n    damages: Damage[],\n    material: Material\n  ) {\n    super(ItemGroup.MissileWeapon, name, weight, material, damages, [\n      Usage.Shoot,\n    ])\n  }\n}\n\nexport class OneHandWeapon extends Weapon {\n  constructor(\n    name: string,\n    weight: number,\n    material: Material,\n    damages: Damage[]\n  ) {\n    super(ItemGroup.OneHandWeapon, name, weight, material, damages, [\n      Usage.WeaponOneHand,\n    ])\n  }\n}\n\nexport enum ProtectionType {\n  Light,\n  Medium,\n  Heavy,\n  Solid,\n  Unarmored,\n}\n\nexport type Protection = {\n  type: ProtectionType\n  value: number\n}\n\nexport abstract class Armor extends Item {\n  constructor(\n    group: ItemGroup,\n    name: string,\n    weight: number,\n    material: Material,\n    protected readonly rawProtections: Protection[],\n    usage: Usage\n  ) {\n    super(group, name, weight, material, [usage])\n  }\n\n  get protections(): Protection[] {\n    switch (this.corrosionLevel) {\n      case CorrosionLevel.Slightly:\n        return this.protectionWithCorrosion(1)\n      case CorrosionLevel.Mostly:\n        return this.protectionWithCorrosion(2)\n      case CorrosionLevel.Fully:\n        return this.protectionWithCorrosion(4)\n      default:\n        return this.rawProtections\n    }\n  }\n\n  protected protectionWithCorrosion(penalty: number): Protection[] {\n    return this.rawProtections.map(({ type, value }: Protection) => {\n      return { type, value: value - penalty }\n    })\n  }\n}\n\nexport class BodyArmor extends Armor {\n  constructor(\n    name: string,\n    weight: number,\n    material: Material,\n    protections: Protection[]\n  ) {\n    super(\n      ItemGroup.BodyArmor,\n      name,\n      weight,\n      material,\n      protections,\n      Usage.WearsOnBody\n    )\n  }\n}\n\nexport class Boots extends Armor {\n  constructor(\n    name: string,\n    weight: number,\n    material: Material,\n    protections: Protection[]\n  ) {\n    super(ItemGroup.Boots, name, weight, material, protections, Usage.Boots)\n  }\n}\n\nexport class Hat extends Armor {\n  constructor(\n    name: string,\n    weight: number,\n    material: Material,\n    protections: Protection[]\n  ) {\n    super(ItemGroup.Hat, name, weight, material, protections, Usage.WearsOnHead)\n  }\n}\n\nexport class Scroll extends Item {\n  constructor(name: string) {\n    super(ItemGroup.Scrolls, name, 0.1, Material.paper, [Usage.Scroll])\n  }\n}\n","import { sample } from 'lodash'\nimport {\n  allAbilities,\n  BodyArmor,\n  Clan,\n  Color,\n  DamageType,\n  Game,\n  Gender,\n  Level,\n  Material,\n  OneHandWeapon,\n  PickUpItemsEvent,\n  Player,\n  PlayerAI,\n  PlayerBorgAI,\n  ProtectionType,\n  PutOnItemEvent,\n} from './engine'\nimport { Scroll } from './engine/models/item'\nimport { Critical } from './engine/models/specie'\nimport { Dispatcher } from './onisun/ai'\nimport { TitleDungeon } from './onisun/dungeons/title_dungeon'\nimport {\n  commonBow,\n  ironArrow,\n  LightSpeedBoots,\n  smallRock,\n  woodenArrow,\n} from './onisun/items'\nimport {\n  OnisunAttackerProfession,\n  OnisunDefenderProfession,\n  OnisunProfessionPicker,\n} from './onisun/professions'\nimport { allRaces, humanRace } from './onisun/races'\nimport { PrimaryAttributes } from './engine/lib/race'\nimport {\n  Menu,\n  MainMenu,\n  ChooseRaceMenu,\n  AttributesMenu,\n  AttributesSelectionMenu,\n} from './onisun/menus'\n\nexport * from './engine'\nexport * from './onisun/ai'\nexport * from './onisun/items'\nexport * from './onisun/menus'\nexport * from './onisun/professions'\nexport * from './onisun/races'\nexport * from './onisun/talents'\n\nconst critical: Critical = { chance: 0.05, multiplier: 2 }\n\nexport class TmpApplication {\n  public game: Onisun\n  constructor() {\n    this.game = new Onisun(this.initPlayer())\n\n    const dungeon = new TitleDungeon()\n    dungeon.register(this.game)\n    dungeon.enter(this.game, this.game.player)\n\n    const player = this.game.player\n    player.professions.push(new OnisunAttackerProfession())\n    player.professions.push(new OnisunDefenderProfession())\n\n    const dagger = new OneHandWeapon('Кинжал', 0.8, Material.iron, [\n      { type: DamageType.Melee, dice: { times: 1, max: 3 }, extra: 2 },\n    ])\n    const katana = new OneHandWeapon('Катана', 1, Material.iron, [\n      { type: DamageType.Melee, dice: { times: 5, max: 2 }, extra: 0 },\n    ])\n    const plateArmor = new BodyArmor('Латы', 1, Material.iron, [\n      { type: ProtectionType.Heavy, value: 5 },\n    ])\n    const scroll = new Scroll('Свиток ххх')\n\n    const wooden = woodenArrow()\n    const iron = ironArrow()\n    const rock = smallRock()\n\n    const bow = commonBow()\n\n    if (this.game.currentMap) {\n      const tile = this.game.currentMap.creatureTile(player)\n\n      tile.addItem(dagger, 2)\n      tile.addItem(katana, 1)\n      tile.addItem(plateArmor, 1)\n      tile.addItem(wooden, 5)\n      tile.addItem(iron, 5)\n      tile.addItem(rock, 5)\n      tile.addItem(bow, 2)\n      tile.addItem(scroll, 20)\n\n      player.on(\n        new PickUpItemsEvent(\n          tile,\n          [\n            { item: dagger, count: 2 },\n            { item: katana, count: 1 },\n            { item: plateArmor, count: 1 },\n            { item: wooden, count: 5 },\n            { item: iron, count: 5 },\n            { item: rock, count: 5 },\n            { item: bow, count: 2 },\n            { item: scroll, count: 20 },\n          ],\n          this.game\n        )\n      )\n\n      player.on(\n        new PutOnItemEvent(player.inventory.missileWeaponSlot, bow, this.game)\n      )\n      player.on(\n        new PutOnItemEvent(player.inventory.missileSlot, wooden, this.game)\n      )\n      player.on(\n        new PutOnItemEvent(player.inventory.rightHandSlot, katana, this.game)\n      )\n      player.on(\n        new PutOnItemEvent(player.inventory.chestSlot, plateArmor, this.game)\n      )\n\n      player.addItem(new LightSpeedBoots(), 1)\n\n      this.game.logger.reset()\n    }\n  }\n\n  protected initPlayer(): Player {\n    return new Player(\n      new Level([1, 3, 5, 10, 20]),\n      new PlayerAI(),\n      {\n        name: 'Player',\n        weight: 80,\n        clan: Clan.Player,\n        abilities: allAbilities,\n        protections: [],\n        damages: [],\n        maxHealthValue: 10,\n        regenerationRate: 30,\n        regenerationValue: 1,\n        resistances: [],\n        visionRadius: 10,\n        moveSpeed: 20,\n        attackSpeed: 20,\n        bodyControl: 5,\n        leavesCorpseRatio: 0,\n        material: Material.flesh,\n        throwingDamages: [],\n\n        race: humanRace,\n        gender: Gender.Male,\n        eyeColor: Color.Aqua,\n        hairColor: Color.Fuchsia,\n        skinColor: Color.Purple,\n        height: 100,\n\n        critical,\n      },\n      12,\n      12,\n      15\n    )\n  }\n}\n\nexport class Onisun extends Game {\n  constructor(player: Player) {\n    super(player, new OnisunProfessionPicker(player))\n  }\n}\n\nexport class TitleGame extends Game {\n  public turn(): void {\n    super.turn()\n\n    if (this.currentMap && this.playerTurn) {\n      this.player.ai.endTurn(this, this.currentMap)\n    }\n  }\n\n  get done(): boolean {\n    return this.player.dead || this.turns > 150\n  }\n}\n\nexport class Application {\n  public menu: Menu\n\n  constructor() {\n    // this.menu = new MainMenu(this)\n    this.menu = new AttributesSelectionMenu(Gender.Male, humanRace, this)\n  }\n\n  public titleGame() {\n    let player = new Player(\n        new Level([1, 3, 5, 10, 20]),\n        new PlayerBorgAI(new Dispatcher()),\n        {\n          name: 'Player',\n          weight: 80,\n          clan: Clan.Player,\n          abilities: allAbilities,\n          protections: [],\n          damages: [\n            { type: DamageType.Pure, dice: { times: 3, max: 3 }, extra: 1 },\n          ],\n          maxHealthValue: 10,\n          regenerationRate: 1,\n          regenerationValue: 1,\n          resistances: [],\n          visionRadius: 10,\n          moveSpeed: 20,\n          attackSpeed: 20,\n          bodyControl: 5,\n          leavesCorpseRatio: 0,\n          material: Material.flesh,\n          throwingDamages: [],\n\n          race: sample(allRaces) || humanRace,\n          gender: Gender.Male,\n          eyeColor: Color.Aqua,\n          hairColor: Color.Fuchsia,\n          skinColor: Color.Purple,\n          height: 100,\n          critical,\n        },\n        12,\n        12,\n        15\n      ),\n      game = new TitleGame(player, new OnisunProfessionPicker(player)),\n      dungeon = new TitleDungeon()\n\n    dungeon.register(game)\n    dungeon.enter(game, player)\n\n    return game\n  }\n}\n","import { includes, intersection, random, sum, sumBy, times } from 'lodash'\nimport { DamageType, ProtectionType } from '../../engine'\nimport { Protection } from '../models/item'\nimport { Resistance, Critical } from '../models/specie'\nimport { Damage, Dice } from './damage'\n\nexport type DamageOrResist = { damage: number; resist: boolean }\n\nexport class Calculator {\n  private constructor() {}\n\n  public static withCritical(\n    damages: Damage[],\n    { chance, multiplier }: Critical\n  ): Damage[] {\n    if (Math.random() > chance) {\n      return damages\n    }\n\n    return damages.map(\n      ({ type, dice: { times, max }, extra }): Damage => {\n        return {\n          type,\n          dice: { times, max: max * multiplier },\n          extra: extra * multiplier,\n        }\n      }\n    )\n  }\n\n  public static misses(attackerBC: number, victimBC: number): boolean {\n    return (\n      Math.random() > attackerBC / (attackerBC + Math.pow(victimBC * 0.25, 0.8))\n    )\n  }\n\n  // Random with luck based align to get low value\n  public static lowerWeight(max: number, min: number = 1): number {\n    let count = 0\n\n    for (let i = min; i < max; i++) {\n      if (this.chance(1, 3)) {\n        count += 1\n      }\n    }\n\n    return Math.max(1, count)\n  }\n  // Random with luck based align to get high value\n  public static higherWeight(max: number, min: number = 1): number {\n    return max + min - this.lowerWeight(max, min)\n  }\n\n  public static chance(hit: number, of: number): boolean {\n    return random(1, of) <= hit\n  }\n\n  // Function result varies from 0 to 1. Ratio defines the speed of growing.\n  // E.g. dodges(10, 1) = 0.93\n  //      dodges(10, 5) = 0.7\n  public static dodges(actorBC: number, ratio: number): boolean {\n    return Math.random() < (Math.atan(actorBC / ratio) / Math.PI) * 2\n  }\n\n  public static damage(\n    damages: Damage[],\n    protectionTypes: Protection[],\n    victimResistances: Resistance[]\n  ): DamageOrResist {\n    if (\n      damages.every(({ type, resistances }) =>\n        this.resistTo(type, resistances, victimResistances)\n      )\n    ) {\n      return { damage: 0, resist: true }\n    }\n\n    const damage = sumBy(\n      damages,\n      ({ extra, dice, type, resistances }): number => {\n        if (this.resistTo(type, resistances, victimResistances)) {\n          return 0\n        }\n\n        return Math.floor(\n          Math.max(\n            0,\n            extra +\n              this.dropDice(dice) -\n              this.protectionValue(type, protectionTypes)\n          )\n        )\n      }\n    )\n\n    return { damage, resist: false }\n  }\n\n  protected static resistTo(\n    damageType: DamageType,\n    resistances: Resistance[] | undefined,\n    victimResistances: Resistance[]\n  ): boolean {\n    if (resistances && intersection(victimResistances, resistances).length) {\n      return true\n    }\n\n    switch (damageType) {\n      case DamageType.Melee:\n      case DamageType.Pierce:\n      case DamageType.Blunt:\n        return includes(victimResistances, Resistance.Intangible)\n      case DamageType.Magic:\n        return includes(victimResistances, Resistance.MagicDamage)\n      case DamageType.Pure:\n        return false\n    }\n  }\n\n  protected static dropDice(dice: Dice): number {\n    return sum(times(dice.times, () => random(1, dice.max)))\n  }\n\n  protected static protectionValue(\n    damageType: DamageType,\n    protections: Protection[]\n  ): number {\n    return sum(\n      protections.map(\n        ({ type, value }: Protection): number =>\n          value * this.armorToDamageRatio(damageType, type)\n      )\n    )\n  }\n\n  protected static armorToDamageRatio = (\n    damageType: DamageType,\n    armorType: ProtectionType\n  ): number => {\n    switch (damageType) {\n      case DamageType.Melee:\n        switch (armorType) {\n          case ProtectionType.Medium:\n            return 2 / 3\n          case ProtectionType.Solid:\n            return 4 / 3\n          default:\n            return 1\n        }\n      case DamageType.Pierce:\n        switch (armorType) {\n          case ProtectionType.Light:\n            return 1 / 2\n          case ProtectionType.Medium:\n            return 4 / 3\n          case ProtectionType.Solid:\n            return 3\n          case ProtectionType.Unarmored:\n            return 3 / 4\n          default:\n            return 1\n        }\n      case DamageType.Blunt:\n        switch (armorType) {\n          case ProtectionType.Medium:\n            return 2\n          case ProtectionType.Solid:\n            return 1 / 2\n          case ProtectionType.Unarmored:\n            return 1 / 2\n          default:\n            return 1\n        }\n      case DamageType.Magic:\n        switch (armorType) {\n          case ProtectionType.Light:\n            return 5 / 4\n          case ProtectionType.Medium:\n            return 3 / 4\n          case ProtectionType.Heavy:\n            return 1 / 2\n          case ProtectionType.Solid:\n            return 3\n          default:\n            return 1\n        }\n      case DamageType.Pure:\n        return 0\n      default:\n        throw 'Got unknown type of damage!'\n    }\n  }\n}\n","export enum WaterAffect {\n  Corrosion,\n  Destroy,\n}\n\nexport interface Material {\n  readonly affectedWithWater?: WaterAffect\n  readonly firm: boolean\n  readonly fragile: boolean\n  readonly insulator: boolean\n}\n\nexport namespace Material {\n  export const cloth: Material = {\n    affectedWithWater: undefined,\n    firm: false,\n    fragile: false,\n    insulator: false,\n  }\n\n  export const flesh: Material = {\n    affectedWithWater: undefined,\n    firm: true,\n    fragile: false,\n    insulator: true,\n  }\n\n  export const glass: Material = {\n    affectedWithWater: undefined,\n    firm: false,\n    fragile: true,\n    insulator: false,\n  }\n\n  export const iron: Material = {\n    affectedWithWater: WaterAffect.Corrosion,\n    firm: true,\n    fragile: false,\n    insulator: true,\n  }\n\n  export const leather: Material = {\n    affectedWithWater: undefined,\n    firm: false,\n    fragile: false,\n    insulator: false,\n  }\n\n  export const paper: Material = {\n    affectedWithWater: WaterAffect.Destroy,\n    firm: false,\n    fragile: false,\n    insulator: true,\n  }\n\n  export const stone: Material = {\n    affectedWithWater: undefined,\n    firm: true,\n    fragile: false,\n    insulator: true,\n  }\n\n  export const wood: Material = {\n    affectedWithWater: undefined,\n    firm: true,\n    fragile: false,\n    insulator: true,\n  }\n}\n","import { Point, twoDimArray } from '../utils/utils'\nimport { Creature, Clan } from '../models/creature'\n\nimport { MemoryTile, Memory } from '../models/memory'\nimport { MoveEvent } from '../events/move_event'\nimport { Game } from '../models/game'\nimport { LevelMap, CreatureEvent, leePath } from '../../engine'\n\nexport abstract class AI {\n  public abstract act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined\n\n  protected moveTo(\n    actor: Creature,\n    destination: Point,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    return this.move(actor, levelMap, game, point => destination.eq(point))\n  }\n\n  protected move(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game,\n    dest: (point: Point, tile: MemoryTile) => boolean\n  ): CreatureEvent | undefined {\n    const [point] = this.buildPath(actor, levelMap, dest)\n\n    if (point) {\n      return new MoveEvent(game, levelMap, point)\n    }\n  }\n\n  protected buildPath(\n    actor: Creature,\n    levelMap: LevelMap,\n    dest: (point: Point, tile: MemoryTile) => boolean\n  ): Point[] {\n    return leePath(\n      actor.stageMemory(levelMap),\n      levelMap.creaturePos(actor),\n      tile => tile.tangible(actor),\n      dest\n    )\n  }\n\n  protected withinView(\n    map: Memory,\n    pos: Point,\n    visit: (point: Point, tile: MemoryTile) => void\n  ): void {\n    let tileVisited: boolean[][] = twoDimArray(\n      map.width,\n      map.height,\n      () => false\n    )\n    let pointsToCheck: Point[] = [pos]\n\n    while (pointsToCheck.length) {\n      let wavePoints: Point[] = []\n\n      pointsToCheck.forEach((point: Point) => {\n        if (!map.inRange(point)) {\n          return\n        }\n\n        const tile = map.at(point.x, point.y)\n        if (!tile.visible || tileVisited[point.x][point.y]) {\n          return\n        }\n\n        tileVisited[point.x][point.y] = true\n\n        visit(point, tile)\n\n        point.wrappers().forEach(dist => wavePoints.push(dist))\n      })\n\n      pointsToCheck = wavePoints\n    }\n  }\n\n  public enemies(actor: Creature, enemy: Creature): boolean {\n    if (actor.id === enemy.id) {\n      return false\n    }\n\n    if (actor.clan === Clan.FreeForAll || enemy.clan === Clan.FreeForAll) {\n      return true\n    }\n\n    if (actor.clan === Clan.Player && enemy.clan === Clan.PlayerOnlyEnemy) {\n      return true\n    }\n\n    if (enemy.clan === Clan.Player && actor.clan === Clan.PlayerOnlyEnemy) {\n      return true\n    }\n\n    return false\n  }\n}\n\nexport abstract class FollowTargetAI extends AI {\n  public destination?: Point = undefined\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    if (!this.foundNewTarget(actor, levelMap) || !this.destination) {\n      return this.checkCurrentTile(actor, levelMap, game)\n    }\n\n    const event = this.goTo(actor, levelMap, game, this.destination)\n    if (event) {\n      return event\n    }\n\n    this.destination = undefined\n    this.onCantMove(actor)\n\n    return\n  }\n\n  protected goTo(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game,\n    point: Point\n  ): CreatureEvent | undefined {\n    return this.moveTo(actor, point, levelMap, game)\n  }\n\n  protected checkCurrentTile(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    if (this.destination && levelMap.creaturePos(actor).eq(this.destination)) {\n      this.destination = undefined\n      return this.onReach(actor, levelMap, game)\n    }\n  }\n\n  protected abstract foundNewTarget(\n    actor: Creature,\n    levelMap: LevelMap\n  ): boolean\n  protected onMove(actor: Creature): void {}\n  protected onReach(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    return\n  }\n  protected onCantMove(actor: Creature): void {}\n}\n\nexport abstract class GoToTileAI extends FollowTargetAI {\n  constructor(protected matcher: (tile: MemoryTile) => boolean) {\n    super()\n  }\n\n  protected checkCurrentTile(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    let event = super.checkCurrentTile(actor, levelMap, game)\n\n    if (event) {\n      return event\n    }\n\n    const pos = levelMap.creaturePos(actor)\n    if (this.matcher(actor.stageMemory(levelMap).at(pos.x, pos.y))) {\n      this.destination = undefined\n      return this.onReach(actor, levelMap, game)\n    }\n  }\n\n  protected foundNewTarget(actor: Creature, levelMap: LevelMap): boolean {\n    const path = leePath(\n      actor.stageMemory(levelMap),\n      levelMap.creaturePos(actor),\n      tile => tile.tangible(actor),\n      (point, tile) => this.matcher(tile),\n      true\n    )\n\n    if (path.length) {\n      this.destination = path.pop()\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","import { Usage, Item, Missile, Weapon } from './item'\nimport { intersection } from 'lodash'\nimport { Inventory } from './inventory'\nimport { GroupedItem } from '../lib/bunch'\nimport { Material } from '../../engine'\n\nexport abstract class InventorySlot<Equipment extends Item = Item> {\n  public name: string = 'InventorySlot'\n\n  constructor(\n    // What kind of items can be put in slot\n    public readonly usages: Usage[],\n    // Has to put only a single item or can put a bunch of them\n    public readonly useSingleItem: boolean,\n    public equipment?: GroupedItem<Equipment>\n  ) {}\n\n  public matchingItems(inventory: Inventory): GroupedItem<Item>[] {\n    return inventory.cares().filter(itemGroup => this.match(itemGroup.item))\n  }\n\n  get insulator(): boolean {\n    return !!(this.equipment && this.equipment.item.insulator)\n  }\n\n  get firm(): boolean {\n    return !!(this.equipment && this.equipment.item.firm)\n  }\n\n  public equip(item: Equipment, count: number) {\n    if (this.equipment) {\n      throw `Slot ${this.name} is already equipped with ${this.equipment.item}`\n    }\n\n    this.equipment = { count, item }\n  }\n\n  public takeOff(): void {\n    if (!this.equipment) {\n      throw `Slot ${this.name} has nothing to take off`\n    }\n\n    this.equipment = undefined\n  }\n\n  protected match(item: Item): boolean {\n    return intersection(item.usages, this.usages).length > 0\n  }\n\n  protected withPairItem(\n    baseMatch: GroupedItem<Item>[],\n    item: Item\n  ): GroupedItem<Item>[] {\n    return baseMatch.filter(groupedItem => groupedItem.item.worksWith(item))\n  }\n}\n\nexport abstract class BodyPart<\n  Equipment extends Item = Item\n> extends InventorySlot<Equipment> {\n  public abstract material: Material\n\n  get affectedWithWater(): boolean {\n    return this.material.affectedWithWater !== undefined\n  }\n}\n\nexport class RightHandSlot extends BodyPart<Weapon> {\n  public name: string = 'Правая рука'\n  constructor(public material: Material) {\n    super([Usage.WeaponOneHand], true)\n  }\n}\n\nexport class LeftHandSlot extends BodyPart<Weapon> {\n  public name: string = 'Левая рука'\n  constructor(public material: Material) {\n    super([Usage.WeaponOneHand], true)\n  }\n}\n\nexport class HeadSlot extends BodyPart {\n  public name: string = 'Голова'\n  constructor(public material: Material) {\n    super([Usage.WearsOnHead], true)\n  }\n}\n\nexport class ChestSlot extends BodyPart {\n  public name: string = 'Корпус'\n  constructor(public material: Material) {\n    super([Usage.WearsOnBody], true)\n  }\n}\n\nexport class BootsSlot extends BodyPart {\n  public name: string = 'Ботинки'\n  constructor(public material: Material) {\n    super([Usage.Boots], true)\n  }\n}\n\nexport class GlovesSlot extends InventorySlot {\n  public name: string = 'Перчатки'\n  constructor() {\n    super([Usage.Gloves], true)\n  }\n}\n\nexport class GauntletsSlot extends InventorySlot {\n  public name: string = 'Наручи'\n  constructor() {\n    super([Usage.Gauntlets], true)\n  }\n}\n\nexport class BeltSlot extends InventorySlot {\n  public name: string = 'Пояс'\n  constructor() {\n    super([Usage.Belt], true)\n  }\n}\n\nexport class AmuletSlot extends InventorySlot {\n  public name: string = 'Амулет'\n  constructor() {\n    super([Usage.Amulet], true)\n  }\n}\n\nexport class LeftFingerSlot extends InventorySlot {\n  public name: string = 'Левый палец'\n  constructor() {\n    super([Usage.Ring], true)\n  }\n}\n\nexport class RightFingerSlot extends InventorySlot {\n  public name: string = 'Правый палец'\n  constructor() {\n    super([Usage.Ring], true)\n  }\n}\n\nexport class CloakSlot extends InventorySlot {\n  public name: string = 'Плащ'\n  constructor() {\n    super([Usage.Cloak], true)\n  }\n}\n\nexport class MissileWeaponSlot extends InventorySlot<Weapon> {\n  public name: string = 'Метательное'\n  constructor() {\n    super([Usage.Shoot], true)\n  }\n\n  public matchingItems(inventory: Inventory): GroupedItem<Item>[] {\n    let baseMatch = super.matchingItems(inventory),\n      missile = inventory.missileSlot.equipment\n\n    if (missile) {\n      return this.withPairItem(baseMatch, missile.item)\n    }\n\n    return baseMatch\n  }\n}\n\nexport class MissileSlot extends InventorySlot<Missile> {\n  public name: string = 'Снаряды'\n  constructor() {\n    super([Usage.Throw], false)\n  }\n\n  public matchingItems(inventory: Inventory): GroupedItem<Item>[] {\n    let baseMatch = inventory.cares(),\n      missileWeapon = inventory.missileWeaponSlot.equipment\n\n    if (missileWeapon) {\n      return this.withPairItem(baseMatch, missileWeapon.item)\n    }\n\n    return baseMatch\n  }\n}\n\nexport class ToolsSlot extends InventorySlot {\n  public name: string = 'Инструмент'\n  constructor() {\n    super([Usage.Tool], true)\n  }\n}\n","import { CreatureEvent } from './internal'\nimport { LevelMap } from '../models/level_map'\nimport { TileVisitor, TriggerTile } from '../models/tile'\nimport { Creature, Game, Trap, Point, Reaction } from '../../engine'\nimport { Player } from '../models/player'\n\nclass SteppingTileVisitor extends TileVisitor {\n  public reaction: Reaction = Reaction.NOTHING\n\n  constructor(\n    private pos: Point,\n    private creature: Creature,\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public onTrap(trap: Trap): void {\n    this.reaction = trap.activate(\n      this.pos,\n      this.game,\n      this.levelMap,\n      this.creature\n    )\n  }\n\n  public onTrigger(trigger: TriggerTile): void {\n    trigger.activate(this.game, this.levelMap, this.creature)\n  }\n}\n\nexport class MoveEvent extends CreatureEvent {\n  constructor(\n    private game: Game,\n    private levelMap: LevelMap,\n    private nextPoint: Point,\n    private nextLevel: LevelMap = levelMap\n  ) {\n    super()\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    const pos = this.levelMap.creaturePos(actor)\n\n    if (this.nextLevel.name !== this.levelMap.name) {\n      this.levelMap.removeCreature(actor)\n      this.nextLevel.addCreature(this.nextPoint, actor)\n    } else {\n      this.levelMap.at(pos.x, pos.y).creature = undefined\n      this.levelMap.at(this.nextPoint.x, this.nextPoint.y).creature = actor\n    }\n\n    const visitor = new SteppingTileVisitor(\n      this.nextPoint,\n      actor,\n      this.levelMap,\n      this.game\n    )\n    this.nextLevel.at(this.nextPoint.x, this.nextPoint.y).visit(visitor)\n\n    return visitor.reaction\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    if (this.nextLevel && this.levelMap.name !== this.nextLevel.name) {\n      this.levelMap.reset()\n      this.nextLevel.enter()\n\n      this.affectCreature(player)\n\n      this.game.currentMap = this.nextLevel\n    } else {\n      this.affectCreature(player)\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { Corpse } from '../models/item'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { AIDieEvent } from '../ai/player_ai'\n\nexport enum DieReason {\n  Attack,\n  Missile,\n  Trap,\n  Overloaded,\n}\n\nexport class DieEvent extends CreatureEvent {\n  constructor(\n    private game: Game,\n    private levelMap: LevelMap,\n    private reason: DieReason\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    let tile = this.levelMap.creatureTile(creature)\n\n    this.levelMap.removeCreature(creature)\n    creature.dead = true\n\n    if (creature.specie.leavesCorpseRatio > Math.random()) {\n      tile.addItem(new Corpse(creature.specie), 1)\n    }\n\n    creature.inventoryItems.forEach(invItem =>\n      tile.addItem(invItem.item, invItem.count)\n    )\n\n    return Reaction.DIE\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    player.ai.pushEvent(new AIDieEvent(this.reason, this.levelMap, this.game))\n    player.dead = true\n    this.game.playerTurn = true\n\n    return Reaction.DIE\n  }\n}\n","import { Fov } from '../utils/fov'\nimport { TileVisitor, Door, Tile } from '../models/tile'\nimport { LevelMap } from '../models/level_map'\nimport { Point } from '../utils/utils'\nimport { Memory } from '../models/memory'\n\nclass VisibilityTileVisitor extends TileVisitor {\n  public visible: boolean = false\n  private x: number | undefined\n  private y: number | undefined\n\n  constructor(private stage: LevelMap, private pos: Point) {\n    super()\n  }\n\n  public isSolid(x: number, y: number): boolean {\n    this.x = x\n    this.y = y\n    this.stage.at(x, y).visit(this)\n    return !this.visible\n  }\n\n  public onDoor(door: Door) {\n    this.default(door)\n    this.visible =\n      this.visible || (this.pos.x === this.x && this.pos.y === this.y)\n  }\n\n  protected default(tile: Tile) {\n    if (this.x && this.y) {\n      this.visible = this.stage.visibleThrough(this.x, this.y)\n    }\n  }\n}\n\nexport const buildFov = function(\n  pos: Point,\n  radius: number,\n  memory: Memory,\n  levelMap: LevelMap\n): void {\n  const see = (x: number, y: number, degree: number): void => {\n    memory.at(x, y).see(levelMap.at(x, y), degree)\n  }\n\n  new Fov(\n    pos.x,\n    pos.y,\n    radius,\n    levelMap.width,\n    levelMap.height,\n    new VisibilityTileVisitor(levelMap, pos),\n    see\n  ).calc()\n}\n","import { includes } from 'lodash'\nimport { Game, GroupedItem, ImpactBunch, LevelMap, Memory } from '../../engine'\nimport { MetaAI } from '../ai/meta_ai'\nimport { AfterEvent } from '../events/after_event'\nimport { CreatureEvent, Reaction } from '../events/internal'\nimport { ItemsBunch } from '../lib/bunch'\nimport { ImpactType } from '../lib/impact'\nimport { buildFov } from '../lib/map_fov'\nimport { HealthStat } from '../lib/stat'\nimport { Item, Missile, Protection } from './item'\nimport { Damage } from '../lib/damage'\nimport { CreatureSpecie, Resistance } from './specie'\n\nexport enum Clan {\n  Player,\n  PlayerOnlyEnemy,\n  FreeForAll,\n}\n\nexport enum Ability {\n  GoStairwayDown,\n  Inventory,\n  PutOn,\n  Throwing,\n}\n\nexport const allAbilities = [\n  Ability.GoStairwayDown,\n  Ability.Inventory,\n  Ability.PutOn,\n  Ability.Throwing,\n]\n\nexport type CreatureId = number\n\nexport abstract class Creature<Specie extends CreatureSpecie = CreatureSpecie> {\n  private static lastId: CreatureId = 0\n  public static getId(): CreatureId {\n    return this.lastId++\n  }\n\n  protected stageMemories: Map<string, Memory> = new Map()\n\n  public dead: boolean = false\n\n  public health: HealthStat\n\n  constructor(public specie: Specie, public id: CreatureId = Creature.getId()) {\n    this.health = new HealthStat(specie)\n  }\n\n  get name(): string {\n    return this.specie.name\n  }\n\n  get clan(): Clan {\n    return this.specie.clan\n  }\n\n  get protections(): Protection[] {\n    return this.specie.protections\n  }\n\n  get throwDamages(): Damage[] {\n    return this.specie.throwingDamages\n  }\n\n  get damages(): Damage[] {\n    return this.specie.damages\n  }\n\n  public can(ability: Ability) {\n    return includes(this.specie.abilities, ability)\n  }\n\n  public on(event: CreatureEvent): Reaction {\n    return event.affectCreature(this)\n  }\n\n  get speed(): number {\n    return this.specie.moveSpeed\n  }\n\n  public stageMemory(levelMap: LevelMap): Memory {\n    const memory = this.stageMemories.get(levelMap.name)\n\n    if (memory) {\n      return memory\n    }\n\n    return this.visionMask(levelMap)\n  }\n\n  public visionMask(levelMap: LevelMap): Memory {\n    let memory = this.stageMemories.get(levelMap.name)\n\n    if (memory) {\n      memory.resetVisible()\n    } else {\n      memory = new Memory(levelMap.width, levelMap.height)\n\n      this.stageMemories.set(levelMap.name, memory)\n    }\n\n    buildFov(levelMap.creaturePos(this), this.visionRadius, memory, levelMap)\n\n    return memory\n  }\n\n  public abstract act(levelMap: LevelMap, game: Game): number\n\n  private _impactsBunch: ImpactBunch | undefined\n\n  get impactsBunch(): ImpactBunch {\n    if (!this._impactsBunch) {\n      this._impactsBunch = new ImpactBunch()\n    }\n\n    return this._impactsBunch\n  }\n\n  public hasImpact(type: ImpactType): boolean {\n    return includes(this.impacts, type)\n  }\n\n  public addConstImpact(type: ImpactType, effect: string): void {\n    this.impactsBunch.addConstImpact(type, effect)\n  }\n\n  public addImpact(type: ImpactType, turns: number): void {\n    this.impactsBunch.addImpact(type, turns)\n  }\n\n  public removeConstImpact(type: ImpactType, effect: string): void {\n    this.impactsBunch.removeConstImpact(type, effect)\n  }\n\n  public removeImpact(type: ImpactType): void {\n    this.impactsBunch.removeImpact(type)\n  }\n\n  get visionRadius(): number {\n    if (this.hasImpact(ImpactType.Blind)) {\n      return 0\n    }\n\n    return this.specie.visionRadius\n  }\n\n  get bodyControl(): number {\n    return this.specie.bodyControl\n  }\n\n  get impacts(): ImpactType[] {\n    return this.impactsBunch.activeImpacts\n  }\n\n  public hasResistance(resistance: Resistance): boolean {\n    return includes(this.resistances, resistance)\n  }\n\n  get resistances(): Resistance[] {\n    return this.specie.resistances\n  }\n\n  get weightWithCarryings(): number {\n    return this.specie.weight\n  }\n\n  abstract get missile(): GroupedItem<Missile> | undefined\n  abstract get inventoryItems(): GroupedItem<Item>[]\n\n  public abstract addItem(item: Item, count: number): void\n  public abstract removeItem(item: Item, count: number): void\n\n  public statsTurn(): void {\n    this.health.turn()\n\n    if (this._impactsBunch) {\n      // TODO: When ran out - disappear\n      this._impactsBunch.turn()\n    }\n  }\n}\n\nexport class AICreature extends Creature {\n  private bag?: ItemsBunch<Item>\n\n  constructor(\n    public ai: MetaAI,\n    specie: CreatureSpecie,\n    id: CreatureId = Creature.getId()\n  ) {\n    super(specie, id)\n  }\n\n  public act(levelMap: LevelMap, game: Game): number {\n    this.statsTurn()\n    this.visionMask(levelMap)\n\n    const command = this.ai.act(this, levelMap, game)\n    if (command) {\n      this.on(command)\n    }\n    this.on(new AfterEvent(levelMap, game))\n\n    return this.speed\n  }\n\n  get missile(): GroupedItem<Missile> | undefined {\n    // TODO: Remove perpetuum items?\n    if (this.specie.throwingItem) {\n      return { item: this.specie.throwingItem, count: 1 }\n    }\n  }\n\n  get inventoryItems(): GroupedItem<Item>[] {\n    return this.bag ? this.bag.bunch : []\n  }\n\n  public addItem(item: Item, count: number): void {\n    if (!this.bag) {\n      this.bag = new ItemsBunch()\n    }\n\n    this.bag.put(item, count)\n  }\n\n  public removeItem(item: Item, count: number): void {\n    if (!this.bag) {\n      throw `Creature ${this.name} tried to remove item ${\n        item.name\n      } but it does not present`\n    }\n\n    this.bag.remove(item, count)\n  }\n}\n","import { PresenterType, BaseMenusPresenter } from './internal'\nimport {\n  TalentsPresenter,\n  EquipmentPresenter,\n  BaseInfoPresenter,\n  HistoryInfoPresenter,\n} from '../../engine'\nimport { PlayerSpecie } from '../models/specie'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\n\nexport enum CharacterInfoPage {\n  Base,\n  Talents,\n  Equipment,\n  History,\n}\n\nexport abstract class CharacterInfoPresenter extends BaseMenusPresenter {\n  constructor(levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n  }\n\n  get type(): PresenterType {\n    return PresenterType.CharacterInfo\n  }\n\n  abstract get page(): CharacterInfoPage\n\n  protected get specie(): PlayerSpecie {\n    return this.game.player.specie\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { LevelMap } from '../models/level_map'\nimport { Creature } from '../models/creature'\nimport { Damage } from '../lib/damage'\nimport { Game } from '../models/game'\nimport { DieEvent, DieReason } from './die_event'\nimport { Calculator } from '../lib/calculator'\n\nexport class HurtEvent extends CreatureEvent {\n  private doneDamage: number | undefined\n\n  constructor(\n    private damages: Damage[],\n    private dieReason: DieReason,\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  get damage(): number {\n    if (this.doneDamage) {\n      return this.doneDamage\n    } else {\n      throw `HurtEvent.damage called but there is no done damage`\n    }\n  }\n\n  public affectCreature(subject: Creature): Reaction {\n    const { damage, resist } = Calculator.damage(\n      this.damages,\n      subject.protections,\n      subject.resistances\n    )\n\n    this.doneDamage = damage\n\n    if (resist) {\n      return Reaction.RESIST\n    }\n\n    if (damage >= subject.health.currentValue) {\n      subject.on(new DieEvent(this.game, this.levelMap, this.dieReason))\n      return Reaction.DIE\n    } else if (damage <= 0) {\n      return Reaction.NOTHING\n    } else {\n      subject.health.decrease(damage)\n      return Reaction.HURT\n    }\n  }\n}\n","import { CreatureSpecie } from '../models/specie'\nimport { Attribute } from './attribute'\n\nexport class Stat {\n  constructor(\n    public base: number,\n    public rate: number = 1,\n    public extra: number = 0\n  ) {}\n\n  get current(): number {\n    return this.base * this.rate - this.extra\n  }\n\n  public add(val: number): void {\n    this.base += val\n  }\n\n  public subtract(val: number): void {\n    this.base -= val\n  }\n}\n\nexport class CapacityLimitStat {\n  private strengthRatio: number = 5\n  private constitutionRatio: number = 3\n  private base: number = 10\n\n  constructor(private strength: number, private constitution: number) {}\n\n  public recalculate(strength: number, constitution: number) {\n    this.strength = strength\n    this.constitution = constitution\n  }\n\n  get stressed(): number {\n    return (\n      this.base +\n      this.strength * this.strengthRatio +\n      this.constitution * this.constitutionRatio\n    )\n  }\n\n  get loadedStart(): number {\n    return this.stressed * 1.5\n  }\n\n  get overloadedStart(): number {\n    return this.loadedStart * 2\n  }\n\n  get flattenedStart(): number {\n    return this.overloadedStart * 3\n  }\n}\n\nexport class HealthStat extends Attribute {\n  private regenerationRate: number\n  private regenerationValue: number\n\n  constructor(\n    specie: CreatureSpecie,\n    private currentTurn = 0,\n    currentValue = specie.maxHealthValue\n  ) {\n    super(specie.maxHealthValue, currentValue)\n\n    this.regenerationRate = specie.regenerationRate\n    this.regenerationValue = specie.regenerationValue\n  }\n\n  public turn(): void {\n    this.currentTurn += 1\n\n    if (this.currentTurn >= this.regenerationRate) {\n      this.currentTurn = 0\n      this.increase(this.regenerationValue)\n    }\n  }\n}\n\nexport class StrengthStat extends Stat {\n  get meleeAdjustment(): number {\n    if (this.current < 5) {\n      return -2\n    } else if (this.current > 10) {\n      return Math.floor((this.current - 10) / 2)\n    } else {\n      return 0\n    }\n  }\n}\n\nexport class ConstitutionStat extends Stat {\n  get levelUpHPBonus(): number {\n    if (this.current < 3) {\n      return -2\n    } else if (this.current < 6) {\n      return -1\n    } else if (this.current < 12) {\n      return 0\n    } else if (this.current < 15) {\n      return 1\n    } else if (this.current < 18) {\n      return 2\n    } else if (this.current < 20) {\n      return 3\n    } else {\n      return 4\n    }\n  }\n}\n\nexport class DexterityStat extends Stat {\n  get bodyControlAdjustment(): number {\n    if (this.current < 5) {\n      return -2\n    } else if (this.current > 10) {\n      return Math.floor((this.current - 10) * 0.9)\n    } else {\n      return 0\n    }\n  }\n\n  get missileAdjustment(): number {\n    if (this.current < 5) {\n      return -2\n    } else if (this.current > 10) {\n      return Math.floor((this.current - 10) / 2)\n    } else {\n      return 0\n    }\n  }\n}\n","import { Creature } from '../models/creature'\nimport { LevelMap, Game } from '../../engine'\nimport { CreatureEvent } from './internal'\n\nexport abstract class VisibleCreatureEvent extends CreatureEvent {\n  constructor(protected levelMap: LevelMap, protected game: Game) {\n    super()\n  }\n\n  protected playerSees(actor: Creature): boolean {\n    let { x, y } = this.levelMap.creaturePos(actor)\n    return this.game.player.stageMemory(this.levelMap).at(x, y).visible\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Creature } from '../models/creature'\nimport { LevelMap } from '../models/level_map'\n\nexport class StayEvent extends CreatureEvent {\n  constructor(private levelMap: LevelMap) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    let memory = creature.stageMemory(this.levelMap)\n\n    this.levelMap\n      .creaturePos(creature)\n      .wrappers()\n      .forEach(({ x, y }) => {\n        memory.at(x, y).see(this.levelMap.at(x, y), 0)\n      })\n\n    return Reaction.NOTHING\n  }\n}\n","import { Resistance } from '../models/specie'\n\nexport enum DamageType {\n  Melee,\n  Pierce,\n  Blunt,\n  Magic,\n  Pure,\n}\n\nexport type Dice = {\n  times: number\n  max: number\n}\n\nexport type Damage = {\n  extra: number\n  dice: Dice\n  type: DamageType\n  resistances?: Resistance[]\n}\n","import { Game, GroupedItem, Item, LevelMap } from '../../engine'\nimport { Presenter, PresenterType } from './internal'\n\nexport abstract class ItemsListingPresenter extends Presenter {\n  public positions: GroupedItem<Item>[] = []\n\n  constructor(levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n    this.initPositions()\n  }\n\n  get type(): PresenterType {\n    return PresenterType.ItemsListing\n  }\n\n  abstract get title(): string\n  abstract get singleItemMode(): boolean\n\n  protected abstract initPositions(): void\n\n  public close(): void {\n    this.goIdle()\n  }\n}\n\nexport abstract class SingleItemUseListingPresenter extends ItemsListingPresenter {\n  get singleItemMode(): boolean {\n    return true\n  }\n\n  public abstract withItem(items: GroupedItem<Item>): void\n}\n\nexport abstract class MultipleItemUseListingPresenter extends ItemsListingPresenter {\n  get singleItemMode(): boolean {\n    return false\n  }\n\n  public abstract withItems(items: GroupedItem<Item>[]): void\n}\n","import { Race } from '../engine'\n\nexport const humanRace: Race = {\n  name: 'human',\n  primaryAttributes: {\n    strength: 8,\n    dexterity: 8,\n    constitution: 7,\n    intelligence: 7,\n    wisdom: 6,\n    charisma: 9,\n  },\n}\n\nexport const dwarfRace: Race = {\n  name: 'human',\n  primaryAttributes: {\n    strength: 10,\n    dexterity: 7,\n    constitution: 9,\n    intelligence: 5,\n    wisdom: 7,\n    charisma: 7,\n  },\n}\n\nexport const allRaces: Race[] = [humanRace, dwarfRace]\n","import {\n  BodyArmor,\n  Boots,\n  DamageType,\n  ImpactType,\n  Item,\n  Missile,\n  MissileWeapon,\n  OneHandWeapon,\n  Player,\n  Pool,\n  ProtectionType,\n} from '../engine'\nimport { HealPotion } from './potions'\nimport { Material } from '../engine/lib/material'\n\nclass MissileRock extends Missile {\n  public worksWith(item: Item): boolean {\n    return item instanceof Sling\n  }\n}\n\nclass Arrow extends Missile {\n  public worksWith(item: Item): boolean {\n    return item instanceof Bow\n  }\n\n  public canThrow(player: Player): boolean {\n    return !!player.inventory.missileWeaponSlot.equipment\n  }\n}\n\nclass Sling extends MissileWeapon {\n  public worksWith(item: Item): boolean {\n    return item instanceof MissileRock\n  }\n}\n\nclass Bow extends MissileWeapon {\n  public worksWith(item: Item): boolean {\n    return item instanceof Arrow\n  }\n}\n\nexport const commonBow = () =>\n  new Bow(\n    'Обычный лук',\n    1,\n    [{ type: DamageType.Pierce, dice: { times: 1, max: 3 }, extra: 3 }],\n    Material.wood\n  )\n\nexport const smallRock = () =>\n  new MissileRock(\n    'Маленький камень',\n    0.3,\n    [{ type: DamageType.Blunt, dice: { times: 1, max: 3 }, extra: 2 }],\n    Material.stone\n  )\n\nexport const woodenArrow = () =>\n  new Arrow(\n    'Деревянная стрела',\n    0.2,\n    [{ type: DamageType.Pierce, dice: { times: 1, max: 4 }, extra: 3 }],\n    Material.wood\n  )\nexport const ironArrow = () =>\n  new Arrow(\n    'Железная стрела',\n    0.25,\n    [{ type: DamageType.Pierce, dice: { times: 2, max: 3 }, extra: 3 }],\n    Material.iron\n  )\n\nexport const weapons = new Pool<null, Item>([\n  [\n    1,\n    () =>\n      new OneHandWeapon('Катана', 1, Material.iron, [\n        { type: DamageType.Melee, dice: { times: 5, max: 2 }, extra: 0 },\n      ]),\n  ],\n  [\n    7,\n    () =>\n      new OneHandWeapon('Кинжал', 0.8, Material.iron, [\n        { type: DamageType.Melee, dice: { times: 1, max: 3 }, extra: 2 },\n      ]),\n  ],\n])\n\nexport const itemsPool = new Pool<null, Item>([\n  [\n    1,\n    () =>\n      new BodyArmor('Кольчуга', 5, Material.iron, [\n        { type: ProtectionType.Medium, value: 3 },\n      ]),\n  ],\n  [\n    5,\n    () =>\n      new BodyArmor('Латы', 3, Material.iron, [\n        { type: ProtectionType.Heavy, value: 5 },\n      ]),\n  ],\n  [\n    10,\n    () =>\n      new BodyArmor('Роба', 1, Material.iron, [\n        { type: ProtectionType.Unarmored, value: 1 },\n      ]),\n  ],\n  [100, () => new HealPotion()],\n])\n\nexport class LightSpeedBoots extends Boots {\n  public impacts: ImpactType[] = [ImpactType.Blind]\n\n  constructor() {\n    super('Кроссовки скорости света', 0.1, Material.cloth, [])\n  }\n}\n","import { Game, Potion } from '../engine'\n\nexport class HealPotion extends Potion {\n  constructor() {\n    super('Зелье лечения')\n  }\n\n  public onDrink(game: Game) {\n    game.player.health.increase(5)\n  }\n}\n","import { AI } from './internal'\nimport { Player } from '../models/player'\nimport { Logger } from '../models/logger'\nimport { Game, ItemsBunch, Item } from '../../engine'\n\nexport abstract class AIEvent {\n  protected logger: Logger\n  protected player: Player\n\n  constructor(protected game: Game) {\n    this.player = game.player\n    this.logger = game.logger\n  }\n\n  public abstract run(): void\n}\n\nexport class AIItemPickedEvent extends AIEvent {\n  constructor(public items: ItemsBunch<Item>, game: Game) {\n    super(game)\n  }\n\n  public run(): void {}\n}\n\nexport abstract class MetaAI extends AI {\n  constructor(public aiToRun: AI | undefined = undefined) {\n    super()\n  }\n  protected events: AIEvent[] = []\n\n  public pushEvent(event: AIEvent) {\n    this.events.push(event)\n  }\n\n  protected resetEvents(): void {\n    this.events = []\n  }\n\n  public runEvents(): boolean {\n    let res = false\n    this.events.forEach(event => {\n      res = true\n      event.run()\n    })\n\n    this.resetEvents()\n    return res\n  }\n}\n","import { remove } from 'lodash'\n\ninterface Grouping {\n  groupsWith(item: Grouping): boolean\n}\n\nexport interface GroupedItem<Item> {\n  count: number\n  item: Item\n}\n\nexport class ItemsBunch<Item extends Grouping> {\n  public bunch: GroupedItem<Item>[] = []\n\n  public find(item: Item): GroupedItem<Item> | undefined {\n    return this.bunch.find(invItem => invItem.item.groupsWith(item))\n  }\n\n  public remove(item: Item, count: number): void {\n    const invItem = this.find(item)\n\n    if (invItem === undefined) {\n      // TODO: Fail if removes item that's not in bunch yet?\n      return\n    } else if (invItem.count === count) {\n      remove(this.bunch, inventoryItem =>\n        inventoryItem.item.groupsWith(invItem.item)\n      )\n    } else {\n      invItem.count -= count\n    }\n  }\n\n  public put(item: Item, count: number): void {\n    const invItem = this.bunch.find(inv => inv.item.groupsWith(item))\n\n    if (invItem) {\n      invItem.count += count\n    } else {\n      this.bunch.push({ count: count, item: item })\n    }\n  }\n\n  public clone(): ItemsBunch<Item> {\n    let bunch = new ItemsBunch<Item>()\n\n    this.bunch.forEach(groupedItem => {\n      bunch.put(groupedItem.item, groupedItem.count)\n    })\n\n    return bunch\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { InventorySlot } from '../models/inventory_slot'\nimport { TakeOffItemEvent } from './take_off_item_event'\nimport { Game } from '../models/game'\n\nexport class RemoveItemEvent extends CreatureEvent {\n  constructor(\n    private slot: InventorySlot,\n    private count: number,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    if (!this.slot.equipment) {\n      throw `RemoveItemEvent: ${this.slot.name} has no equipment`\n    }\n\n    if (this.slot.equipment.count === this.count) {\n      return player.on(new TakeOffItemEvent(this.slot, this.game))\n    } else {\n      this.slot.equipment.count -= this.count\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import { LevelMap, Tile, Item } from '../../engine'\nimport { Pool } from './pool'\nimport { Creature } from '../models/creature'\nimport { Point, cycle } from '../utils/utils'\n\nimport { random } from 'lodash'\n\nexport const addDoors = function(\n  level: LevelMap,\n  doorTile: () => Tile,\n  addDoor: () => boolean = () => true\n): LevelMap {\n  for (let j = 1; j < level.height - 1; j++) {\n    for (let i = 1; i < level.width - 1; i++) {\n      const tile = level.at(i, j),\n        up = level.at(i, j - 1),\n        down = level.at(i, j + 1),\n        left = level.at(i - 1, j),\n        right = level.at(i + 1, j)\n\n      if (!addDoor() || tile.key !== 'C') {\n        continue\n      }\n\n      if (\n        left.key === 'D' ||\n        right.key === 'D' ||\n        up.key === 'D' ||\n        down.key === 'D'\n      ) {\n        continue\n      }\n\n      if (\n        left.key !== 'R' &&\n        right.key !== 'R' &&\n        up.key !== 'R' &&\n        down.key !== 'R'\n      ) {\n        continue\n      }\n\n      if (\n        (left.key === 'W' && right.key === 'W') ||\n        (up.key === 'W' && down.key === 'W')\n      ) {\n        level.setTile(i, j, doorTile())\n      }\n    }\n  }\n\n  return level\n}\n\nexport const addCreatures = function(\n  chance: number,\n  level: LevelMap,\n  creaturesPool: Pool<null, Creature>\n): LevelMap {\n  for (let i = 1; i < level.width - 1; i++) {\n    for (let j = 1; j < level.height - 1; j++) {\n      if (level.at(i, j).passibleThrough() && Math.random() < chance) {\n        level.addCreature(new Point(i, j), creaturesPool.pick(null))\n      }\n    }\n  }\n\n  return level\n}\n\nexport const addItems = function(\n  chance: number,\n  level: LevelMap,\n  itemsPool: Pool<null, Item>\n): LevelMap {\n  for (let j = 1; j < level.height - 1; j++) {\n    for (let i = 1; i < level.width - 1; i++) {\n      const tile = level.at(i, j)\n      if (tile.passibleThrough() && Math.random() < chance) {\n        tile.addItem(itemsPool.pick(null), 1)\n      }\n    }\n  }\n\n  return level\n}\n\nexport const centralize = function(level: LevelMap): LevelMap {\n  let minX = level.width,\n    minY = level.height,\n    maxX = 0,\n    maxY = 0\n\n  for (let j = 1; j < level.height - 1; j++) {\n    for (let i = 1; i < level.width - 1; i++) {\n      if (!level.at(i, j).passibleThrough()) {\n        continue\n      }\n\n      maxY = Math.max(j, maxY)\n      maxX = Math.max(i, maxX)\n      minY = Math.min(j, minY)\n      minX = Math.min(i, minX)\n    }\n  }\n\n  const dx = Math.floor((level.width - (maxX - minX)) / 2) - minX,\n    dy = Math.floor((level.height - (maxY - minY)) / 2) - minY\n\n  cycle(level.map, dx)\n  level.map.forEach(row => cycle(row, dy))\n\n  return level\n}\n\n// TODO: Move away from generators\n// TODO: Do not throw\nexport const withMatchingTile = function(\n  level: LevelMap,\n  match: (tile: Tile) => boolean,\n  onValid: (x: number, y: number) => void\n): LevelMap {\n  let iters = level.width * level.height\n\n  while (iters > 0) {\n    const x = random(0, level.width - 1),\n      y = random(0, level.height - 1)\n\n    if (match(level.at(x, y))) {\n      onValid(x, y)\n      return level\n    }\n\n    iters--\n  }\n\n  throw 'post add failed to add tile'\n}\n\nexport const safeWithMatchingTile = function(\n  level: LevelMap,\n  match: (tile: Tile) => boolean\n): { tile: Tile; x: number; y: number } | undefined {\n  let iters = level.width * level.height\n\n  while (iters > 0) {\n    const x = random(0, level.width - 1),\n      y = random(0, level.height - 1),\n      tile = level.at(x, y)\n\n    if (match(tile)) {\n      return { tile, x, y }\n    }\n\n    iters--\n  }\n}\n\nexport const withEachTile = function(\n  level: LevelMap,\n  match: (tile: Tile) => boolean,\n  onValid: (tile: Tile, x: number, y: number) => void\n): void {\n  level.each((tile, x, y) => {\n    if (match(tile)) {\n      onValid(tile, x, y)\n    }\n  })\n}\n","import { Missile, Protection } from './item'\nimport { Damage } from '../lib/damage'\nimport { Clan, Ability } from './creature'\nimport { Material } from '../lib/material'\nimport { Gender } from '../lib/gender'\nimport { Race } from '../lib/race'\n\nexport enum Resistance {\n  Intangible,\n  MagicDamage,\n  TeleportationControl,\n  Insulator,\n}\n\nexport type Critical = {\n  chance: number\n  multiplier: number\n}\n\nexport interface CreatureSpecie {\n  name: string\n  weight: number\n  clan: Clan\n  abilities: Ability[]\n\n  protections: Protection[]\n  damages: Damage[]\n  bodyControl: number\n\n  throwingItem?: Missile\n  throwingDamages: Damage[]\n\n  maxHealthValue: number\n  regenerationRate: number\n  regenerationValue: number\n\n  resistances: Resistance[]\n\n  visionRadius: number\n  moveSpeed: number\n  attackSpeed: number\n\n  leavesCorpseRatio: number\n\n  material: Material\n\n  critical: Critical\n}\n\nexport enum Color {\n  Maroon = 'maroon',\n  Red = 'red',\n  Orange = 'orange',\n  Yellow = 'yellow',\n  Olive = 'olive',\n  Green = 'green',\n  Purple = 'purple',\n  Fuchsia = 'fuchsia',\n  Lime = 'lime',\n  Teal = 'teal',\n  Aqua = 'aqua',\n  Blue = 'blue',\n  Navy = 'navy',\n  Black = 'black',\n  Gray = 'gray',\n  Silver = 'silver',\n  White = 'white',\n}\n\nexport interface PlayerSpecie extends CreatureSpecie {\n  race: Race\n  gender: Gender\n  height: number\n\n  readonly hairColor: Color\n  readonly eyeColor: Color\n  readonly skinColor: Color\n}\n","import { remove } from 'lodash'\n\nexport enum ImpactType {\n  Blind,\n  Stressed,\n  Loaded,\n  Overloaded,\n}\n\nclass Impact {\n  private constEffects: string[] = []\n  private tempEffects: number = 0\n\n  constructor() {}\n\n  public addTempEffect(turns: number): void {\n    this.tempEffects += turns\n  }\n\n  public addConstEffect(effect: string): void {\n    // TODO: Validate keys do not repeat\n    this.constEffects.push(effect)\n  }\n\n  public removeTempEffect(): void {\n    this.tempEffects = 0\n  }\n\n  public removeConstEffect(effect: string): void {\n    remove(this.constEffects, impact => impact === effect)\n  }\n\n  public active(): boolean {\n    return this.tempEffects > 0 || this.constEffects.length > 0\n  }\n\n  public turn(): void {\n    if (this.tempEffects >= 1) {\n      this.tempEffects -= 1\n    }\n  }\n}\n\nexport class ImpactBunch {\n  private impacts: Map<ImpactType, Impact> = new Map()\n\n  get activeImpacts(): ImpactType[] {\n    let types: ImpactType[] = []\n\n    this.impacts.forEach((impact, type) => {\n      if (impact.active()) {\n        types.push(type)\n      }\n    })\n\n    return types\n  }\n\n  public addImpact(type: ImpactType, turns: number): void {\n    this.impactByType(type).addTempEffect(turns)\n  }\n\n  public removeImpact(type: ImpactType): void {\n    this.impactByType(type).removeTempEffect()\n  }\n\n  public addConstImpact(type: ImpactType, effect: string): void {\n    this.impactByType(type).addConstEffect(effect)\n  }\n\n  public removeConstImpact(type: ImpactType, effect: string): void {\n    this.impactByType(type).removeConstEffect(effect)\n  }\n\n  public turn(): void {\n    this.impacts.forEach(impact => impact.turn())\n  }\n\n  protected impactByType(type: ImpactType): Impact {\n    let impact = this.impacts.get(type)\n    if (impact !== undefined) {\n      return impact\n    }\n\n    impact = new Impact()\n    this.impacts.set(type, impact)\n    return impact\n  }\n}\n","import { ProfessionPicker, Profession, Player, Talent } from '../engine'\nimport { AttackerTwoHandedWeapons, AttackerStrongGrip } from './talents'\n\nenum OnisunProfessionId {\n  Attacker,\n  Defender,\n}\n\nexport class OnisunAttackerProfession extends Profession {\n  constructor(\n    level: number = 0,\n    public twoHandedWeapons: AttackerTwoHandedWeapons = new AttackerTwoHandedWeapons(\n      'twoHandedWeapons',\n      0,\n      0,\n      5\n    ),\n    public strongGrip: AttackerStrongGrip = new AttackerStrongGrip(\n      'strongGrip',\n      1,\n      0,\n      5\n    )\n  ) {\n    super(OnisunProfessionId.Attacker, 'warrior', level, 0, [\n      twoHandedWeapons,\n      strongGrip,\n    ])\n  }\n\n  get depthCost(): number {\n    return 5\n  }\n\n  get grid(): (Talent | undefined)[][] {\n    return [\n      [undefined, this.twoHandedWeapons, undefined],\n      [undefined, this.strongGrip, undefined],\n    ]\n  }\n}\n\nexport class OnisunDefenderProfession extends Profession {\n  constructor(level: number = 0) {\n    super(OnisunProfessionId.Defender, 'defender', level, 0, [])\n  }\n\n  get depthCost(): number {\n    return 5\n  }\n\n  get grid(): (Talent | undefined)[][] {\n    return []\n  }\n}\n\nexport class OnisunProfessionPicker extends ProfessionPicker {\n  constructor(\n    player: Player,\n    public attacker = new OnisunAttackerProfession(),\n    public defender = new OnisunDefenderProfession()\n  ) {\n    super([attacker, defender], 3, 6)\n  }\n}\n","import { DieEvent, DieReason, Game, ImpactType, LevelMap } from '../../engine'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { CreatureEvent, Reaction } from './internal'\n\nexport class AfterEvent extends CreatureEvent {\n  constructor(private levelMap: LevelMap, private game: Game) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    player.removeConstImpact(ImpactType.Overloaded, 'bag')\n    player.removeConstImpact(ImpactType.Stressed, 'bag')\n    player.removeConstImpact(ImpactType.Loaded, 'bag')\n\n    if (player.stuffWeight.current > player.carryingCapacity.flattenedStart) {\n      return player.on(\n        new DieEvent(this.game, this.levelMap, DieReason.Overloaded)\n      )\n    }\n\n    if (player.stuffWeight.current > player.carryingCapacity.overloadedStart) {\n      player.addConstImpact(ImpactType.Overloaded, 'bag')\n    } else if (\n      player.stuffWeight.current > player.carryingCapacity.loadedStart\n    ) {\n      player.addConstImpact(ImpactType.Loaded, 'bag')\n    } else if (player.stuffWeight.current > player.carryingCapacity.stressed) {\n      player.addConstImpact(ImpactType.Stressed, 'bag')\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import {\n  AfterEvent,\n  Game,\n  IdlePresenter,\n  LevelMap,\n  ProfessionPickingPresenter,\n  TalentsPickingPresenter,\n  TeleportationPresenter,\n} from '../../engine'\nimport { DieReason } from '../events/die_event'\nimport { CreatureEvent } from '../events/internal'\nimport { Player } from '../models/player'\nimport { DeathPresenter } from '../presenters/death_presenter'\nimport { Presenter } from '../presenters/internal'\nimport { AIEvent, MetaAI } from './meta_ai'\n\nexport class AINewLevelEvent extends AIEvent {\n  constructor(public level: number, private levelMap: LevelMap, game: Game) {\n    super(game)\n  }\n\n  public run(): void {\n    if (this.level % 5 === 0) {\n      this.game.player.ai.presenter = new ProfessionPickingPresenter(\n        this.level,\n        this.levelMap,\n        this.game\n      )\n    } else {\n      this.game.player.ai.presenter = new TalentsPickingPresenter(\n        this.level,\n        this.levelMap,\n        this.game\n      )\n    }\n  }\n}\n\nexport class AIDieEvent extends AIEvent {\n  constructor(\n    private dieReason: DieReason,\n    private levelMap: LevelMap,\n    game: Game\n  ) {\n    super(game)\n  }\n\n  public run(): void {\n    this.game.player.rebuildVision(this.levelMap)\n    this.game.playerTurn = true\n    this.game.player.ai.presenter = new DeathPresenter(\n      this.dieReason,\n      this.levelMap,\n      this.game\n    )\n  }\n}\n\nexport class AITeleportationEvent extends AIEvent {\n  constructor(private levelMap: LevelMap, game: Game) {\n    super(game)\n  }\n\n  public run(): void {\n    // TODO: Rethink whether should be here\n    this.game.player.rebuildVision(this.levelMap)\n    this.game.playerTurn = true\n    this.game.player.ai.presenter = new TeleportationPresenter(\n      this.levelMap,\n      this.game\n    )\n  }\n}\n\nexport class PlayerAI extends MetaAI {\n  public presenter: Presenter | null = null\n  public levelUps: number = 0\n\n  public act(\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    this.presenter = new IdlePresenter(levelMap, game)\n    game.playerTurn = true\n\n    return\n  }\n\n  public endTurn(game: Game, levelMap: LevelMap): void {\n    let event = this.events.pop()\n    if (event) {\n      event.run()\n    } else if (game && levelMap) {\n      game.player.on(new AfterEvent(levelMap, game))\n\n      let event = this.events.pop()\n      if (event) {\n        event.run()\n      } else {\n        game.player.ai.runEvents()\n        game.playerTurn = false\n        this.presenter = null\n      }\n    }\n  }\n\n  public redirect(presenter: Presenter): void {\n    this.presenter = presenter\n  }\n}\n\nexport class PlayerBorgAI extends PlayerAI {\n  constructor(private ai: MetaAI) {\n    super()\n  }\n\n  public act(\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    let event = this.ai.act(player, levelMap, game)\n\n    game.playerTurn = true\n\n    return event\n  }\n}\n","import { PlayerEvent, Reaction } from './internal'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { Game, AINewLevelEvent, LevelMap } from '../../engine'\n\nexport class AddExperienceEvent extends PlayerEvent {\n  constructor(\n    public actor: Creature,\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectPlayer(subject: Player): Reaction {\n    subject.level.add(1).forEach(level => {\n      subject.ai.pushEvent(new AINewLevelEvent(level, this.levelMap, this.game))\n    })\n\n    return Reaction.NOTHING\n  }\n}\n","import { ImpactType } from '../lib/impact'\nimport { Creature } from '../models/creature'\nimport { Game } from '../models/game'\nimport { CreatureEvent, Reaction } from './internal'\n\nexport class AddImpactEvent extends CreatureEvent {\n  constructor(\n    private impactType: ImpactType,\n    private source: string,\n    private game: Game,\n    private duration?: number\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    // Different messages for player\n    if (this.duration) {\n      creature.addImpact(this.impactType, this.duration)\n    } else {\n      creature.addConstImpact(this.impactType, this.source)\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import {\n  InventorySlot,\n  CreatureEvent,\n  Game,\n  Item,\n  Armor,\n  RemoveImpactEvent,\n  Reaction,\n} from '../../engine'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { findIndex } from 'lodash'\nimport { Protection, Weapon } from '../models/item'\n\nexport class TakeOffItemEvent extends CreatureEvent {\n  constructor(private slot: InventorySlot, private game: Game) {\n    super()\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    const equipment = this.slot.equipment\n\n    if (equipment === undefined) {\n      throw `Can not take off item from ${this.slot.name} - nothing equipped`\n    }\n\n    this.slot.takeOff()\n    this.onTakeOff(player, equipment.item)\n    player.inventory.putToBag(equipment.item, equipment.count)\n    this.game.logger.takeOff(equipment.item)\n\n    return Reaction.NOTHING\n  }\n\n  private onTakeOff(player: Player, item: Item): void {\n    if (item instanceof Armor) {\n      item.protections.forEach((itemProtection: Protection) => {\n        player.itemsProtections.splice(\n          findIndex(\n            player.itemsProtections,\n            protection => protection === itemProtection\n          ),\n          1\n        )\n      })\n    }\n\n    item.impacts.forEach(impact => {\n      player.on(new RemoveImpactEvent(impact, this.game, item.name))\n    })\n  }\n}\n","import { VisibleCreatureEvent } from './visible_creature_event'\nimport { Trap } from '../models/tile'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { Game } from '../models/game'\nimport { LevelMap } from '../models/level_map'\nimport { Calculator } from '../lib/calculator'\nimport { Reaction } from './internal'\n\nexport class TrapEvent extends VisibleCreatureEvent {\n  private dodgeRatio: number\n\n  constructor(\n    private trap: Trap,\n    levelMap: LevelMap,\n    game: Game,\n    private onCreatureDodge: (sees: boolean, isPlayer: boolean) => void,\n    private onCreatureActivated: (sees: boolean, isPlayer: boolean) => Reaction\n  ) {\n    super(levelMap, game)\n    // Calc ratio *before* any interaction with trap\n    this.dodgeRatio = trap.dodgeRatio\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    // TODO: Special messages for dying.\n    const sees = this.playerSees(actor)\n    if (sees) {\n      this.trap.revealed = true\n    }\n\n    if (this.dodges(actor)) {\n      this.onCreatureDodge(sees, false)\n      return Reaction.DODGE\n    } else {\n      return this.onCreatureActivated(sees, false)\n    }\n  }\n\n  public affectPlayer(actor: Player): Reaction {\n    this.trap.revealed = true\n\n    if (this.dodges(actor)) {\n      this.onCreatureDodge(true, true)\n      return Reaction.DODGE\n    } else {\n      return this.onCreatureActivated(true, true)\n    }\n  }\n\n  protected dodges(actor: Creature): boolean {\n    return Calculator.dodges(actor.bodyControl, this.dodgeRatio)\n  }\n}\n","import {\n  Game,\n  Item,\n  InventorySlot,\n  GroupedItem,\n  PutOnItemsPresenter,\n  PutOnItemEvent,\n  TakeOffItemEvent,\n  LevelMap,\n} from '../../engine'\nimport { IdlePresenter } from './idle_presenter'\nimport {\n  CharacterInfoPage,\n  CharacterInfoPresenter,\n} from './character_info_presenter'\n\nexport interface InventoryPresenterPosition {\n  inventorySlot: InventorySlot\n  item?: Item\n  count?: number\n  availableItems: GroupedItem<Item>[]\n}\n\nexport class EquipmentPresenter extends CharacterInfoPresenter {\n  public positions: InventoryPresenterPosition[] = []\n  private takeTime: boolean = false\n\n  constructor(levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n    this.rebuildPositions()\n  }\n\n  get page(): CharacterInfoPage {\n    return CharacterInfoPage.Equipment\n  }\n\n  public takeOff(position: InventoryPresenterPosition) {\n    this.player.on(new TakeOffItemEvent(position.inventorySlot, this.game))\n    this.takeTime = true\n    this.rebuildPositions()\n  }\n\n  public putOn(position: InventoryPresenterPosition) {\n    this.redirect(\n      new PutOnItemsPresenter(\n        itemGroup => {\n          this.player.on(\n            new PutOnItemEvent(\n              position.inventorySlot,\n              itemGroup.item,\n              this.game\n            )\n          )\n\n          this.takeTime = true\n          this.rebuildPositions()\n          this.redirect(this)\n        },\n        position.availableItems,\n        this.levelMap,\n        this.game\n      )\n    )\n  }\n\n  public close() {\n    if (this.takeTime) {\n      this.endTurn()\n    } else {\n      this.redirect(new IdlePresenter(this.levelMap, this.game))\n    }\n  }\n\n  private rebuildPositions(): void {\n    this.positions = this.player.inventory.slots().map(inventorySlot => {\n      return {\n        inventorySlot: inventorySlot,\n        item: inventorySlot.equipment && inventorySlot.equipment.item,\n        count: inventorySlot.equipment && inventorySlot.equipment.count,\n        availableItems: inventorySlot.matchingItems(this.player.inventory),\n      }\n    })\n  }\n}\n","import { Presenter, PresenterType } from './internal'\nimport { Memory, MemoryTile } from '../models/memory'\nimport { Point, Direction } from '../utils/utils'\nimport { Game } from '../models/game'\nimport { LevelMap } from '../models/level_map'\n\nexport abstract class PickPointPresenter<Title, Body> extends Presenter {\n  public targetPos: Point\n  protected memory: Memory\n\n  constructor(\n    levelMap: LevelMap,\n    game: Game,\n    private effect: string,\n    private match: (point: Point) => boolean\n  ) {\n    super(levelMap, game)\n\n    this.memory = this.player.stageMemory(this.levelMap)\n    this.targetPos = levelMap.creaturePos(this.player)\n    this.drawTarget()\n  }\n\n  abstract get title(): Title\n\n  abstract get body(): Body[]\n\n  protected abstract close(): void\n\n  public act(): void {\n    this.removeEffect()\n    this.close()\n  }\n\n  get memoryTile(): MemoryTile {\n    return this.memory.at(this.targetPos.x, this.targetPos.y)\n  }\n\n  public moveTarget(direction: Direction): void {\n    const dest = this.targetPos.add(direction)\n\n    if (this.match(dest)) {\n      this.updateTarget(dest)\n    }\n  }\n\n  private removeEffect(): void {\n    this.memory.at(this.targetPos.x, this.targetPos.y).effect = undefined\n  }\n\n  private updateTarget(newPos: Point): void {\n    this.removeEffect()\n    this.targetPos = newPos.copy()\n    this.drawTarget()\n  }\n\n  private drawTarget(): void {\n    this.memoryTile.effect = this.effect\n  }\n}\n","import {\n  MetaAI,\n  Escaper,\n  Explorer,\n  Chaser,\n  Attacker,\n  Picker,\n  Patrol,\n  Loiter,\n  Thrower,\n  Descender,\n  Creature,\n  LevelMap,\n  Game,\n  CreatureEvent,\n  SelfHealer,\n} from '../engine'\n\nexport class Dispatcher extends MetaAI {\n  private escaper: Escaper\n  private explorer: Explorer\n  private chaser: Chaser\n  private attacker: Attacker\n  private picker: Picker\n  private patrol: Patrol\n  private loiter: Loiter\n  private thrower: Thrower\n\n  private descender: Descender\n\n  constructor() {\n    super()\n    this.escaper = new Escaper()\n    this.explorer = new Explorer()\n    this.chaser = new Chaser()\n    this.attacker = new Attacker()\n    this.picker = new Picker()\n    this.patrol = new Patrol()\n    this.loiter = new Loiter()\n    this.thrower = new Thrower()\n\n    this.descender = new Descender()\n  }\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    this.runEvents()\n    let event: CreatureEvent | undefined\n\n    if (this.feelsGood(actor)) {\n      if ((event = this.attacker.act(actor, levelMap, game))) {\n      } else if ((event = this.thrower.act(actor, levelMap, game))) {\n      } else if ((event = this.chaser.act(actor, levelMap, game))) {\n      } else if ((event = this.picker.act(actor, levelMap, game))) {\n      } else {\n        event = this.explore(actor, levelMap, game)\n      }\n    } else if (\n      this.healthCritical(actor) &&\n      (event = this.escaper.act(actor, levelMap, game))\n    ) {\n    } else if ((event = this.attacker.act(actor, levelMap, game))) {\n    } else if ((event = this.thrower.act(actor, levelMap, game))) {\n    } else if ((event = this.chaser.act(actor, levelMap, game))) {\n    } else {\n      event = new SelfHealer().act(actor, levelMap)\n    }\n\n    this.resetEvents()\n\n    return event\n  }\n\n  private feelsGood(actor: Creature): boolean {\n    return actor.health.currentValue > actor.health.maximum * 0.9\n  }\n\n  private healthCritical(actor: Creature): boolean {\n    return actor.health.currentValue < actor.health.maximum / 4\n  }\n\n  private explore(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    let event: CreatureEvent | undefined\n\n    if ((event = this.explorer.act(actor, levelMap, game))) {\n      if (!actor.dead) {\n        this.patrol.trackMovement(\n          levelMap.creaturePos(actor),\n          levelMap.creatureTile(actor)\n        )\n      }\n    } else if ((event = this.descender.act(actor, levelMap, game))) {\n    } else if ((event = this.patrol.act(actor, levelMap, game))) {\n    } else {\n      event = this.loiter.act(actor, levelMap, game)\n    }\n\n    return event\n  }\n}\n","import {\n  forEach,\n  keys,\n  min,\n  remove,\n  size,\n  pullAt,\n  pickBy,\n  includes,\n} from 'lodash'\n\nexport class Timeline<T> {\n  public step: number = 0\n  public turns: { [key: number]: T[] } = {}\n\n  public add(item: T, delta: number): void {\n    const ts = this.step + delta\n\n    if (this.turns[ts]) {\n      if (!includes(this.turns[ts], item)) {\n        this.turns[ts].push(item)\n      }\n    } else {\n      this.turns[ts] = [item]\n    }\n  }\n\n  public remove(item: T): void {\n    forEach(this.turns, (value, key) => {\n      remove(value, element => element === item)\n    })\n\n    this.turns = pickBy(this.turns, (val: T[]) => val.length > 0)\n  }\n\n  public next(): T {\n    this.step = this.nextStep()\n\n    const [element] = pullAt(this.turns[this.step], 0)\n\n    if (this.turns[this.step].length === 0) {\n      delete this.turns[this.step]\n    }\n\n    return element === undefined ? this.next() : element\n  }\n\n  public actors(): T[] {\n    if (size(this.turns) === 0) {\n      return []\n    }\n\n    this.step = this.nextStep()\n    const actors = this.turns[this.step]\n\n    delete this.turns[this.step]\n\n    return actors\n  }\n\n  private nextStep(): number {\n    let step = min(keys(this.turns).map(x => parseInt(x)))\n\n    if (step === undefined) {\n      throw 'Timeline.nextStep called when there is no ones turn'\n    }\n\n    return step\n  }\n}\n","import { Talent, Game } from '../engine'\n\nexport abstract class OnisunTalent extends Talent {\n  constructor(name: string, depth: number, rank: number, maxRank: number) {\n    super(name, depth, rank, maxRank)\n  }\n}\n\nexport class AttackerTwoHandedWeapons extends OnisunTalent {\n  public onObtain(game: Game): void {}\n}\n\nexport class AttackerLightWeapons extends OnisunTalent {\n  public onObtain(game: Game): void {}\n}\n\nexport class AttackerHeavyWeapons extends OnisunTalent {\n  public onObtain(game: Game): void {}\n}\n\nexport class AttackerTwoWeapons extends OnisunTalent {\n  public onObtain(game: Game): void {}\n}\n\nexport class AttackerDoubleTwoHandedWeapons extends OnisunTalent {\n  public onObtain(game: Game): void {}\n}\n\nexport class AttackerStrongGrip extends OnisunTalent {\n  public onObtain(game: Game): void {}\n}\n","interface SolidChecker {\n  isSolid(x: number, y: number): boolean\n}\n\nexport class Fov {\n  private doubleRadius: number\n\n  constructor(\n    private startx: number,\n    private starty: number,\n    private radius: number,\n    private width: number,\n    private height: number,\n    private solidChecker: SolidChecker,\n    private markVisible: (x: number, y: number, degree: number) => void\n  ) {\n    this.doubleRadius = this.radius * this.radius\n  }\n\n  public calc(): void {\n    this.markVisible(this.startx, this.starty, 1)\n\n    if (!this.solidChecker.isSolid(this.startx, this.starty)) {\n      ;[[1, 1], [1, -1], [-1, 1], [-1, -1]].forEach(([dx, dy]) => {\n        this.castLight(1, 1.0, 0.0, 0, dx, dy, 0)\n        this.castLight(1, 1.0, 0.0, dx, 0, 0, dy)\n      })\n    }\n  }\n\n  private castLight(\n    row: number,\n    start: number,\n    end: number,\n    xx: number,\n    xy: number,\n    yx: number,\n    yy: number\n  ) {\n    if (start < end) {\n      return\n    }\n\n    let newStart = 0.0\n    let blocked = false\n\n    for (let distance = row; distance <= this.radius && !blocked; distance++) {\n      let deltaY = -distance\n\n      for (let deltaX: number = -distance; deltaX <= 0; deltaX++) {\n        let currentX = Math.round(this.startx + deltaX * xx + deltaY * xy)\n        let currentY = Math.round(this.starty + deltaX * yx + deltaY * yy)\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5)\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5)\n\n        if (\n          !(\n            currentX >= 0 &&\n            currentY >= 0 &&\n            currentX < this.width &&\n            currentY < this.height\n          ) ||\n          start < rightSlope\n        ) {\n          continue\n        } else if (end > leftSlope) {\n          break\n        }\n\n        // check if it's within the lightable area and light if needed\n        if (this.doubleDistance(deltaX, deltaY) <= this.doubleRadius) {\n          this.markVisible(\n            currentX,\n            currentY,\n            1 - this.doubleDistance(deltaX, deltaY) / this.doubleRadius\n          )\n        }\n\n        if (blocked) {\n          // previous cell was a blocking one\n          if (this.solidChecker.isSolid(currentX, currentY)) {\n            // hit a wall\n            newStart = rightSlope\n          } else {\n            blocked = false\n            start = newStart\n          }\n        } else {\n          if (\n            this.solidChecker.isSolid(currentX, currentY) &&\n            distance < this.radius\n          ) {\n            // hit a wall within sight line\n            blocked = true\n            this.castLight(distance + 1, start, leftSlope, xx, xy, yx, yy)\n            newStart = rightSlope\n          }\n        }\n      }\n    }\n  }\n\n  private doubleDistance(x: number, y: number): number {\n    return x * x + y * y\n  }\n}\n","import { remove, sum } from 'lodash'\n\nexport class Attribute {\n  public modifiers: number[] = []\n\n  constructor(protected max: number, public current: number = max) {}\n\n  get maximum(): number {\n    return this.max\n  }\n\n  get atMax(): boolean {\n    return this.max === this.current\n  }\n\n  public decrease(modifier: number) {\n    this.current -= modifier\n  }\n\n  public increase(modifier: number) {\n    this.current = Math.min(this.current + modifier, this.max)\n  }\n\n  public constantIncrease(modifier: number) {\n    this.max += modifier\n    this.increase(modifier)\n  }\n\n  public constantDecrease(modifier: number) {\n    this.max -= modifier\n    this.decrease(modifier)\n  }\n\n  public addModifier(modifier: number) {\n    this.modifiers.push(modifier)\n  }\n\n  public removeModifier(modifier: number) {\n    remove(this.modifiers, val => val === modifier)\n  }\n\n  get currentValue(): number {\n    return this.current + sum(this.modifiers)\n  }\n}\n\nexport class PositiveAttribute extends Attribute {\n  get currentValue(): number {\n    const value = super.currentValue\n    return value >= 1 ? value : 1\n  }\n\n  public constantDecrease(modifier: number) {\n    this.max = Math.max(1, this.max - modifier)\n    this.decrease(modifier)\n  }\n\n  public decrease(modifier: number) {\n    this.current = Math.max(1, this.current - modifier)\n  }\n}\n","import { AI } from './internal'\nimport { Creature } from '../models/creature'\nimport { Game } from '../models/game'\nimport { Point, LevelMap } from '../../engine'\nimport { CreatureEvent } from '../events/internal'\n\nexport class Loiter extends AI {\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    const pos = levelMap.creaturePos(actor)\n\n    return this.move(actor, levelMap, game, (point: Point) => !pos.eq(point))\n  }\n}\n","import { DieReason } from '../events/die_event'\nimport { Game } from '../models/game'\nimport { Presenter, PresenterType } from './internal'\nimport { LevelMap } from '../models/level_map'\n\nexport class DeathPresenter extends Presenter {\n  constructor(public dieReason: DieReason, levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n  }\n\n  get type(): PresenterType {\n    return PresenterType.Death\n  }\n\n  get playerName(): string {\n    return this.game.player.name\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Tile, GroupedItem, Game } from '../../engine'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { Item } from '../models/item'\n\nexport class DropItemsEvent extends CreatureEvent {\n  constructor(\n    private tile: Tile,\n    private items: GroupedItem<Item>[],\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    this.items.forEach(({ item, count }) => {\n      creature.removeItem(item, count)\n    })\n\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    // TODO: Validate items are part of positions\n    this.items.forEach(({ item, count }) => {\n      player.removeItem(item, count)\n      player.stuffWeight.subtract(item.weight * count)\n\n      this.game.logger.droppedItem(item, count)\n      this.tile.addItem(item, count)\n    })\n\n    return Reaction.NOTHING\n  }\n}\n","import { Player } from '../models/player'\nimport { PlayerEvent, Reaction } from './internal'\n\nexport class LevelUpEvent extends PlayerEvent {\n  public affectPlayer(player: Player): Reaction {\n    this.updateHealth(player)\n\n    return Reaction.NOTHING\n  }\n\n  protected updateHealth(player: Player): void {\n    player.health.constantIncrease(player.constitution.levelUpHPBonus)\n\n    if (player.health.maximum < 1) {\n      player.health.constantIncrease(1 - player.health.maximum)\n    }\n\n    // TODO: Add per race / class hp increase\n  }\n}\n","import { Item } from './item'\nimport { Point } from '../utils/utils'\nimport { Memory } from './memory'\n\nexport abstract class TileEffect {\n  constructor(public onDone: () => void) {}\n\n  public abstract done(): boolean\n  public abstract patchMemory(memory: Memory): void\n  public speed(): number {\n    return -1\n  }\n}\n\nexport class ItemFlightTileEffect extends TileEffect {\n  constructor(\n    public readonly item: Item,\n    private frames: Point[],\n    onDone: () => void\n  ) {\n    super(onDone)\n  }\n\n  public patchMemory(memory: Memory): void {\n    if (this.done()) {\n      return\n    }\n\n    const [point] = this.frames.splice(0, 1)\n    const tile = memory.at(point.x, point.y)\n\n    if (tile.visible) {\n      tile.effect = '-'\n    } else {\n      // Skipping effect if it's not visible\n      this.patchMemory(memory)\n    }\n  }\n\n  public done(): boolean {\n    return this.frames.length === 0\n  }\n}\n","import { HurtEvent, LevelMap, Player } from '../../engine'\nimport { Calculator } from '../lib/calculator'\nimport { Creature } from '../models/creature'\nimport { Game } from '../models/game'\nimport { Item } from '../models/item'\nimport { AddExperienceEvent } from './add_experience_event'\nimport { DieReason } from './die_event'\nimport { CreatureEvent, Reaction } from './internal'\n\nexport class ThrowEvent extends CreatureEvent {\n  constructor(\n    public victim: Creature,\n    public missile: Item,\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    return this.process(actor, false)\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    const reaction = this.process(player, true)\n\n    if (reaction === Reaction.DIE) {\n      player.on(new AddExperienceEvent(this.victim, this.levelMap, this.game))\n    }\n\n    return reaction\n  }\n\n  protected process(actor: Creature, isPlayer: boolean): Reaction {\n    const [reaction, damage] = this.throw(actor)\n\n    this.game.logger.attackLogger.missile(\n      damage,\n      actor,\n      this.victim,\n      reaction,\n      this.missile,\n      isPlayer\n    )\n\n    return reaction\n  }\n\n  protected throw(actor: Creature): [Reaction, number] {\n    if (Calculator.misses(actor.bodyControl, this.victim.bodyControl)) {\n      return [Reaction.DODGE, 0]\n    }\n\n    // TODO: Check if hit with shooter's BC\n    const hurtEvent = new HurtEvent(\n      Calculator.withCritical(actor.throwDamages, actor.specie.critical),\n      DieReason.Missile,\n      this.levelMap,\n      this.game\n    )\n\n    return [this.victim.on(hurtEvent), hurtEvent.damage]\n  }\n}\n","import { Reaction } from './internal'\nimport { VisibleCreatureEvent } from './visible_creature_event'\nimport { Creature } from '../models/creature'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { Door } from '../models/tile'\n\nexport class OpenDoorEvent extends VisibleCreatureEvent {\n  constructor(private door: Door, levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    if (this.door.open) {\n      this.game.logger.doorLogger.alreadyOpen()\n    } else {\n      this.door.open = true\n      this.game.logger.doorLogger.open()\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import { GroupedItem } from '../lib/bunch'\nimport { Calculator } from '../lib/calculator'\nimport { Damage } from '../lib/damage'\nimport { WaterAffect } from '../lib/material'\nimport { Creature } from '../models/creature'\nimport { Game } from '../models/game'\nimport { BodyPart, InventorySlot } from '../models/inventory_slot'\nimport { Item } from '../models/item'\nimport { LevelMap } from '../models/level_map'\nimport { Player } from '../models/player'\nimport { DieReason } from './die_event'\nimport { HurtEvent } from './hurt_event'\nimport { CreatureEvent, Reaction } from './internal'\nimport { RemoveItemEvent } from './remove_item_event'\n\nexport class WaterDamageEvent extends CreatureEvent {\n  private playerReaction: Reaction = Reaction.NOTHING\n\n  constructor(\n    private damages: Damage[],\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    if (creature.specie.material.affectedWithWater) {\n      return creature.on(\n        new HurtEvent(this.damages, DieReason.Trap, this.levelMap, this.game)\n      )\n    } else {\n      return Reaction.RESIST\n    }\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    this.affectBodyParts(player)\n    this.affectInventory(player)\n    this.affectEquipment(player)\n    return this.playerReaction\n  }\n\n  protected affectEquipment(player: Player): void {\n    if (player.dead) {\n      return\n    }\n\n    player.inventory.slots().forEach((inventorySlot: InventorySlot) => {\n      if (\n        inventorySlot.equipment &&\n        inventorySlot.equipment.item.affectedWithWater\n      ) {\n        const { item, count } = inventorySlot.equipment\n\n        switch (item.material.affectedWithWater) {\n          case WaterAffect.Corrosion:\n            // TODO: Should corrode all items?\n            if (Calculator.chance(1, 3) && item.corrode()) {\n              this.game.logger.itemCorrode(item)\n            }\n            break\n          case WaterAffect.Destroy:\n            if (Calculator.chance(1, 4)) {\n              const destroyedCount = Calculator.lowerWeight(count)\n              this.game.logger.itemDestroyByWater(item, destroyedCount)\n              // TODO: Do not log  taking off item?\n              player.on(\n                new RemoveItemEvent(inventorySlot, destroyedCount, this.game)\n              )\n            }\n            break\n        }\n      }\n    })\n  }\n\n  protected affectInventory(player: Player): void {\n    if (player.dead) {\n      return\n    }\n\n    player.inventory.cares().forEach(({ count, item }: GroupedItem<Item>) => {\n      switch (item.material.affectedWithWater) {\n        case WaterAffect.Corrosion:\n          if (Calculator.chance(1, 4) && item.corrode()) {\n            this.game.logger.itemCorrode(item)\n          }\n          break\n        case WaterAffect.Destroy:\n          if (Calculator.chance(1, 6)) {\n            const destroyedCount = Calculator.lowerWeight(count)\n            this.game.logger.itemDestroyByWater(item, destroyedCount)\n            player.inventory.removeFromBag(item, destroyedCount)\n          }\n          break\n      }\n    })\n  }\n\n  protected affectBodyParts(player: Player): void {\n    player.inventory.bodyParts.forEach((bodyPart: BodyPart) => {\n      if (player.dead) {\n        return\n      }\n\n      if (bodyPart.affectedWithWater) {\n        if (bodyPart.equipment) {\n          this.game.logger.waterBodyPartEquipmentResist(\n            bodyPart,\n            bodyPart.equipment.item\n          )\n          this.trackReaction(Reaction.RESIST)\n        } else {\n          let reaction = player.on(\n            new HurtEvent(\n              this.damages,\n              DieReason.Trap,\n              this.levelMap,\n              this.game\n            )\n          )\n          this.game.logger.waterBodyPartDamage(bodyPart, reaction)\n          this.trackReaction(reaction)\n        }\n      }\n    })\n  }\n\n  protected trackReaction(reaction: Reaction): void {\n    if (this.playerReaction === Reaction.HURT && reaction === Reaction.DIE) {\n      this.playerReaction = Reaction.DIE\n    } else if (this.playerReaction === Reaction.HURT) {\n      this.playerReaction = Reaction.HURT\n    } else {\n      this.playerReaction = reaction\n    }\n  }\n}\n","import { Creature, CreatureId } from './creature'\nimport { Mapped, Point } from '../utils/utils'\nimport { Timeline } from '../lib/timeline'\nimport { Tile, StairwayDown, StairwayUp } from './tile'\n\nimport { remove } from 'lodash'\n\nexport class LevelMap extends Mapped<Tile> {\n  public creatures: Creature[] = []\n  public timeline: Timeline<CreatureId>\n\n  constructor(public readonly name: string, map: Tile[][]) {\n    super(map)\n    this.timeline = new Timeline()\n  }\n\n  public reset(): void {\n    this.timeline = new Timeline()\n  }\n\n  public enter(): void {\n    this.reset()\n    this.creatures.forEach(creature =>\n      this.timeline.add(creature.id, creature.speed)\n    )\n  }\n\n  public creatureTile(creature: Creature): Tile {\n    let tile: Tile | undefined\n\n    this.each(t => {\n      if (t.creature && t.creature.id === creature.id) {\n        tile = t\n      }\n    })\n\n    if (!tile) {\n      throw `Creature ${creature.id} ${creature.name} is not found on map ${\n        this.name\n      }`\n    }\n\n    return tile\n  }\n\n  public creaturePos(creature: Creature): Point {\n    let pos: Point | undefined\n\n    this.each((tile, x, y) => {\n      if (tile.creature && tile.creature.id === creature.id) {\n        pos = new Point(x, y)\n      }\n    })\n\n    if (!pos) {\n      throw `Creature ${creature.id} ${creature.name} is not found on map ${\n        this.name\n      }`\n    }\n\n    return pos\n  }\n\n  public addCreature(pos: Point, creature: Creature) {\n    this.creatures.push(creature)\n    // TODO fail if taken\n    this.at(pos.x, pos.y).creature = creature\n    this.timeline.add(creature.id, creature.speed)\n  }\n\n  public removeCreature(creature: Creature) {\n    let pos = this.creaturePos(creature),\n      tile = this.at(pos.x, pos.y)\n\n    tile.creature = undefined\n    remove(this.creatures, c => c.id === creature.id)\n    this.timeline.remove(creature.id)\n  }\n\n  public visibleThrough(x: number, y: number): boolean {\n    return this.map[x][y].visibleThrough()\n  }\n\n  public passibleThrough(x: number, y: number): boolean {\n    return this.map[x][y].passibleThrough()\n  }\n\n  public setTile(x: number, y: number, tile: Tile): void {\n    this.map[x][y] = tile\n  }\n\n  public matchStairs(adjustName: string): Point {\n    let stairPos: Point | undefined\n\n    this.each((tile, x, y) => {\n      if (tile instanceof StairwayDown || tile instanceof StairwayUp) {\n        if (tile.adjacentMapName === adjustName) {\n          stairPos = new Point(x, y)\n        }\n      }\n    })\n\n    if (stairPos) {\n      return stairPos\n    }\n\n    throw `LevelMap ${this.name} failed to find stairs to ${adjustName}`\n  }\n}\n","import { Creature } from './creature'\nimport { Item, Potion, CorrosionLevel } from './item'\n\nimport { last } from 'lodash'\nimport { Player } from './player'\nimport { BodyPart } from './inventory_slot'\nimport { Reaction } from '../../engine'\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARNING,\n  DANGER,\n}\n\nexport interface LogMessage {\n  level: LogLevel\n  message: string\n  counter: number\n}\n\n// TODO: Do not display messages while being blind\nexport class Logger {\n  public messages: LogMessage[] = []\n\n  public attackLogger: AttackLogger\n  public doorLogger: DoorLogger\n  public trapAirBlow: TrapAirBlowLogger\n  public trapBareWire: TrapBareWireLogger\n  public trapHole: TrapHoleLogger\n  public trapFallingRock: TrapFallingRockLogger\n\n  constructor(player: Player) {\n    this.attackLogger = new AttackLogger(this, player)\n    this.doorLogger = new DoorLogger(this, player)\n\n    this.trapAirBlow = new TrapAirBlowLogger(this, player)\n    this.trapBareWire = new TrapBareWireLogger(this, player)\n    this.trapFallingRock = new TrapFallingRockLogger(this, player)\n    this.trapHole = new TrapHoleLogger(this, player)\n  }\n\n  public reset() {\n    this.messages = []\n  }\n\n  public killMessage(\n    player: Player,\n    damage: number,\n    actor: Creature,\n    target: Creature\n  ) {\n    this.warning(\n      `${target.name} got ${damage} damage from ${\n        actor.name\n      } causes them to die`\n    )\n  }\n\n  public throwKillMessage(\n    player: Player,\n    damage: number,\n    actor: Creature,\n    target: Creature,\n    missile: Item\n  ) {\n    this.warning(\n      `${target.name} got ${damage} damage from ${actor.name} by ${\n        missile.name\n      } causes them to die`\n    )\n  }\n\n  public ranIntoAnObstacle(): void {\n    this.addMessage(LogLevel.DEBUG, 'You ran into a wall')\n  }\n\n  public howToHandle(): void {\n    this.addMessage(LogLevel.DEBUG, \"Don't know how to handle it\")\n  }\n\n  public noItemsToPickUp(): void {\n    this.addMessage(LogLevel.DEBUG, \"You don't see anything to pick up\")\n  }\n\n  public takeOff(item: Item): void {\n    this.addMessage(LogLevel.DEBUG, `You took off ${item.name}`)\n  }\n\n  public putOn(item: Item): void {\n    this.addMessage(LogLevel.DEBUG, `You put on ${item.name}`)\n  }\n\n  public drink(item: Potion): void {\n    this.addMessage(LogLevel.INFO, `You drunk ${item.name}`)\n  }\n\n  public nothingToShotWith(): void {\n    this.addMessage(LogLevel.DEBUG, 'You have nothing to shoot with')\n  }\n\n  public needMissileWeapon(): void {\n    this.addMessage(LogLevel.DEBUG, 'Мне нужен лук или типа того')\n  }\n\n  public creatureTeleported(actor: Creature): void {\n    this.addMessage(LogLevel.INFO, `${actor.name} иcчез`)\n  }\n\n  public creatureNotTeleported(actor: Creature): void {\n    this.addMessage(\n      LogLevel.INFO,\n      `${actor.name} озарился светом, но ничего не произошло`\n    )\n  }\n\n  public creatureDodgesTeleportationTrap(actor: Creature): void {\n    this.addMessage(\n      LogLevel.INFO,\n      `${actor.name} попал в ловушку телепортации но смог увернуться`\n    )\n  }\n\n  public playerTeleportationCaused(): void {\n    this.addMessage(LogLevel.INFO, `Что-то заставило меня телепортироваться`)\n  }\n\n  public playerTeleported(): void {\n    this.addMessage(LogLevel.INFO, `Яркая вспышка и я оказался в другом месте`)\n  }\n\n  public playerNotTeleported(): void {\n    this.addMessage(\n      LogLevel.INFO,\n      `Я озарился ярким светом, но ничего не произошло`\n    )\n  }\n\n  public playerTeleportedWhereTheyWere(): void {\n    this.addMessage(LogLevel.INFO, `Я решил никуда не телепортироваться`)\n  }\n\n  public playerDodgesTeleportationTrap(): void {\n    this.addMessage(\n      LogLevel.INFO,\n      `Я попал в ловушку телепортации но смог увернуться`\n    )\n  }\n\n  public lightTrapActivated(\n    player: Player,\n    sees: boolean,\n    isPlayer: boolean,\n    actor: Creature\n  ): void {\n    if (isPlayer) {\n      this.addMessage(LogLevel.INFO, `Яркая вспышка света ослепила меня`)\n    } else {\n      this.addMessage(\n        LogLevel.INFO,\n        `${actor.name} озарился яркой вспышкой света`\n      )\n    }\n  }\n\n  public lightTrapDodge(\n    player: Player,\n    sees: boolean,\n    isPlayer: boolean,\n    actor: Creature\n  ): void {\n    if (isPlayer) {\n      this.addMessage(LogLevel.INFO, `Вспышка света чуть не ослепила меня`)\n    } else {\n      this.addMessage(\n        LogLevel.INFO,\n        `${actor.name} озарился яркой вспышкой света`\n      )\n    }\n  }\n\n  public canNotUntrap(): void {\n    this.addMessage(LogLevel.INFO, `Не представляю, как это обезвредить`)\n  }\n\n  public failedToUntrap(player: Player): void {\n    this.addMessage(\n      LogLevel.WARNING,\n      `У меня не получилось обезвредить ловушку`\n    )\n  }\n\n  public succeededToUntrap(player: Player): void {\n    this.addMessage(LogLevel.INFO, `Успешно обезвредил ловушку`)\n  }\n\n  public pickedUpItem(item: Item, count: number): void {\n    if (count === 1) {\n      this.addMessage(LogLevel.INFO, `You picked up ${item.name}`)\n    } else {\n      this.addMessage(LogLevel.INFO, `You picked up ${count} ${item.name}`)\n    }\n  }\n\n  public droppedItem(item: Item, count: number): void {\n    if (count === 1) {\n      this.addMessage(LogLevel.INFO, `You dropped a ${item.name}`)\n    } else {\n      this.addMessage(LogLevel.INFO, `You dropped ${count} ${item.name}`)\n    }\n  }\n\n  public waterTrapActivated(): void {\n    this.info(`Я попал в ловушку с водой`)\n  }\n\n  public waterBodyPartEquipmentResist(bodyPart: BodyPart, item: Item): void {\n    this.debug(`${item.name} защитил ${bodyPart.name} от воды`)\n  }\n\n  public waterBodyPartDamage(bodyPart: BodyPart, reaction: Reaction): void {\n    switch (reaction) {\n      case Reaction.DIE:\n        this.danger(\n          `Вода попала мне на ${bodyPart.name}, рана не совместима с жизнью`\n        )\n        break\n      case Reaction.HURT:\n        this.danger(`Вода обожгла мне ${bodyPart.name}`)\n        break\n      case Reaction.NOTHING:\n      case Reaction.RESIST:\n        this.danger(`Вода попала мне на ${bodyPart.name}, но все обошлось`)\n        break\n    }\n  }\n\n  public waterTrapDamage(\n    player: Player,\n    sees: boolean,\n    isPlayer: boolean,\n    reaction: Reaction,\n    creature: Creature\n  ): void {\n    if (!sees) {\n      return\n    }\n\n    switch (reaction) {\n      case Reaction.DIE:\n        this.danger(`${creature.name} растворился в потоках воды`)\n        break\n      case Reaction.DODGE:\n        this.info(`${creature.name} уклонился от потока воды`)\n        break\n      case Reaction.HURT:\n        this.warning(`${creature.name} пострадал от воды`)\n        break\n      case Reaction.NOTHING:\n      case Reaction.RESIST:\n        if (!isPlayer) {\n          this.debug(`${creature.name} был облит водой`)\n        }\n        break\n    }\n  }\n\n  public itemCorrode(item: Item): void {\n    switch (item.corrosionLevel) {\n      case CorrosionLevel.Slightly:\n        return this.info(`${item.name} немного заржавел`)\n      case CorrosionLevel.Mostly:\n        return this.info(`${item.name} значительно проржавел`)\n      case CorrosionLevel.Fully:\n        return this.warning(`${item.name} полностью проржавел`)\n    }\n  }\n\n  public itemDestroyByWater(item: Item, count: number): void {\n    this.warning(`${count} ${item.name} были уничтожены водой`)\n  }\n\n  public debug(message: string): void {\n    this.addMessage(LogLevel.DEBUG, message)\n  }\n\n  public info(message: string): void {\n    this.addMessage(LogLevel.INFO, message)\n  }\n\n  public warning(message: string): void {\n    this.addMessage(LogLevel.WARNING, message)\n  }\n\n  public danger(message: string): void {\n    this.addMessage(LogLevel.DANGER, message)\n  }\n\n  protected addMessage(level: LogLevel, message: string): void {\n    const lastRow: LogMessage | undefined = last(this.messages)\n\n    if (lastRow && lastRow.message === message) {\n      lastRow.counter += 1\n    } else {\n      this.messages.push({ level, message, counter: 1 })\n    }\n  }\n}\n\nclass SubLogger {\n  constructor(private logger: Logger, protected player: Player) {}\n\n  protected debug(message: string): void {\n    this.logger.debug(message)\n  }\n\n  protected info(message: string): void {\n    this.logger.info(message)\n  }\n\n  protected warning(message: string): void {\n    this.logger.warning(message)\n  }\n\n  protected danger(message: string): void {\n    this.logger.danger(message)\n  }\n}\n\nclass TrapAirBlowLogger extends SubLogger {\n  public dodge(sees: boolean, isPlayer: boolean, creature: Creature): void {\n    if (isPlayer) {\n      this.info(`Я увернулся от потока воздуха`)\n    } else if (sees) {\n      this.info(`${creature.name} увернулся от потока воздуха`)\n    }\n  }\n\n  public resist(sees: boolean, isPlayer: boolean, creature: Creature): void {\n    if (isPlayer) {\n      this.debug('Поток воздуха чуть не снес меня')\n    } else if (sees) {\n      this.debug(`${creature.name} попал в поток воздуха`)\n    }\n  }\n\n  public activate(sees: boolean, isPlayer: boolean, creature: Creature): void {\n    if (isPlayer) {\n      this.info('Меня снесло потоком воздуха')\n    } else if (sees) {\n      this.info(`${creature.name} снесло потоком воздуха`)\n    }\n  }\n\n  public handBlow(item: Item): void {\n    this.warning(`Поток воздуха выбил ${item.name} у меня из руки`)\n  }\n\n  public headBlow(item: Item): void {\n    this.warning(`Поток воздуха снял ${item.name} с моей головы`)\n  }\n}\n\nclass TrapHoleLogger extends SubLogger {\n  public dodge(sees: boolean, isPlayer: boolean, creature: Creature): void {\n    if (isPlayer) {\n      this.warning(`Я чуть не упал в яму`)\n    } else if (sees) {\n      this.warning(`${creature.name} чуть не упал в яму`)\n    }\n  }\n\n  public activated(sees: boolean, isPlayer: boolean, creature: Creature): void {\n    if (isPlayer) {\n      this.warning(`Я упал в яму`)\n    } else if (sees) {\n      this.warning(`${creature.name} упал в яму`)\n    }\n  }\n\n  public shallowActivated(\n    sees: boolean,\n    isPlayer: boolean,\n    creature: Creature\n  ): void {\n    if (isPlayer) {\n      this.warning(`Я упал в неглубокую яму`)\n    } else if (sees) {\n      this.warning(`${creature.name} упал в неглубокую яму`)\n    }\n  }\n}\n\nclass TrapBareWireLogger extends SubLogger {\n  public activated(\n    sees: boolean,\n    reaction: Reaction,\n    creature: Creature\n  ): void {\n    // TODO: Better messages\n    this.info(`${creature.name} наступил на оголенный провод`)\n  }\n\n  public doNotWant() {\n    this.info('Трогать оголенный провод руками так себе затея')\n  }\n\n  public resist(): void {\n    this.info('Я наступил на оголенный провод, но все обошлось')\n  }\n}\n\nclass TrapFallingRockLogger extends SubLogger {\n  public resist(player: Player): void {\n    // TODO: Different messages when head is firm or item if firm\n    return this.info('Камень упал мне на голову, но каска защитила меня')\n  }\n\n  public ranOut(): void {\n    return this.debug('Громкий щелчок, но ничего не произошло')\n  }\n\n  public dodge(\n    player: Player,\n    sees: boolean,\n    isPlayer: boolean,\n    actor: Creature\n  ): void {\n    this.info(`${actor.name} увернулся от ловушки`)\n  }\n\n  public activate(\n    player: Player,\n    sees: boolean,\n    isPlayer: boolean,\n    reaction: Reaction,\n    actor: Creature\n  ): void {\n    this.info(`${actor.name} попал в ловушку`)\n  }\n}\n\nclass DoorLogger extends SubLogger {\n  public alreadyOpen(): void {\n    this.debug('Door is already open')\n  }\n\n  public alreadyClosed(): void {\n    this.debug('Door is already closed')\n  }\n\n  public open(): void {\n    this.debug('I opened the door')\n  }\n\n  public close(): void {\n    this.debug('I closed the door')\n  }\n}\n\nclass AttackLogger extends SubLogger {\n  public melee(\n    damage: number,\n    actor: Creature,\n    target: Creature,\n    reaction: Reaction,\n    isPlayer: boolean\n  ): void {\n    switch (reaction) {\n      case Reaction.HURT:\n        return this.debug(\n          `${target.name} got ${damage} damage from ${actor.name}`\n        )\n      case Reaction.DIE:\n        return this.warning(\n          `${target.name} got ${damage} damage from ${\n            actor.name\n          } causes them to die`\n        )\n      case Reaction.NOTHING:\n        return this.debug(\n          `Удар пришелся по ${actor.name} но остался незамеченным`\n        )\n      //this.addMessage( LogLevel.DEBUG, `${actor.name} ударил по мне, но я не почувствовал боли`)\n      case Reaction.RESIST:\n        return this.info(`${target.name} игнорирует урон`)\n      // this.addMessage(LogLevel.DEBUG, `Я игнорирую урон ${target.name}`)\n      case Reaction.DODGE:\n        return this.debug(`${actor.name} misses ${target.name}!`)\n    }\n  }\n\n  public missile(\n    damage: number,\n    actor: Creature,\n    target: Creature,\n    reaction: Reaction,\n    missile: Item,\n    isPlayer: boolean\n  ): void {\n    switch (reaction) {\n      case Reaction.HURT:\n        return this.debug(\n          `${target.name} got ${damage} damage from ${actor.name} by ${\n            missile.name\n          }`\n        )\n      case Reaction.DIE:\n        return this.warning(\n          `${target.name} got ${damage} damage from ${\n            actor.name\n          } causes them to die`\n        )\n      case Reaction.NOTHING:\n        return this.debug(\n          `Удар пришелся по ${actor.name} но остался незамеченным`\n        )\n      //this.addMessage( LogLevel.DEBUG, `${actor.name} ударил по мне, но я не почувствовал боли`)\n      case Reaction.RESIST:\n        return this.info(`${target.name} игнорирует урон`)\n      // this.addMessage(LogLevel.DEBUG, `Я игнорирую урон ${target.name}`)\n      case Reaction.DODGE:\n        return this.debug(\n          `${actor.name} throws ${missile.name} in ${target.name}, but misses!`\n        )\n    }\n  }\n}\n","import { sortBy } from 'lodash'\n\nexport class KillStat {\n  public total: number = 0\n  private stat: Map<string, number> = new Map()\n\n  public add(name: string): void {\n    const current = this.stat.get(name)\n    if (current) {\n      this.stat.set(name, current + 1)\n    } else {\n      this.stat.set(name, 1)\n    }\n  }\n\n  get all(): [string, number][] {\n    return sortBy(Array.from(this.stat), ([name, count]) => name)\n  }\n}\n","import { Trap, Tile, TrapType } from '../tile'\nimport { Player } from '../player'\nimport { LevelMap } from '../level_map'\nimport { Game } from '../game'\nimport { Creature } from '../creature'\nimport { Point, Direction, bresenhamInclusion } from '../../utils/utils'\nimport { Calculator } from '../../lib/calculator'\nimport { TrapEvent } from '../../events/trap_event'\nimport { BodyPart } from '../inventory_slot'\nimport { Item } from '../item'\nimport { RemoveItemEvent } from '../../events/remove_item_event'\nimport { shuffle } from 'lodash'\nimport { MoveEvent } from '../../events/move_event'\nimport { Reaction } from '../../../engine'\n\nexport class AirBlowTrap extends Trap {\n  constructor(tile: Tile, revealed: boolean = false) {\n    super(TrapType.AirBlow, tile, revealed)\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    if (Calculator.chance(4, 6)) {\n      game.logger.failedToUntrap(player)\n\n      // TODO: Activate on creature on trap or on player\n      if (Calculator.chance(3, 5)) {\n        this.activate(pos, game, levelMap, player)\n      }\n    } else {\n      this.disarmTile(pos, player, levelMap, game)\n    }\n  }\n\n  protected buildNew(): Tile {\n    return new AirBlowTrap(this.tile, this.revealed)\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 6 : 15\n  }\n\n  get creatureWeightBlowThreshold(): number {\n    return 60\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    return creature.on(\n      new TrapEvent(\n        this,\n        levelMap,\n        game,\n        (sees, isPlayer) =>\n          game.logger.trapAirBlow.dodge(sees, isPlayer, creature),\n        (sees, isPlayer) => {\n          // EXTRA: Blow away stuff lying on a trap cell\n          if (\n            creature.weightWithCarryings >= this.creatureWeightBlowThreshold\n          ) {\n            game.logger.trapAirBlow.resist(sees, isPlayer, creature)\n          } else {\n            let newPos = this.randomPos(\n              pos,\n              levelMap,\n              Calculator.higherWeight(3, 1),\n              tile => tile.passibleThrough(creature)\n            )\n            if (newPos.eq(pos)) {\n              game.logger.trapAirBlow.resist(sees, isPlayer, creature)\n            } else {\n              game.logger.trapAirBlow.activate(sees, isPlayer, creature)\n              creature.on(new MoveEvent(game, levelMap, newPos))\n            }\n          }\n\n          if (isPlayer) {\n            const player = game.player,\n              inventory = player.inventory,\n              slots: [BodyPart, number, (item: Item) => void][] = [\n                [\n                  inventory.headSlot,\n                  3,\n                  item => game.logger.trapAirBlow.headBlow(item),\n                ],\n                [\n                  inventory.rightHandSlot,\n                  40 / player.strength.current,\n                  item => game.logger.trapAirBlow.handBlow(item),\n                ],\n                [\n                  inventory.leftHandSlot,\n                  45 / player.strength.current,\n                  item => game.logger.trapAirBlow.handBlow(item),\n                ],\n              ]\n\n            slots.forEach(\n              ([slot, maxChance, logger]: [\n                BodyPart,\n                number,\n                (item: Item) => void\n              ]) => {\n                if (\n                  slot.equipment &&\n                  maxChance >= 3 &&\n                  Calculator.chance(1, Math.round(maxChance))\n                ) {\n                  logger(slot.equipment.item)\n                  this.throwItem(pos, levelMap, slot.equipment.item)\n                  player.on(new RemoveItemEvent(slot, 1, game))\n                }\n              }\n            )\n          }\n\n          return Reaction.NOTHING\n        }\n      )\n    )\n  }\n\n  protected throwItem(pos: Point, levelMap: LevelMap, item: Item): void {\n    let newPos = this.randomPos(\n      pos,\n      levelMap,\n      Calculator.lowerWeight(5, 1),\n      (tile: Tile) => tile.isFloor()\n    )\n    levelMap.at(newPos.x, newPos.y).addItem(item, 1)\n  }\n\n  protected randomPos(\n    origin: Point,\n    levelMap: LevelMap,\n    maxDistance: number,\n    matcher: (tile: Tile) => boolean\n  ): Point {\n    let lastPos = origin,\n      foundPos = false\n\n    shuffle(Direction.all).forEach(direction => {\n      if (!foundPos) {\n        let brokenLos = false\n\n        bresenhamInclusion(\n          origin,\n          origin.add(direction.multiple(maxDistance)),\n          (x, y) => {\n            if (\n              !brokenLos &&\n              levelMap.inRange(new Point(x, y)) &&\n              matcher(levelMap.at(x, y))\n            ) {\n              lastPos = new Point(x, y)\n              foundPos = true\n            } else {\n              brokenLos = true\n            }\n          }\n        )\n      }\n    })\n\n    return lastPos\n  }\n}\n","import { Trap, TrapType, Tile } from '../tile'\nimport { Game } from '../game'\nimport { LevelMap } from '../level_map'\nimport { Creature } from '../creature'\nimport { Point } from '../../utils/utils'\nimport { Calculator } from '../../lib/calculator'\nimport { Player } from '../player'\nimport { HurtEvent } from '../../events/hurt_event'\nimport { DieReason } from '../../events/die_event'\nimport { Damage, DamageType } from '../../lib/damage'\nimport { VisibleCreatureEvent } from '../../events/visible_creature_event'\nimport { Reaction } from '../../events/internal'\n\nclass BareWireTrapEvent extends VisibleCreatureEvent {\n  constructor(private trap: Trap, levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n  }\n\n  get hurtEvent(): HurtEvent {\n    return new HurtEvent(this.damages, DieReason.Trap, this.levelMap, this.game)\n  }\n\n  get damages(): Damage[] {\n    return [{ type: DamageType.Pure, dice: { times: 5, max: 2 }, extra: 5 }]\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    const hurtReaction = creature.on(this.hurtEvent)\n\n    if (this.playerSees(creature)) {\n      this.trap.revealed = true\n    }\n\n    this.game.logger.trapBareWire.activated(\n      this.playerSees(creature),\n      hurtReaction,\n      creature\n    )\n\n    return hurtReaction\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    this.trap.revealed = true\n\n    if (player.inventory.bootsSlot.insulator) {\n      this.game.logger.trapBareWire.resist()\n\n      return Reaction.RESIST\n    } else {\n      const hurtReaction = player.on(this.hurtEvent)\n      this.game.logger.trapBareWire.activated(true, hurtReaction, player)\n\n      return hurtReaction\n    }\n  }\n}\n\nexport class BareWireTrap extends Trap {\n  constructor(tile: Tile, revealed: boolean = false) {\n    super(TrapType.BareWire, tile, revealed)\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    // TODO: Do stupid thing when has low\n    if (!player.inventory.glovesSlot.insulator) {\n      game.logger.trapBareWire.doNotWant()\n    } else if (Calculator.chance(1, 7)) {\n      game.logger.failedToUntrap(player)\n      // TODO: Activate on both player and creature standing on the trap\n      this.activate(pos, game, levelMap, player)\n    } else {\n      this.disarmTile(pos, player, levelMap, game)\n    }\n  }\n\n  protected buildNew(): Tile {\n    return new BareWireTrap(this.tile, this.revealed)\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 5 : 10\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    if (Calculator.dodges(creature.bodyControl, this.dodgeRatio)) {\n      return Reaction.DODGE\n    }\n\n    return creature.on(new BareWireTrapEvent(this, levelMap, game))\n  }\n}\n","import { Trap, TrapType, Tile } from '../tile'\nimport { Point, TrapEvent, Calculator, Item, Reaction } from '../../../engine'\nimport { Player } from '../player'\nimport { LevelMap } from '../level_map'\nimport { Game } from '../game'\nimport { Creature } from '../creature'\nimport { HurtEvent } from '../../events/hurt_event'\nimport { DieReason } from '../../events/die_event'\nimport { Damage, DamageType } from '../../lib/damage'\nimport { Logger } from '../logger'\n\nexport class FallingRockTrap extends Trap {\n  constructor(\n    private newRock: () => Item,\n    tile: Tile,\n    revealed: boolean = false,\n    public missilesCount = 5\n  ) {\n    super(TrapType.FallingRock, tile, revealed)\n  }\n\n  public buildNew(): Trap {\n    return new FallingRockTrap(\n      this.newRock,\n      this.tile,\n      this.revealed,\n      this.missilesCount\n    )\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 3 : 12\n  }\n\n  get damages(): Damage[] {\n    return [{ type: DamageType.Blunt, extra: 3, dice: { times: 2, max: 5 } }]\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    if (Calculator.chance(1, 4)) {\n      game.logger.failedToUntrap(player)\n\n      const creature = levelMap.at(pos.x, pos.y).creature\n      if (creature) {\n        this.activate(pos, game, levelMap, creature)\n      } else {\n        this.throwMissile(pos, levelMap, game.logger)\n      }\n    } else {\n      this.disarmTile(pos, player, levelMap, game)\n    }\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    if (!this.throwMissile(pos, levelMap, game.logger)) {\n      return Reaction.NOTHING\n    }\n\n    return creature.on(\n      new TrapEvent(\n        this,\n        levelMap,\n        game,\n        (sees, isPlayer) =>\n          game.logger.trapFallingRock.dodge(\n            game.player,\n            sees,\n            isPlayer,\n            creature\n          ),\n        (sees, isPlayer) => {\n          if (isPlayer && game.player.inventory.headSlot.firm) {\n            game.logger.trapFallingRock.resist(game.player)\n            return Reaction.RESIST\n          }\n\n          const res = creature.on(\n            new HurtEvent(this.damages, DieReason.Trap, levelMap, game)\n          )\n\n          game.logger.trapFallingRock.activate(\n            game.player,\n            sees,\n            isPlayer,\n            res,\n            creature\n          )\n\n          return res\n        }\n      )\n    )\n  }\n\n  protected throwMissile(\n    pos: Point,\n    levelMap: LevelMap,\n    logger: Logger\n  ): boolean {\n    if (this.missilesCount <= 0) {\n      logger.trapFallingRock.ranOut()\n      return false\n    }\n\n    this.missilesCount -= 1\n\n    levelMap.at(pos.x, pos.y).addItem(this.newRock(), 1)\n\n    return true\n  }\n}\n","import {\n  Creature,\n  Point,\n  safeWithMatchingTile,\n  TrapEvent,\n  withEachTile,\n} from '../../../engine'\nimport { CreatureEvent, Reaction } from '../../events/internal'\nimport { MoveEvent } from '../../events/move_event'\nimport { StayEvent } from '../../events/stay_event'\nimport { Game } from '../game'\nimport { LevelMap } from '../level_map'\nimport { Player } from '../player'\nimport { StairwayDown, Tile, Trap, TrapType } from '../tile'\nimport { HurtEvent } from '../../events/hurt_event'\nimport { DamageType } from '../../lib/damage'\nimport { DieReason } from '../../events/die_event'\n\n// Leads to a random tile every time because tile might be taken\n// by another creature next time you are falling down\nexport class HoleTrap extends Trap {\n  constructor(tile: Tile, revealed: boolean = false) {\n    super(TrapType.Hole, tile, revealed)\n  }\n\n  public buildNew(): Tile {\n    return new HoleTrap(this.tile, this.revealed)\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    game.logger.canNotUntrap()\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 1 : 5\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    return creature.on(\n      new TrapEvent(\n        this,\n        levelMap,\n        game,\n        (sees, isPlayer) =>\n          game.logger.trapHole.dodge(sees, isPlayer, creature),\n        (sees, isPlayer) => {\n          // TODO: Break fragile items\n          let fallEvent = this.fallEvent(game, levelMap)\n\n          if (fallEvent) {\n            game.logger.trapHole.activated(sees, isPlayer, creature)\n\n            creature.on(fallEvent)\n            return creature.on(\n              new HurtEvent(\n                [\n                  {\n                    type: DamageType.Pure,\n                    dice: { times: 3, max: 2 },\n                    extra: 2,\n                  },\n                ],\n                DieReason.Trap,\n                levelMap,\n                game\n              )\n            )\n          } else {\n            game.logger.trapHole.shallowActivated(sees, isPlayer, creature)\n\n            return creature.on(new StayEvent(levelMap))\n          }\n        }\n      )\n    )\n  }\n\n  private fallEvent(game: Game, levelMap: LevelMap): CreatureEvent | undefined {\n    let event = undefined\n\n    withEachTile(\n      levelMap,\n      () => true,\n      tile => {\n        if (tile instanceof StairwayDown) {\n          let downLevelMap = game.getMap(tile.adjacentMapName),\n            downPos = undefined\n\n          downPos = safeWithMatchingTile(downLevelMap, tile =>\n            tile.passibleThrough()\n          )\n\n          if (downPos) {\n            event = new MoveEvent(\n              game,\n              levelMap,\n              new Point(downPos.x, downPos.y),\n              downLevelMap\n            )\n          }\n        }\n      }\n    )\n\n    return event\n  }\n}\n","import { Trap, TrapType, Tile } from '../tile'\nimport { Game } from '../game'\nimport { LevelMap } from '../level_map'\nimport { Creature } from '../creature'\nimport { TrapEvent } from '../../events/trap_event'\nimport { Point } from '../../utils/utils'\nimport { AddImpactEvent } from '../../events/add_impact_event'\nimport { ImpactType } from '../../lib/impact'\nimport { Calculator } from '../../lib/calculator'\nimport { Player } from '../player'\nimport { Reaction } from '../../../engine'\n\nexport class LightTrap extends Trap {\n  constructor(tile: Tile, revealed: boolean = false) {\n    super(TrapType.Light, tile, revealed)\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    if (Calculator.chance(1, 3)) {\n      game.logger.failedToUntrap(player)\n      // TODO: Activate on creature on trap or on player\n      this.activate(pos, game, levelMap, player)\n    } else {\n      this.disarmTile(pos, player, levelMap, game)\n    }\n  }\n\n  protected buildNew(): Tile {\n    return new LightTrap(this.tile, this.revealed)\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 1 : 10\n  }\n\n  get duration(): number {\n    return 10\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    return creature.on(\n      new TrapEvent(\n        this,\n        levelMap,\n        game,\n        (sees, isPlayer) =>\n          game.logger.lightTrapDodge(game.player, sees, isPlayer, creature),\n        (sees, isPlayer) => {\n          // TODO: If player sees a creature log a message nevertheless\n          if (creature.hasImpact(ImpactType.Blind)) {\n            return Reaction.NOTHING\n          }\n\n          game.logger.lightTrapActivated(game.player, sees, isPlayer, creature)\n\n          return creature.on(\n            new AddImpactEvent(ImpactType.Blind, 'trap', game, this.duration)\n          )\n        }\n      )\n    )\n  }\n}\n","import { Point, TeleportationEvent, TrapEvent, Reaction } from '../../../engine'\nimport { Creature } from '../creature'\nimport { Game } from '../game'\nimport { LevelMap } from '../level_map'\nimport { Player } from '../player'\nimport { Tile, Trap, TrapType } from '../tile'\n\nexport class TeleportationTrap extends Trap {\n  constructor(tile: Tile, revealed: boolean = false) {\n    super(TrapType.Teleportation, tile, revealed)\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    game.logger.canNotUntrap()\n  }\n\n  protected buildNew(): Tile {\n    return new TeleportationTrap(this.tile, this.revealed)\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 3 : 10\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    return creature.on(\n      new TrapEvent(\n        this,\n        levelMap,\n        game,\n        (sees, isPlayer) => {\n          if (isPlayer) {\n            game.logger.playerDodgesTeleportationTrap()\n          } else if (sees) {\n            game.logger.creatureDodgesTeleportationTrap(creature)\n          }\n        },\n        (sees, isPlayer) => {\n          return creature.on(new TeleportationEvent(levelMap, game, false))\n        }\n      )\n    )\n  }\n}\n","import { Trap, TrapType, Tile } from '../tile'\nimport { Point, TrapEvent, Calculator, Reaction } from '../../../engine'\nimport { Game } from '../game'\nimport { LevelMap } from '../level_map'\nimport { Creature } from '../creature'\nimport { Player } from '../player'\nimport { DamageType, Damage } from '../../lib/damage'\nimport { WaterDamageEvent } from '../../events/water_damage_event'\n\nexport class WaterTrap extends Trap {\n  constructor(tile: Tile, revealed: boolean = false) {\n    super(TrapType.Water, tile, revealed)\n  }\n\n  public buildNew(): Trap {\n    return new WaterTrap(this.tile, this.revealed)\n  }\n\n  get dodgeRatio(): number {\n    return this.revealed ? 10 : 8\n  }\n\n  get damages(): Damage[] {\n    return [{ type: DamageType.Pure, extra: 5, dice: { times: 2, max: 2 } }]\n  }\n\n  public untrap(\n    pos: Point,\n    player: Player,\n    levelMap: LevelMap,\n    game: Game\n  ): void {\n    if (Calculator.chance(3, 4)) {\n      game.logger.failedToUntrap(player)\n\n      // TODO: Activate on creature on trap or on player\n      if (Calculator.chance(1, 4)) {\n        this.activate(pos, game, levelMap, player)\n      }\n    } else {\n      this.disarmTile(pos, player, levelMap, game)\n    }\n  }\n\n  public activate(\n    pos: Point,\n    game: Game,\n    levelMap: LevelMap,\n    creature: Creature\n  ): Reaction {\n    return creature.on(\n      new TrapEvent(\n        this,\n        levelMap,\n        game,\n        (sees, isPlayer) =>\n          game.logger.waterTrapDamage(\n            game.player,\n            sees,\n            isPlayer,\n            Reaction.DODGE,\n            creature\n          ),\n        (sees, isPlayer) => {\n          if (isPlayer) {\n            game.logger.waterTrapActivated()\n          }\n\n          let reaction = creature.on(\n            new WaterDamageEvent(this.damages, levelMap, game)\n          )\n\n          if (!isPlayer) {\n            game.logger.waterTrapDamage(\n              game.player,\n              sees,\n              isPlayer,\n              reaction,\n              creature\n            )\n          }\n\n          return reaction\n        }\n      )\n    )\n  }\n}\n","import { Presenter, PresenterType } from './internal'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\n\nexport class PickSingleOptionPresenter<Option> extends Presenter {\n  constructor(\n    public options: Option[],\n    levelMap: LevelMap,\n    game: Game,\n    private withOption: (option: Option) => void\n  ) {\n    super(levelMap, game)\n  }\n\n  get type(): PresenterType {\n    return PresenterType.PickHandleOption\n  }\n\n  public pick(option: Option): void {\n    this.withOption(option)\n  }\n\n  public close(): void {\n    this.goIdle()\n  }\n}\n","import { Presenter, PresenterType } from './internal'\nimport { Game, LevelMap, Talent, TalentStatus } from '../../engine'\nimport { Profession } from '../models/profession'\nimport { LevelUpEvent } from '../events/level_up_event'\nimport { TalentsPresenter } from './talents_presenter'\n\nexport class TalentsPickingPresenter extends Presenter {\n  public readonly talentsPage: TalentsPresenter\n\n  constructor(public readonly level: number, levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n\n    this.talentsPage = new TalentsPresenter(levelMap, game)\n  }\n\n  get type(): PresenterType {\n    return PresenterType.TalentsPicking\n  }\n\n  public pickTalent(profession: Profession, talent: Talent): void {\n    if (talent.status(profession) !== TalentStatus.Available) {\n      throw `Talent ${talent.name} for profession ${\n        profession.name\n      } can not be upgraded`\n    }\n\n    talent.upgrade(this.game)\n    profession.points += 1\n\n    this.player.on(new LevelUpEvent())\n\n    this.endTurn()\n  }\n}\n","import {\n  CharacterInfoPresenter,\n  CharacterInfoPage,\n} from './character_info_presenter'\nimport { Profession } from '../models/profession'\n\nexport class TalentsPresenter extends CharacterInfoPresenter {\n  get page(): CharacterInfoPage {\n    return CharacterInfoPage.Talents\n  }\n\n  get professions(): Profession[] {\n    return this.player.professions\n  }\n}\n","import { Gender, Race, PrimaryAttributes } from '../engine'\n\nimport { Application } from '../onisun'\nimport { allRaces, humanRace } from './races'\n\nimport { sample, mergeWith } from 'lodash'\n\nexport enum MenuComponent {\n  MainMenu,\n  ChooseGenderMenu,\n  ChooseRaceMenu,\n  AttributesMenu,\n  AttributesSelectionMenu,\n}\n\nexport abstract class Menu {\n  constructor(protected application: Application) {}\n\n  abstract get component(): MenuComponent\n\n  protected redirect(menu: Menu): void {\n    this.application.menu = menu\n  }\n}\n\nexport class MainMenu extends Menu {\n  public newGame(): void {\n    this.redirect(new ChooseGenderMenu(this.application))\n  }\n\n  get component(): MenuComponent {\n    return MenuComponent.MainMenu\n  }\n}\n\nexport class ChooseGenderMenu extends Menu {\n  get component(): MenuComponent {\n    return MenuComponent.ChooseGenderMenu\n  }\n\n  public withGender(gender: Gender): void {\n    this.redirect(new ChooseRaceMenu(gender, this.application))\n  }\n\n  public random(): void {\n    this.withGender(sample([Gender.Male, Gender.Female]) || Gender.Female)\n  }\n\n  public back(): void {\n    this.application.menu = new MainMenu(this.application)\n  }\n}\n\nexport class ChooseRaceMenu extends Menu {\n  constructor(public gender: Gender, application: Application) {\n    super(application)\n  }\n\n  get component(): MenuComponent {\n    return MenuComponent.ChooseRaceMenu\n  }\n\n  public withRace(race: Race): void {\n    this.redirect(new AttributesMenu(this.gender, race, this.application))\n  }\n\n  public random(): void {\n    this.withRace(sample(allRaces) || humanRace)\n  }\n\n  public back(): void {\n    this.application.menu = new ChooseGenderMenu(this.application)\n  }\n}\n\nexport class AttributesMenu extends Menu {\n  constructor(\n    public gender: Gender,\n    public race: Race,\n    application: Application\n  ) {\n    super(application)\n  }\n\n  get component(): MenuComponent {\n    return MenuComponent.AttributesMenu\n  }\n\n  public manually(): void {\n    this.redirect(\n      new AttributesSelectionMenu(this.gender, this.race, this.application)\n    )\n  }\n\n  public back(): void {\n    this.redirect(new ChooseRaceMenu(this.gender, this.application))\n  }\n}\n\nexport class AttributesSelectionMenu extends Menu {\n  public readonly attributeNames: string[]\n  public readonly racialAttributes: PrimaryAttributes\n  public readonly genderAttributes: PrimaryAttributes\n  public readonly baseAttributes: PrimaryAttributes\n\n  constructor(\n    public gender: Gender,\n    public race: Race,\n    application: Application\n  ) {\n    super(application)\n\n    this.attributeNames = Object.keys(this.race.primaryAttributes)\n\n    this.racialAttributes = this.race.primaryAttributes\n    this.genderAttributes = this.calcGenderAttributes(gender)\n\n    this.baseAttributes = mergeWith(\n      {},\n      this.racialAttributes,\n      this.genderAttributes,\n      (x, y) => {\n        if (x) {\n          return x + y\n        }\n      }\n    )\n  }\n\n  get component(): MenuComponent {\n    return MenuComponent.AttributesSelectionMenu\n  }\n\n  public ready(): void {\n    // TODO:\n  }\n\n  public back(): void {\n    this.redirect(new AttributesMenu(this.gender, this.race, this.application))\n  }\n\n  private calcGenderAttributes(gender: Gender): PrimaryAttributes {\n    if (gender === Gender.Male) {\n      return {\n        strength: 1,\n        dexterity: -1,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0,\n      }\n    } else {\n      return {\n        strength: -1,\n        dexterity: 1,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0,\n      }\n    }\n  }\n}\n","import { Presenter, PresenterType } from './internal'\nimport { Point, bresenhamInclusion, Direction } from '../utils/utils'\nimport { Memory } from '../models/memory'\nimport { IdlePresenter } from './idle_presenter'\nimport { MissileAttackEvent, Game, LevelMap } from '../../engine'\n\nexport class MissilePresenter extends Presenter {\n  public targetPos: Point\n  private memory: Memory\n  private targetEnemyIndex: number | undefined = undefined\n  private enemies: Point[] = []\n  private path: Point[] = []\n\n  constructor(levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n\n    this.findEnemies()\n    this.memory = this.player.stageMemory(this.levelMap)\n    this.targetPos = this.resetTargetId()\n  }\n\n  get type(): PresenterType {\n    return PresenterType.Missile\n  }\n\n  public nextTarget(): void {\n    if (this.targetEnemyIndex === undefined) {\n      this.resetTargetId()\n      return\n    }\n\n    this.targetEnemyIndex += 1\n\n    if (this.targetEnemyIndex >= this.enemies.length) {\n      this.targetEnemyIndex = 0\n    }\n\n    this.updateTarget(this.enemies[this.targetEnemyIndex])\n  }\n\n  public previousTarget(): void {\n    if (this.targetEnemyIndex === undefined) {\n      this.resetTargetId()\n      return\n    }\n\n    this.targetEnemyIndex -= 1\n\n    if (this.targetEnemyIndex < 0) {\n      this.targetEnemyIndex = this.enemies.length - 1\n    }\n\n    this.updateTarget(this.enemies[this.targetEnemyIndex])\n  }\n\n  public moveTarget(direction: Direction): void {\n    const dest = this.targetPos.add(direction),\n      tile = this.levelMap.at(dest.x, dest.y)\n\n    if (\n      tile.visibleThrough() &&\n      this.player.stageMemory(this.levelMap).at(dest.x, dest.y).visible\n    ) {\n      this.updateTarget(dest)\n      this.targetEnemyIndex = undefined\n    }\n  }\n\n  public attack(): void {\n    if (!this.targetPos.eq(this.levelMap.creaturePos(this.player))) {\n      this.player.on(\n        new MissileAttackEvent(this.path, this.game, this.levelMap, () =>\n          this.endTurn()\n        )\n      )\n    }\n  }\n\n  public close(): void {\n    this.resetPath()\n    this.redirect(new IdlePresenter(this.levelMap, this.game))\n  }\n\n  private resetTargetId(): Point {\n    let point: Point\n\n    if (this.enemies.length) {\n      this.targetEnemyIndex = 0\n      point = this.enemies[this.targetEnemyIndex]\n    } else {\n      this.targetEnemyIndex = undefined\n      point = this.levelMap.creaturePos(this.player)\n    }\n\n    this.updateTarget(point)\n    return point\n  }\n\n  private resetPath(): void {\n    this.path.forEach(({ x, y }) => (this.memory.at(x, y).effect = undefined))\n  }\n\n  private updateTarget(newPos: Point): void {\n    this.resetPath()\n    this.targetPos = newPos.copy()\n    this.drawPath()\n  }\n\n  private drawPath(): void {\n    this.path = []\n    let stop = false\n    const stage = this.levelMap,\n      pos = this.levelMap.creaturePos(this.player)\n\n    bresenhamInclusion(pos, this.targetPos, (x, y) => {\n      if (!stage.at(x, y).passibleThrough()) {\n        stop = true\n      }\n\n      this.path.push(new Point(x, y))\n      this.memory.at(x, y).effect = stop ? 'o' : 'x'\n    })\n  }\n\n  private findEnemies(): void {\n    this.enemies = []\n\n    this.player.stageMemory(this.levelMap).each((tile, x, y) => {\n      if (\n        tile.visible &&\n        tile.creature &&\n        tile.creature.id !== this.player.id\n      ) {\n        this.enemies.push(new Point(x, y))\n      }\n    })\n  }\n}\n","import { Presenter, PresenterType, BaseMenusPresenter } from './internal'\nimport {\n  Game,\n  Direction,\n  DropItemsPresenter,\n  DrinkPresenter,\n  BagPresenter,\n  AttackEvent,\n  PickUpItemsEvent,\n  PickUpPresenter,\n  TileVisitor,\n  Stairway,\n  LevelMap,\n  LookPresenter,\n  UntrapEvent,\n  Point,\n  BaseInfoPresenter,\n  CloseDoorEvent,\n} from '../../engine'\nimport { EquipmentPresenter } from './equipment_presenter'\nimport { MissilePresenter } from './missile_presenter'\nimport { MoveEvent } from '../events/move_event'\nimport { CreatureEvent, PlayerEvent } from '../events/internal'\nimport { concat } from 'lodash'\nimport { Trap, Door } from '../models/tile'\nimport { PickSingleOptionPresenter } from './pick_single_option_presenter'\nimport { StayEvent } from '../events/stay_event'\nimport { OpenDoorEvent } from '../events/open_door_event'\n\nclass HandleTileVisitor extends TileVisitor {\n  // TODO: Add direction since commands might duplicate\n  public commands: [string, PlayerEvent][] = []\n\n  constructor(\n    public position: Point,\n    protected game: Game,\n    protected levelMap: LevelMap\n  ) {\n    super()\n  }\n\n  protected onStairway(stairway: Stairway): void {\n    const adjacentMap = this.game.getMap(stairway.adjacentMapName)\n\n    this.commands.push([\n      'stairway',\n      new MoveEvent(\n        this.game,\n        this.levelMap,\n        stairway.enterPos(this.levelMap, adjacentMap),\n        adjacentMap\n      ),\n    ])\n  }\n\n  public onTrap(trap: Trap): void {\n    if (!trap.revealed) {\n      return\n    }\n\n    this.commands.push([\n      'untrap',\n      new UntrapEvent(this.position, trap, this.levelMap, this.game),\n    ])\n  }\n}\n\nclass AdjustHandleTileVisitor extends HandleTileVisitor {\n  protected onStairway(): void {}\n\n  public onDoor(door: Door): void {\n    if (door.open) {\n      this.commands.push([\n        'closeDoor',\n        new CloseDoorEvent(door, this.levelMap, this.game),\n      ])\n    } else {\n      this.commands.push([\n        'openDoor',\n        new OpenDoorEvent(door, this.levelMap, this.game),\n      ])\n    }\n  }\n}\n\nexport class IdlePresenter extends BaseMenusPresenter {\n  get type(): PresenterType {\n    return PresenterType.Idle\n  }\n\n  public inventoryCommand(): void {\n    this.redirect(new EquipmentPresenter(this.levelMap, this.game))\n  }\n\n  public bagCommand(): void {\n    this.redirect(new BagPresenter(this.levelMap, this.game))\n  }\n\n  public stayCommand(): void {\n    this.player.on(new StayEvent(this.levelMap))\n    this.endTurn()\n  }\n\n  public dropCommand(): void {\n    this.redirect(new DropItemsPresenter(this.levelMap, this.game))\n  }\n\n  public drinkCommand(): void {\n    this.redirect(new DrinkPresenter(this.levelMap, this.game))\n  }\n\n  public lookCommand(): void {\n    this.redirect(new LookPresenter(this.levelMap, this.game))\n  }\n\n  public move(direction: Direction): void {\n    const pos = this.levelMap.creaturePos(this.player),\n      dest = pos.add(direction),\n      tile = this.levelMap.at(dest.x, dest.y)\n\n    if (tile.passibleThrough(this.player)) {\n      this.player.on(new MoveEvent(this.game, this.levelMap, dest))\n    } else if (tile.creature) {\n      this.player.on(new AttackEvent(tile.creature, this.levelMap, this.game))\n    } else {\n      this.game.logger.ranIntoAnObstacle()\n      this.player\n        .stageMemory(this.levelMap)\n        .at(dest.x, dest.y)\n        .see(tile, 0)\n    }\n\n    this.endTurn()\n  }\n\n  public pickUpCommand(): void {\n    const tile = this.tile,\n      items = tile.items\n\n    if (items === undefined || items.bunch.length === 0) {\n      this.game.logger.noItemsToPickUp()\n    } else if (items.bunch.length === 1) {\n      this.player.on(new PickUpItemsEvent(tile, items.bunch, this.game))\n      this.endTurn()\n    } else {\n      this.redirect(new PickUpPresenter(this.levelMap, this.game))\n    }\n  }\n\n  public missileCommand(): void {\n    const missile = this.player.inventory.missileSlot.equipment\n\n    if (missile && missile.item) {\n      if (missile.item.canThrow(this.player)) {\n        this.redirect(new MissilePresenter(this.levelMap, this.game))\n      } else {\n        this.game.logger.needMissileWeapon()\n      }\n    } else {\n      this.game.logger.nothingToShotWith()\n    }\n  }\n\n  public handleCommand(): void {\n    let pos = this.levelMap.creaturePos(this.player),\n      visitor = new HandleTileVisitor(pos, this.game, this.levelMap),\n      adjustVisitor = new AdjustHandleTileVisitor(pos, this.game, this.levelMap)\n\n    this.tile.visit(visitor)\n\n    pos.wrappers().forEach((point: Point) => {\n      adjustVisitor.position = point\n      this.levelMap.at(point.x, point.y).visit(adjustVisitor)\n    })\n\n    const commands = concat(visitor.commands, adjustVisitor.commands)\n\n    switch (commands.length) {\n      case 0:\n        this.game.logger.howToHandle()\n        break\n      case 1:\n        this.player.on(commands[0][1])\n        this.endTurn()\n        break\n      default:\n        this.redirect(\n          new PickSingleOptionPresenter(\n            commands,\n            this.levelMap,\n            this.game,\n            ([name, command]) => {\n              this.player.on(command)\n              this.endTurn()\n            }\n          )\n        )\n    }\n  }\n}\n","import {\n  Creature,\n  Clan,\n  Pool,\n  AICreature,\n  DamageType,\n  Protection,\n  ProtectionType,\n  Damage,\n  Critical,\n} from '../engine'\nimport { Dispatcher } from './ai'\nimport { Material } from '../engine/lib/material'\n\nconst critical: Critical = { chance: 0.05, multiplier: 2 }\n\nconst newCreature = (\n  name: string,\n  protections: Protection[] = [],\n  damages: Damage[]\n) => {\n  return new AICreature(new Dispatcher(), {\n    name: name,\n    weight: 10,\n    clan: Clan.PlayerOnlyEnemy,\n    abilities: [],\n    protections: protections,\n    damages: damages,\n\n    maxHealthValue: 1,\n    regenerationRate: 5,\n    regenerationValue: 1,\n\n    resistances: [],\n    visionRadius: 5,\n\n    moveSpeed: 20,\n    attackSpeed: 20,\n    bodyControl: 5,\n\n    leavesCorpseRatio: 50,\n    material: Material.flesh,\n\n    throwingDamages: [],\n    critical,\n  })\n}\n\nexport const rat = () => {\n  return newCreature(\n    'Rat',\n    [],\n    [{ type: DamageType.Melee, dice: { times: 2, max: 2 }, extra: 0 }]\n  )\n}\n\nexport const golem = () => {\n  return newCreature(\n    'Golem',\n    [{ type: ProtectionType.Solid, value: 5 }],\n    [{ type: DamageType.Blunt, dice: { times: 1, max: 5 }, extra: 10 }]\n  )\n}\n\nexport const creaturesPool1 = new Pool<null, Creature>([[100, rat], [3, golem]])\n","import {\n  addCreatures,\n  addDoors,\n  addItems,\n  withMatchingTile,\n  centralize,\n  Corridor,\n  Door,\n  drawn,\n  Dungeon,\n  dungeon,\n  Floor,\n  LevelMap,\n  Point,\n  Room,\n  Tile,\n  TileTypes,\n  Wall,\n  Game,\n  Player,\n  Pool,\n} from '../../engine'\nimport { creaturesPool1 } from '../creatures'\nimport { withEachTile } from '../../engine/lib/post'\nimport { AirBlowTrap } from '../../engine/models/traps/air_blow_trap'\nimport { BareWireTrap } from '../../engine/models/traps/bare_wire_trap'\nimport { FallingRockTrap } from '../../engine/models/traps/falling_rock_trap'\nimport { smallRock } from '../items'\nimport { HoleTrap } from '../../engine/models/traps/hole_trap'\nimport { LightTrap } from '../../engine/models/traps/light_trap'\nimport { TeleportationTrap } from '../../engine/models/traps/teleportation_trap'\nimport { WaterTrap } from '../../engine/models/traps/water_trap'\n\nconst titleId: string = 'title'\n\nconst config = {\n  addDoors: false,\n  minSize: 3,\n  maxSize: 8,\n  roomsCount: 20,\n  addTraps: false,\n  width: 100,\n  height: 100,\n}\n\nconst tiles: Map<string, () => Tile> = new Map()\ntiles.set('C', () => new Corridor('C', TileTypes.Floor))\ntiles.set('W', () => new Wall())\ntiles.set('R', () => new Floor('R', TileTypes.Floor))\ntiles.set('D', () => new Door())\n\nconst traps: Pool<Tile, Tile> = new Pool([\n  [1, (tile: Tile): Tile => new AirBlowTrap(tile, false)],\n  [1, (tile: Tile): Tile => new BareWireTrap(tile, false)],\n  [1, (tile: Tile): Tile => new FallingRockTrap(smallRock, tile, false)],\n  [1, (tile: Tile): Tile => new HoleTrap(tile, false)],\n  [1, (tile: Tile): Tile => new LightTrap(tile, false)],\n  [1, (tile: Tile): Tile => new TeleportationTrap(tile, false)],\n  [1, (tile: Tile): Tile => new WaterTrap(tile, false)],\n  [93, (tile: Tile): Tile => tile],\n])\n\nexport class TitleDungeon extends Dungeon {\n  public enter(game: Game, player: Player): void {\n    const levelMap = (game.currentMap = game.getMap(titleId))\n\n    withMatchingTile(\n      levelMap,\n      tile => tile.isFloor() && tile.passibleThrough(),\n      (x, y) => {\n        levelMap.addCreature(new Point(x, y), player)\n      }\n    )\n  }\n\n  public register(game: Game): void {\n    game.addMap(titleId, (id, game) =>\n      addCreatures(0, this.generateMap(titleId), creaturesPool1)\n    )\n  }\n\n  private generateMap(name: string): LevelMap {\n    let map = new LevelMap(\n      name,\n      dungeon<Tile>(\n        config.width,\n        config.height,\n        config.minSize,\n        config.maxSize,\n        config.roomsCount,\n        () => new Room(),\n        () => new Corridor('C', TileTypes.Floor),\n        () => new Wall()\n      )\n    )\n\n    addDoors(map, () => new Door(), () => true)\n\n    withEachTile(\n      map,\n      tile => tile.isFloor(),\n      (tile, x, y) => {\n        map.setTile(x, y, traps.pick(tile))\n      }\n    )\n\n    centralize(map)\n\n    // addItems(0.05, map, weapons.merge(itemsPool))\n\n    return map\n  }\n}\n","import { AttackEvent, Game } from '../../engine'\nimport { Creature } from '../models/creature'\nimport { AI } from './internal'\nimport { LevelMap } from '../models/level_map'\nimport { CreatureEvent } from '../events/internal'\n\nexport class Attacker extends AI {\n  public victim?: Creature\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game,\n    firstTurn: boolean = true\n  ): CreatureEvent | undefined {\n    if (!this.canAttack(actor, levelMap)) {\n      return\n    }\n\n    if (this.victim && this.victimInAccess(actor, levelMap, this.victim)) {\n      return new AttackEvent(this.victim, levelMap, game)\n    } else {\n      if (!firstTurn) {\n        throw 'Attacker got called twice'\n      }\n\n      this.pickNewVictim(actor, levelMap)\n      return this.act(actor, levelMap, game, false)\n    }\n  }\n\n  private canAttack(actor: Creature, levelMap: LevelMap): boolean {\n    const creature = this.findCreature(actor, levelMap, creature =>\n      this.enemies(actor, creature)\n    )\n    return !!creature\n  }\n\n  private victimInAccess(\n    actor: Creature,\n    levelMap: LevelMap,\n    victim: Creature | undefined\n  ): boolean {\n    if (victim === undefined) {\n      return false\n    }\n\n    const creature = this.findCreature(\n      actor,\n      levelMap,\n      (creature: Creature) => creature.id === victim.id\n    )\n    return !!creature\n  }\n\n  private pickNewVictim(actor: Creature, levelMap: LevelMap) {\n    this.victim = this.findCreature(actor, levelMap, creature =>\n      this.enemies(actor, creature)\n    )\n  }\n\n  private findCreature(\n    actor: Creature,\n    levelMap: LevelMap,\n    condition: (creature: Creature) => boolean\n  ): Creature | undefined {\n    const memory = actor.stageMemory(levelMap)\n\n    return levelMap\n      .creaturePos(actor)\n      .wrappers()\n      .map(({ x, y }) => memory.at(x, y).creature)\n      .find(\n        (creature: Creature | undefined) =>\n          creature ? condition(creature) : false\n      )\n  }\n}\n","import { Creature, CreatureId } from '../models/creature'\nimport { Game } from '../models/game'\nimport { Point } from '../utils/utils'\nimport { FollowTargetAI } from './internal'\nimport { CreatureEvent } from '../events/internal'\nimport { LevelMap } from '../models/level_map'\n\nexport class Chaser extends FollowTargetAI {\n  private victimId?: CreatureId\n\n  protected foundNewTarget(actor: Creature, levelMap: LevelMap): boolean {\n    // Is there a victim and a path to it?\n    return (\n      (this.victimSet() && this.buildVictimPath(actor, levelMap)) ||\n      this.foundNewVictim(actor, levelMap)\n    )\n  }\n\n  protected onCantMove(): void {\n    this.victimId = undefined\n  }\n\n  protected onReach(): CreatureEvent | undefined {\n    this.victimId = undefined\n    return\n  }\n\n  private victimSet(): boolean {\n    return !!this.victimId\n  }\n\n  protected goTo(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    if (!this.destination) {\n      throw 'Chaser.goTo: no destination'\n    }\n    return this.followTo(actor, this.destination, levelMap, game)\n  }\n\n  private buildVictimPath(actor: Creature, levelMap: LevelMap): boolean {\n    return this.findCreature(\n      actor,\n      levelMap,\n      creature => creature.id === this.victimId\n    )\n  }\n\n  private foundNewVictim(actor: Creature, levelMap: LevelMap): boolean {\n    // Found new victim and built path to it\n    return (\n      this.findCreature(actor, levelMap, creature =>\n        this.enemies(actor, creature)\n      ) && this.buildVictimPath(actor, levelMap)\n    )\n  }\n\n  private findCreature(\n    actor: Creature,\n    levelMap: LevelMap,\n    condition: (creature: Creature) => boolean\n  ): boolean {\n    let result: boolean = false\n\n    this.withinView(\n      actor.stageMemory(levelMap),\n      levelMap.creaturePos(actor),\n      ({ x, y }, tile) => {\n        const creature = tile.creature\n\n        if (!result && creature && condition(creature)) {\n          this.destination = new Point(x, y)\n          this.victimId = creature.id\n          result = true\n        }\n      }\n    )\n\n    return result\n  }\n\n  protected followTo(\n    actor: Creature,\n    destination: Point,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    return this.move(actor, levelMap, game, point => destination.nextTo(point))\n  }\n}\n","import {\n  Ability,\n  Creature,\n  Game,\n  StairwayDown,\n  MoveEvent,\n  LevelMap,\n} from '../../engine'\nimport { CreatureEvent } from '../events/internal'\nimport { TileVisitor } from '../models/tile'\nimport { GoToTileAI } from './internal'\n\nclass StairwayDownFinderVisitor extends TileVisitor {\n  public match = false\n\n  public onStairwayDown(): void {\n    this.match = true\n  }\n}\n\nclass StairwayDownTileMoverVisitor extends TileVisitor {\n  public event: CreatureEvent | undefined\n\n  constructor(private game: Game, private levelMap: LevelMap) {\n    super()\n  }\n\n  public onStairwayDown(stairway: StairwayDown): void {\n    const adjacentMap = this.game.getMap(stairway.adjacentMapName)\n\n    this.event = new MoveEvent(\n      this.game,\n      this.levelMap,\n      stairway.enterPos(this.levelMap, adjacentMap),\n      adjacentMap\n    )\n  }\n}\n\nexport class Descender extends GoToTileAI {\n  constructor() {\n    super(tile => {\n      const visitor = new StairwayDownFinderVisitor()\n      tile.visit(visitor)\n      return visitor.match\n    })\n  }\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    if (actor.can(Ability.GoStairwayDown)) {\n      return super.act(actor, levelMap, game)\n    }\n  }\n\n  protected onReach(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    // Should stay here at least for a turn\n    const visitor = new StairwayDownTileMoverVisitor(game, levelMap),\n      tile = levelMap.creatureTile(actor)\n\n    tile.visit(visitor)\n    return visitor.event\n  }\n}\n","import { FollowTargetAI } from './internal'\nimport { Creature } from '../models/creature'\nimport { Point, LevelMap } from '../../engine'\n\nimport { sumBy } from 'lodash'\n\nconst STEP_DISTANCE = 2\n\nexport class Escaper extends FollowTargetAI {\n  private escapesFrom: [Point, Creature][] = []\n\n  protected foundNewTarget(actor: Creature, levelMap: LevelMap): boolean {\n    return (\n      this.foundEnemies(actor, levelMap) &&\n      this.buildEscapePath(actor, levelMap)\n    )\n  }\n\n  private buildEscapePath(\n    actor: Creature,\n    levelMap: LevelMap,\n    minDistance: number = actor.visionRadius / 2\n  ): boolean {\n    if (minDistance <= 1) {\n      this.destination = undefined\n      return false\n    }\n\n    const path = this.buildPath(actor, levelMap, ({ x, y }) => {\n      const score = sumBy(this.escapesFrom, ([pos, enemy]) => {\n        // I don't use pathfinding since it should try\n        // to run away from those who are visible, so the path\n        // to them should be straightforward.\n        return Math.max(Math.abs(x - pos.x), Math.abs(y - pos.y))\n      })\n\n      return score >= minDistance\n    })\n\n    if (path.length) {\n      this.destination = path.pop()\n      return true\n    } else {\n      return this.buildEscapePath(actor, levelMap, minDistance - STEP_DISTANCE)\n    }\n  }\n\n  private foundEnemies(actor: Creature, levelMap: LevelMap): boolean {\n    this.escapesFrom = []\n\n    this.withinView(\n      actor.stageMemory(levelMap),\n      levelMap.creaturePos(actor),\n      (point, tile) => {\n        const creature = tile.creature\n\n        if (creature && this.enemies(actor, creature)) {\n          this.escapesFrom.push([point, creature])\n        }\n      }\n    )\n\n    return this.escapesFrom.length > 0\n  }\n}\n","import { GoToTileAI } from './internal'\n\nexport class Explorer extends GoToTileAI {\n  constructor() {\n    super(tile => !tile.seen)\n  }\n}\n","import { AI } from './internal'\n\nimport { Point } from '../utils/utils'\nimport { Creature } from '../models/creature'\n\nimport * as graphlib from 'graphlib'\nimport { Loiter } from './loiter'\nimport { TileVisitor, Tile } from '../models/tile'\nimport { MoveEvent } from '../events/move_event'\nimport { Game } from '../models/game'\nimport { CreatureEvent } from '../events/internal'\nimport { LevelMap } from '../models/level_map'\n\ntype NodeID = string\n\nconst NEW_POINT_EVERY: number = 10\n\nclass PatrolTileVisitor extends TileVisitor {\n  public status: boolean = false\n\n  constructor(private tile: Tile) {\n    super()\n  }\n\n  public addNode(): boolean {\n    this.status = false\n    this.tile.visit(this)\n    return this.status\n  }\n\n  public onDoor() {\n    this.status = true\n  }\n}\n\nexport class Patrol extends AI {\n  private i: NodeID\n  private graph: graphlib.Graph\n  private lastNodeVisit: { [key: string]: number }\n  private currentNodeID: NodeID\n  private targetNodeID: NodeID | undefined\n  private path: Point[]\n  private step: number = NEW_POINT_EVERY\n  private firstCallPatrol: boolean = true\n\n  constructor() {\n    super()\n    this.i = 'a'\n\n    this.graph = new graphlib.Graph()\n\n    this.lastNodeVisit = {}\n\n    this.currentNodeID = 'a' // TODO: Check it, was undefined\n    this.markNodeVisited(this.currentNodeID)\n    this.path = []\n  }\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game,\n    firstTurn: boolean = true\n  ): CreatureEvent | undefined {\n    if (this.graph.nodes().length <= 1) {\n      return\n    }\n\n    if (this.firstCallPatrol) {\n      const pos = levelMap.creaturePos(actor)\n      this.addNode(pos)\n      this.firstCallPatrol = false\n    }\n\n    this.step += 1\n\n    if (this.path.length) {\n      return this.moveToTarget(actor, levelMap, game, firstTurn)\n    } else {\n      if (this.targetNodeID) {\n        this.markNodeVisited(this.targetNodeID)\n        this.currentNodeID = this.targetNodeID\n      }\n\n      this.pickUpNewTarget(actor, levelMap)\n      return this.moveToTarget(actor, levelMap, game, firstTurn)\n    }\n  }\n\n  public reset(): void {\n    this.path = []\n  }\n\n  public trackMovement(pos: Point, tile: Tile): void {\n    if (this.step >= NEW_POINT_EVERY || new PatrolTileVisitor(tile).addNode()) {\n      this.addNode(pos)\n    }\n    this.step += 1\n  }\n\n  // TODO: If close enough to another node, use it instead.\n  public addNode(point: Point): void {\n    this.graph.setNode(this.i, point)\n    if (this.currentNodeID && this.currentNodeID !== this.i) {\n      this.graph.setEdge(this.currentNodeID, this.i)\n    }\n    this.currentNodeID = this.i\n    this.newNodeId()\n    this.step = 0\n  }\n\n  private buildNewPath(actor: Creature, levelMap: LevelMap): void {\n    // TODO: Remove this\n    if (!this.targetNodeID) {\n      throw 'Patrol has no next targetID'\n    }\n    const pos: Point = this.graph.node(this.targetNodeID)\n\n    this.path = this.buildPath(actor, levelMap, point => pos.eq(point))\n  }\n\n  private pickUpNewTarget(actor: Creature, levelMap: LevelMap): void {\n    let seenLastID: NodeID = this.graph.nodes()[0],\n      seenLastStep: number = this.lastNodeVisit[seenLastID],\n      nodes = this.graph.neighbors(this.currentNodeID)\n\n    if (nodes) {\n      nodes.forEach((nodeID: NodeID) => {\n        if (seenLastStep > (this.lastNodeVisit[nodeID] || 0)) {\n          seenLastID = nodeID\n          seenLastStep = this.lastNodeVisit[seenLastID]\n        }\n      })\n    }\n\n    this.targetNodeID = seenLastID\n    this.buildNewPath(actor, levelMap)\n  }\n\n  private moveToTarget(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game,\n    firstTurn: boolean\n  ): CreatureEvent | undefined {\n    const nextPoint: Point | undefined = this.path.shift()\n\n    if (!nextPoint) {\n      if (firstTurn) {\n        this.path = []\n        return this.act(actor, levelMap, game, false)\n      } else {\n        return new Loiter().act(actor, levelMap, game)\n      }\n    } else if (\n      actor\n        .stageMemory(levelMap)\n        .at(nextPoint.x, nextPoint.y)\n        .tangible()\n    ) {\n      this.buildNewPath(actor, levelMap)\n\n      if (this.path.length) {\n        return this.act(actor, levelMap, game, false)\n      }\n    } else {\n      return new MoveEvent(game, levelMap, nextPoint)\n    }\n  }\n\n  private markNodeVisited(nodeID: NodeID): void {\n    this.lastNodeVisit[nodeID] = this.step\n  }\n\n  private newNodeId(): void {\n    this.i = String.fromCharCode(this.i.charCodeAt(0) + 1)\n  }\n}\n","import { PickUpItemsEvent, LevelMap } from '../../engine'\nimport { Ability, Creature, AICreature } from '../models/creature'\nimport { Game } from '../models/game'\nimport { GoToTileAI } from './internal'\nimport { AIItemPickedEvent } from './meta_ai'\nimport { CreatureEvent } from '../events/internal'\nimport { MemoryTile } from '../models/memory'\n\nexport class Picker extends GoToTileAI {\n  constructor() {\n    super((tile: MemoryTile) => !!tile.items)\n  }\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    if (actor.can(Ability.Inventory)) {\n      return super.act(actor, levelMap, game)\n    }\n  }\n\n  protected onReach(\n    actor: AICreature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    const tile = levelMap.creatureTile(actor)\n\n    if (!tile.items) {\n      throw 'Picker.act : nothing to pick up'\n    }\n\n    actor.ai.pushEvent(new AIItemPickedEvent(tile.items, game))\n\n    return new PickUpItemsEvent(tile, tile.items.bunch, game)\n  }\n}\n","import { Creature } from '../models/creature'\nimport { AI } from './internal'\nimport { StayEvent } from '../events/stay_event'\nimport { CreatureEvent } from '../events/internal'\nimport { LevelMap } from '../models/level_map'\n\nexport class SelfHealer extends AI {\n  public act(actor: Creature, levelMap: LevelMap): CreatureEvent | undefined {\n    if (actor.health.atMax) {\n      return\n    }\n\n    return new StayEvent(levelMap)\n  }\n}\n","import { AI } from './internal'\nimport { Creature, Ability, CreatureId } from '../models/creature'\nimport { Point, bresenham } from '../utils/utils'\nimport { MissileAttackEvent, GroupedItem } from '../../engine'\nimport { Game } from '../models/game'\nimport { LevelMap } from '../models/level_map'\nimport { Memory } from '../models/memory'\nimport { CreatureEvent, Reaction } from '../events/internal'\nimport { Item } from '../models/item'\n\nexport class Thrower extends AI {\n  public victim: Creature | undefined\n  public previousVictim: Creature | undefined\n  public missiles: GroupedItem<Item> | undefined\n\n  public act(\n    actor: Creature,\n    levelMap: LevelMap,\n    game: Game\n  ): CreatureEvent | undefined {\n    if (\n      !actor.can(Ability.Throwing) ||\n      !this.hasMissile(actor) ||\n      !this.canAttack(actor, levelMap, game)\n    ) {\n      return\n    }\n\n    let path: Point[] = []\n\n    if (!this.victim) {\n      throw 'Thrower.act called when there is no victim'\n    }\n\n    bresenham(\n      levelMap.creaturePos(actor),\n      levelMap.creaturePos(this.victim),\n      (x, y) => path.push(new Point(x, y))\n    )\n\n    return new MissileAttackEvent(\n      path,\n      game,\n      levelMap,\n      (reaction: Reaction) => {\n        if (reaction === Reaction.DIE) {\n          this.victim = undefined\n          this.previousVictim = undefined\n        }\n      }\n    )\n  }\n\n  private hasMissile(actor: Creature): boolean {\n    this.missiles = actor.missile\n    return this.missiles !== undefined\n  }\n\n  private canAttack(actor: Creature, levelMap: LevelMap, game: Game): boolean {\n    this.previousVictim = this.victim\n    this.victim = undefined\n\n    if (this.previousVictim) {\n      if (this.findWithId(actor, levelMap, this.previousVictim.id)) {\n        return true\n      }\n    }\n\n    return this.findCreature(actor, levelMap, creature =>\n      this.enemies(actor, creature)\n    )\n  }\n\n  private findWithId(\n    actor: Creature,\n    levelMap: LevelMap,\n    victimId: CreatureId\n  ): boolean {\n    return this.findCreature(\n      actor,\n      levelMap,\n      creature => victimId === creature.id\n    )\n  }\n\n  private findCreature(\n    actor: Creature,\n    levelMap: LevelMap,\n    condition: (creature: Creature) => boolean\n  ): boolean {\n    const memory = actor.stageMemory(levelMap),\n      pos = levelMap.creaturePos(actor)\n\n    this.withinView(memory, levelMap.creaturePos(actor), (point, tile) => {\n      const creature = tile.creature\n\n      if (\n        !this.victim &&\n        creature &&\n        condition(creature) &&\n        !this.obstacles(actor, pos, memory, point)\n      ) {\n        this.victim = levelMap.at(point.x, point.y).creature\n      }\n    })\n\n    return !!this.victim\n  }\n\n  private obstacles(\n    actor: Creature,\n    pos: Point,\n    memory: Memory,\n    target: Point\n  ): boolean {\n    let obstacles = false\n\n    bresenham(pos, target, (x, y) => {\n      obstacles = obstacles || memory.at(x, y).tangible(actor)\n    })\n\n    return obstacles\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Creature } from '../models/creature'\nimport { AddExperienceEvent } from './add_experience_event'\nimport { Game } from '../models/game'\nimport { LevelMap } from '../models/level_map'\nimport { Calculator } from '../lib/calculator'\nimport { HurtEvent } from './hurt_event'\nimport { DieReason } from './die_event'\nimport { Player } from '../models/player'\n\nexport class AttackEvent extends CreatureEvent {\n  constructor(\n    private victim: Creature,\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    return this.process(actor, false)\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    const reaction = this.process(player, true)\n\n    if (reaction === Reaction.DIE) {\n      player.on(new AddExperienceEvent(this.victim, this.levelMap, this.game))\n    }\n\n    return reaction\n  }\n\n  protected process(actor: Creature, isPlayer: boolean): Reaction {\n    const [reaction, damage] = this.hit(actor)\n\n    this.game.logger.attackLogger.melee(\n      damage,\n      actor,\n      this.victim,\n      reaction,\n      isPlayer\n    )\n\n    return reaction\n  }\n\n  protected hit(actor: Creature): [Reaction, number] {\n    if (Calculator.misses(actor.bodyControl, this.victim.bodyControl)) {\n      return [Reaction.DODGE, 0]\n    }\n\n    const hurtEvent = new HurtEvent(\n      Calculator.withCritical(actor.damages, actor.specie.critical),\n      DieReason.Attack,\n      this.levelMap,\n      this.game\n    )\n\n    return [this.victim.on(hurtEvent), hurtEvent.damage]\n  }\n}\n","import { Reaction } from './internal'\nimport { VisibleCreatureEvent } from './visible_creature_event'\nimport { Creature } from '../models/creature'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { Door } from '../models/tile'\n\nexport class CloseDoorEvent extends VisibleCreatureEvent {\n  constructor(private door: Door, levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    if (this.door.open) {\n      this.door.open = false\n      this.game.logger.doorLogger.close()\n    } else {\n      this.game.logger.doorLogger.alreadyClosed()\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import { Creature } from '../models/creature'\nimport { CreatureEvent, Reaction } from './internal'\nimport { Potion, Game } from '../../engine'\n\nexport class DrinkPotionEvent extends CreatureEvent {\n  constructor(private potion: Potion, private game: Game) {\n    super()\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    actor.removeItem(this.potion, 1)\n    this.potion.onDrink(this.game)\n    // TODO: Different messages for player and creatures\n    this.game.logger.drink(this.potion)\n    return Reaction.NOTHING\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Point } from '../utils/utils'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { ItemFlightTileEffect } from '../models/tile_effect'\nimport { ThrowEvent } from './throw_event'\nimport { Game } from '../models/game'\nimport { LevelMap } from '../models/level_map'\nimport { Missile } from '../models/item'\nimport { RemoveItemEvent } from './remove_item_event'\n\nexport class MissileAttackEvent extends CreatureEvent {\n  constructor(\n    private path: Point[],\n    private game: Game,\n    private levelMap: LevelMap,\n    private done: (reaction: Reaction) => void\n  ) {\n    super()\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    let missile = actor.missile\n\n    if (!missile) {\n      throw 'MissileAttackEvent called when actor has no missiles'\n    }\n\n    this.withMissile(actor, missile.item)\n\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    const missile = player.missile\n\n    if (!missile) {\n      throw 'MissileAttackEvent: slot has no items'\n    }\n\n    this.withMissile(player, missile.item)\n\n    player.on(new RemoveItemEvent(player.inventory.missileSlot, 1, this.game))\n    player.stuffWeight.subtract(missile.item.weight)\n\n    return Reaction.NOTHING\n  }\n\n  private withMissile(actor: Creature, missile: Missile): void {\n    let flightPath: Point[] = [],\n      victim: Creature | undefined\n\n    this.path.forEach(point => {\n      if (!victim) {\n        const tile = this.levelMap.at(point.x, point.y)\n        victim = tile.creature\n        flightPath.push(point)\n      }\n    })\n\n    this.game.effect = new ItemFlightTileEffect(missile, flightPath, () => {\n      if (victim) {\n        this.done(\n          actor.on(new ThrowEvent(victim, missile, this.levelMap, this.game))\n        )\n      } else {\n        this.done(Reaction.NOTHING)\n      }\n    })\n  }\n}\n","import { Game, GroupedItem, ItemsBunch, Tile } from '../../engine'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { Item } from '../models/item'\nimport { CreatureEvent, Reaction } from './internal'\n\nexport class PickUpItemsEvent extends CreatureEvent {\n  constructor(\n    private tile: Tile,\n    private items: GroupedItem<Item>[],\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    this.items.forEach(({ item, count }) => {\n      creature.addItem(item, count)\n    })\n\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    let tileItems: ItemsBunch<Item> | undefined = this.tile.items\n\n    if (tileItems === undefined) {\n      throw 'Failed to pick up items - tile has no items'\n    } else {\n      this.withTileItems(player, tileItems)\n    }\n\n    return Reaction.NOTHING\n  }\n\n  protected withTileItems(subject: Player, tileItems: ItemsBunch<Item>) {\n    this.items.forEach(({ item, count }) => {\n      subject.addItem(item, count)\n      subject.stuffWeight.add(item.weight * count)\n\n      this.game.logger.pickedUpItem(item, count)\n      tileItems.remove(item, count)\n    })\n  }\n}\n","import { PlayerEvent, Reaction } from './internal'\nimport { InventorySlot, Item, Game } from '../../engine'\nimport { Player } from '../models/player'\nimport { TakeOffItemEvent } from './take_off_item_event'\nimport { Armor } from '../models/item'\nimport { AddImpactEvent } from './add_impact_event'\n\nexport class PutOnItemEvent extends PlayerEvent {\n  constructor(\n    private slot: InventorySlot,\n    private item: Item,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    let inventory = player.inventory,\n      groupItem = inventory.findInBag(this.item)\n\n    if (groupItem === undefined) {\n      throw `Item ${\n        this.item.name\n      } can not be equipped - not found in inventory`\n    }\n\n    // TODO: assert that can't equip more than have in inventory\n    // TODO: assert can equip\n    if (this.slot.equipment) {\n      const reaction = player.on(new TakeOffItemEvent(this.slot, this.game))\n      if (reaction !== Reaction.NOTHING) {\n        return reaction\n      }\n    }\n\n    const count = this.slot.useSingleItem ? 1 : groupItem.count\n\n    player.removeItem(this.item, count)\n    this.slot.equip(this.item, count)\n    this.onPutOn(player, this.item)\n\n    this.game.logger.putOn(this.item)\n\n    return Reaction.NOTHING\n  }\n\n  private onPutOn(player: Player, item: Item): void {\n    if (item instanceof Armor) {\n      player.itemsProtections = player.itemsProtections.concat(item.protections)\n    }\n\n    item.impacts.forEach(impact => {\n      player.on(new AddImpactEvent(impact, item.name, this.game))\n    })\n  }\n}\n","import { CreatureEvent, Reaction } from './internal'\nimport { Creature } from '../models/creature'\nimport { ImpactType, Game } from '../../engine'\n\nexport class RemoveImpactEvent extends CreatureEvent {\n  constructor(\n    private impactType: ImpactType,\n    private game: Game,\n    private source: string | undefined = undefined\n  ) {\n    super()\n  }\n\n  public affectCreature(creature: Creature): Reaction {\n    // Different messages for player\n    if (this.source) {\n      creature.removeConstImpact(this.impactType, this.source)\n    } else {\n      creature.removeImpact(this.impactType)\n    }\n\n    return Reaction.NOTHING\n  }\n}\n","import { VisibleCreatureEvent } from './visible_creature_event'\nimport { Creature } from '../models/creature'\nimport { Player } from '../models/player'\nimport { withMatchingTile } from '../lib/post'\nimport { MoveEvent } from './move_event'\nimport { Point } from '../utils/utils'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { Resistance } from '../models/specie'\nimport { AITeleportationEvent } from '../ai/player_ai'\nimport { Reaction } from './internal'\n\n// TODO: Creature that teleports itself away\nexport class TeleportationEvent extends VisibleCreatureEvent {\n  constructor(levelMap: LevelMap, game: Game, private selfCast: boolean) {\n    super(levelMap, game)\n  }\n\n  public affectCreature(actor: Creature): Reaction {\n    if (this.playerSees(actor)) {\n      if (\n        actor.hasResistance(Resistance.TeleportationControl) ||\n        !this.teleport(actor)\n      ) {\n        this.game.logger.creatureNotTeleported(actor)\n      } else {\n        this.game.logger.creatureTeleported(actor)\n      }\n    } else {\n      this.teleport(actor)\n    }\n\n    // TODO: Add a message if player sees new position\n\n    return Reaction.NOTHING\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    if (player.hasResistance(Resistance.TeleportationControl)) {\n      if (!this.selfCast) {\n        this.game.logger.playerTeleportationCaused()\n      }\n\n      player.ai.pushEvent(new AITeleportationEvent(this.levelMap, this.game))\n      this.game.playerTurn = true\n    } else if (this.teleport(player)) {\n      if (!this.selfCast) {\n        this.game.logger.playerTeleported()\n      }\n    } else {\n      this.game.logger.playerNotTeleported()\n    }\n\n    return Reaction.NOTHING\n  }\n\n  protected teleport(actor: Creature): boolean {\n    let teleported = false\n\n    try {\n      withMatchingTile(\n        this.levelMap,\n        tile => tile.free(),\n        (x, y) => {\n          teleported = true\n          actor.on(new MoveEvent(this.game, this.levelMap, new Point(x, y)))\n        }\n      )\n    } catch {}\n\n    return teleported\n  }\n}\n","import { Player } from '../models/player'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { Trap } from '../models/tile'\nimport { Point } from '../utils/utils'\nimport { PlayerEvent, Reaction } from './internal'\n\nexport class UntrapEvent extends PlayerEvent {\n  constructor(\n    private trapPosition: Point,\n    private trap: Trap,\n    private levelMap: LevelMap,\n    private game: Game\n  ) {\n    super()\n  }\n\n  public affectPlayer(player: Player): Reaction {\n    this.trap.untrap(this.trapPosition, player, this.levelMap, this.game)\n    return Reaction.NOTHING\n  }\n}\n","import { Rect, Point, rand, twoDimArray, minUnsafe } from '../utils/utils'\nimport { min } from 'lodash'\n\nconst THICKNESS = 0\nconst RAY_TURNS = 60\nconst DELTA_ANGLE = Math.PI / (RAY_TURNS * 2)\n\nclass Room<T> extends Rect {\n  notCross(rect: Rect): boolean {\n    return (\n      rect.x - THICKNESS > this.x + this.w ||\n      rect.y - THICKNESS > this.y + this.h ||\n      rect.x + rect.w < this.x - THICKNESS ||\n      rect.y + rect.h < this.y - THICKNESS\n    )\n  }\n\n  pointWithin(): Point {\n    return new Point(\n      this.x + 1 + rand(this.w - 1),\n      this.y + 1 + rand(this.h - 1)\n    )\n  }\n\n  add(stage: T[][], walls: boolean[][], newRoomSpace: () => T): void {\n    let i: number = 0\n    while (i < this.w) {\n      let j: number = 0\n      while (j < this.h) {\n        stage[this.x + i][this.y + j] = newRoomSpace()\n        walls[this.x + i][this.y + j] = false\n        j++\n      }\n\n      i++\n    }\n  }\n}\n\nclass Road<T> extends Rect {\n  lined: boolean\n\n  constructor(x: number, y: number, w: number, h: number) {\n    super(x, y, w, h)\n    this.lined = (x >= w && y >= h) || (w >= x && h >= y)\n  }\n\n  add(stage: T[][], walls: boolean[][], newCorridor: () => T): void {\n    let [hx, hy, w] = this.horizontalLine()\n\n    let i = 0\n    while (i < w) {\n      if (walls[hx + i][hy]) {\n        stage[hx + i][hy] = newCorridor()\n      }\n      i += 1\n    }\n\n    let [vx, vy, h] = this.verticalLine()\n    let j = 0\n    while (j < h) {\n      if (walls[vx][vy + j]) {\n        stage[vx][vy + j] = newCorridor()\n      }\n      j += 1\n    }\n  }\n\n  horizontalLine(): [number, number, number] {\n    // x\n    // |\\\n    // .-x\n    if (this.lined)\n      return [\n        Math.min(this.x, this.w),\n        Math.max(this.y, this.h),\n        Math.abs(this.w - this.x),\n      ]\n    // .-x\n    // |/\n    // x\n    else\n      return [\n        Math.min(this.x, this.w),\n        Math.min(this.y, this.h),\n        Math.abs(this.w - this.x),\n      ]\n  }\n\n  verticalLine(): [number, number, number] {\n    // x\n    // |\\\n    // .-x\n    if (this.lined)\n      return [\n        Math.min(this.x, this.w),\n        Math.min(this.y, this.h),\n        Math.abs(this.h - this.y),\n      ]\n    // .-x\n    // |/\n    // x\n    else\n      return [\n        Math.min(this.x, this.w),\n        Math.min(this.y, this.h),\n        Math.abs(this.h - this.y),\n      ]\n  }\n}\n\nclass DungeonGenerator<T> {\n  rooms: Room<T>[]\n  roads: Road<T>[]\n\n  constructor(\n    protected maxX: number,\n    protected maxY: number,\n    private minSize: number,\n    private maxSize: number,\n    private roomsCount: number\n  ) {\n    let rooms: Room<T>[] = new Array(this.roomsCount)\n      .fill(undefined)\n      .map(_ => this.generateRoom())\n\n    this.rooms = this.normalize(this.ray(rooms))\n    this.roads = this.buildRoads(this.rooms)\n  }\n\n  private generateRoom(): Room<T> {\n    return new Room(\n      0,\n      0,\n      this.minSize + rand(this.maxSize - this.minSize),\n      this.minSize + rand(this.maxSize - this.minSize)\n    )\n  }\n\n  // Takes a room and tries to put it on a ray coming from (0, 0)\n  // until the room finds empty place for it.\n  private ray(rooms: Room<T>[]): Room<T>[] {\n    return rooms.reduce((pickedRooms: Room<T>[], currentRoom: Room<T>) => {\n      for (\n        let i = 0, angle = (rand(360) / 180) * Math.PI;\n        i < RAY_TURNS;\n        angle += DELTA_ANGLE, i++\n      ) {\n        // TODO: Build table with these values.\n        const cos: number = Math.cos(angle)\n        const sin: number = Math.sin(angle)\n        let l: number = 1\n        let dx: number = 0\n        let dy: number = 0\n\n        let roomToMove = new Room(\n          currentRoom.x,\n          currentRoom.y,\n          currentRoom.w,\n          currentRoom.h\n        )\n\n        while (Math.abs(dx) < this.maxX / 2 && Math.abs(dy) < this.maxY / 2) {\n          let ndx = Math.round(l * cos)\n          let ndy = Math.round(l * sin)\n\n          while (ndx === dx && ndy === dy) {\n            l += 1\n            ndx = Math.round(l * cos)\n            ndy = Math.round(l * sin)\n          }\n\n          roomToMove.move(ndx - dx, ndy - dy)\n          dx = ndx\n          dy = ndy\n\n          if (pickedRooms.every(room => roomToMove.notCross(room))) {\n            pickedRooms.push(roomToMove)\n            return pickedRooms\n          }\n        }\n      }\n\n      return pickedRooms\n    }, [])\n  }\n\n  private normalize(rooms: Room<T>[]): Room<T>[] {\n    if (rooms.length === 0) {\n      return rooms\n    }\n\n    const minX = minUnsafe(rooms.map(room => room.x)) - 1\n    rooms.forEach(room => {\n      room.move(-minX, 0)\n    })\n    rooms = rooms.filter((room: Room<T>) => room.x + room.w < this.maxX)\n\n    const minY = minUnsafe(rooms.map(room => room.y)) - 1\n    rooms.forEach(room => {\n      room.move(0, -minY)\n    })\n    return rooms.filter((room: Room<T>) => room.y + room.h < this.maxY)\n  }\n\n  private buildRoads(rooms: Room<T>[]): Road<T>[] {\n    let points: Point[] = rooms.map(room => {\n      return room.pointWithin()\n    })\n\n    const firstPoint = points.shift()\n\n    if (!firstPoint) {\n      throw 'Dungeon.buildRoads rooms array is empty'\n    }\n\n    let connectedPoints: Point[] = [firstPoint]\n    let roads: Road<T>[] = []\n\n    const distance = function(point1: Point, point2: Point): number {\n      // No need to calc square root since it's being used for comparison only.\n      return (point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2\n    }\n\n    while (points.length) {\n      let maybePoint = points.shift()\n      if (!maybePoint) {\n        throw 'Dungeon.buildRoads rooms array is empty'\n      }\n\n      let currentPoint: Point = maybePoint\n\n      let pointToConnect = connectedPoints[0]\n      let minDistance = distance(currentPoint, pointToConnect)\n\n      connectedPoints.forEach(point => {\n        const currentDistance = distance(point, currentPoint)\n        if (currentDistance < minDistance) {\n          pointToConnect = point\n          minDistance = currentDistance\n        }\n      })\n\n      connectedPoints.push(currentPoint)\n\n      roads.push(\n        new Road(\n          currentPoint.x,\n          currentPoint.y,\n          pointToConnect.x,\n          pointToConnect.y\n        )\n      )\n    }\n\n    return roads\n  }\n}\n\nexport default function<T>(\n  dimX: number,\n  dimY: number,\n  minSize: number,\n  maxSize: number,\n  roomsCount: number,\n  newRoomSpace: () => T,\n  newCorridor: () => T,\n  newWall: () => T\n): T[][] {\n  // TODO: Validate min or max size is lower than map's sizes\n  const dungeon = new DungeonGenerator<T>(\n    dimX,\n    dimY,\n    minSize,\n    maxSize,\n    roomsCount\n  )\n\n  let stage = twoDimArray(dimX, dimY, newWall)\n  let walls = twoDimArray(dimX, dimY, () => true)\n\n  for (let i = 0; i < dungeon.rooms.length; i++)\n    dungeon.rooms[i].add(stage, walls, newRoomSpace)\n  for (let i = 0; i < dungeon.roads.length; i++)\n    dungeon.roads[i].add(stage, walls, newCorridor)\n\n  return stage\n}\n","export enum Gender {\n  Neuter = 'neuter',\n  Female = 'female',\n  Male = 'male',\n}\n","export class Level {\n  public current: number = 1\n  public currentExperience: number = 0\n  public requiredExperience: number\n\n  private doneLeveling: boolean = false\n\n  constructor(private requires: number[]) {\n    this.requiredExperience = this.requires[0]\n  }\n\n  public add(exp: number): number[] {\n    if (this.doneLeveling) {\n      return []\n    }\n\n    this.currentExperience += exp\n\n    let levelUps = []\n\n    while (\n      !this.doneLeveling &&\n      this.currentExperience >= this.requiredExperience\n    ) {\n      this.levelUp()\n      levelUps.push(this.current)\n    }\n\n    return levelUps\n  }\n\n  protected levelUp(): void {\n    this.current += 1\n\n    let level = this.requires[this.current - 1]\n\n    if (level) {\n      this.currentExperience -= this.requiredExperience\n      this.requiredExperience = level\n    } else {\n      this.currentExperience = this.requiredExperience\n      this.doneLeveling = true\n    }\n  }\n}\n","import { random } from 'lodash'\n\nexport class Pool<Input, Output> {\n  private totalWeight: number = 0\n  private items: [number, (input: Input) => Output][] = []\n\n  constructor(items: [number, (input: Input) => Output][]) {\n    items.forEach(([weight, item]) => this.add(weight, item))\n  }\n\n  public add(weight: number, item: (input: Input) => Output): void {\n    if (weight < 1) {\n      throw `Item's weight is lower than 1`\n    }\n\n    this.items.push([weight, item])\n    this.totalWeight += Math.ceil(weight)\n  }\n\n  public pick(input: Input): Output {\n    if (this.items.length === 0) {\n      throw 'Tried to use empty pool'\n    }\n\n    let pick = random(this.totalWeight)\n\n    const found = this.items.find(([weight, item]) => {\n      pick -= weight\n\n      return pick <= 0\n    })\n\n    if (found !== undefined) {\n      return found[1](input)\n    }\n\n    throw 'Pool failed to pick anything'\n  }\n\n  public merge(pool: Pool<Input, Output>): Pool<Input, Output> {\n    let totalPool = new Pool<Input, Output>([])\n\n    this.items.forEach(([weight, item]) => totalPool.add(weight, item))\n    pool.items.forEach(([weight, item]) => totalPool.add(weight, item))\n\n    return totalPool\n  }\n}\n","import { withMatchingTile } from '../lib/post'\nimport { StairwayDown, StairwayUp, Tile } from './tile'\nimport { LevelMap } from './level_map'\nimport { Game } from './game'\nimport { Player } from './player'\n\nexport abstract class Dungeon {\n  protected levels: LevelMap[] = []\n\n  constructor() {}\n  public abstract enter(game: Game, player: Player): void\n  public abstract register(game: Game): void\n\n  protected addStairDown(map: LevelMap, adjustMapName: string): LevelMap {\n    return this.addStairs(map, new StairwayDown(map, adjustMapName))\n  }\n\n  protected addStairUp(map: LevelMap, adjustMapName: string): LevelMap {\n    return this.addStairs(map, new StairwayUp(map, adjustMapName))\n  }\n\n  private addStairs(map: LevelMap, tile: Tile): LevelMap {\n    withMatchingTile(\n      map,\n      tile => tile.free(),\n      (x, y) => {\n        map.setTile(x, y, tile)\n      }\n    )\n\n    return map\n  }\n}\n","import { ProfessionPicker } from './profession'\nimport { TileEffect } from './tile_effect'\nimport { LevelMap } from './level_map'\nimport { Logger } from './logger'\nimport { Player } from './player'\n\ntype MapGenerator = (name: string, game: Game) => LevelMap\n\nexport class Game {\n  public logger: Logger\n  public currentMap: LevelMap | undefined\n  public playerTurn: boolean = false\n  public running: boolean = false\n  public effect: TileEffect | null = null\n  public turns: number = 0\n\n  protected maps: Map<string, LevelMap | MapGenerator> = new Map()\n\n  constructor(\n    public player: Player,\n    public professionPicker: ProfessionPicker\n  ) {\n    this.logger = new Logger(player)\n  }\n\n  public turn(): void {\n    if (this.running || (this.player.ai.presenter && !this.effect)) {\n      return\n    }\n    this.running = true\n\n    this.mutexTurn()\n\n    this.running = false\n  }\n\n  protected mutexTurn(): void {\n    if (this.player.ai.runEvents()) {\n      return\n    }\n\n    if (!this.currentMap) {\n      throw 'mutexTurn: Map is undefined'\n    }\n\n    if (this.effect) {\n      this.player.rebuildVision(this.currentMap)\n      this.effect.patchMemory(this.player.stageMemory(this.currentMap))\n\n      if (this.effect.done()) {\n        this.effect.onDone()\n        this.effect = null\n      }\n    } else {\n      while (!this.player.dead && !this.playerTurn) {\n        this.levelMapTurn(this.currentMap)\n      }\n\n      this.player.rebuildVision(this.currentMap)\n    }\n  }\n\n  public getMap(name: string): LevelMap {\n    const levelMap = this.maps.get(name)\n\n    if (!levelMap) {\n      throw `Map ${name} is not found`\n    }\n\n    if (levelMap instanceof LevelMap) {\n      return levelMap\n    } else if (levelMap instanceof Function) {\n      const builtLevelMap = levelMap(name, this)\n      this.maps.set(name, builtLevelMap)\n      return builtLevelMap\n    } else {\n      throw `LevelMap with id ${name} is not found`\n    }\n  }\n\n  public addMap(name: string, generator: MapGenerator): void {\n    if (this.maps.has(name)) {\n      throw `Game.addMap: map ${name} already presence`\n    }\n\n    this.maps.set(name, generator)\n  }\n\n  private levelMapTurn(levelMap: LevelMap): void {\n    let timeline = levelMap.timeline\n\n    const actorId = timeline.next()\n\n    if (actorId === undefined) {\n      throw 'Timeline event is empty!'\n    }\n\n    const actor = levelMap.creatures.find(creature => actorId === creature.id)\n\n    if (actor) {\n      const speed = actor.act(levelMap, this)\n      this.turns += 1\n\n      // If they are still on a map\n      if (\n        speed &&\n        levelMap.creatures.find(creature => actorId === creature.id)\n      ) {\n        timeline.add(actorId, speed)\n      }\n    }\n  }\n}\n","import {\n  InventorySlot,\n  RightHandSlot,\n  LeftHandSlot,\n  ChestSlot,\n  MissileWeaponSlot,\n  MissileSlot,\n  BootsSlot,\n  HeadSlot,\n  AmuletSlot,\n  LeftFingerSlot,\n  RightFingerSlot,\n  GlovesSlot,\n  GauntletsSlot,\n  BeltSlot,\n  ToolsSlot,\n  CloakSlot,\n  BodyPart,\n} from './inventory_slot'\nimport { Item } from './item'\nimport { ItemsBunch, GroupedItem } from '../lib/bunch'\nimport { concat, compact } from 'lodash'\nimport { Material } from '../lib/material'\n\nexport class Inventory {\n  private bag: ItemsBunch<Item> = new ItemsBunch()\n\n  public headSlot = new HeadSlot(Material.flesh)\n  public amuletSlot = new AmuletSlot()\n  public cloakSlot = new CloakSlot()\n  public chestSlot = new ChestSlot(Material.flesh)\n  public rightHandSlot = new RightHandSlot(Material.flesh)\n  public leftHandSlot = new LeftHandSlot(Material.flesh)\n  public leftFingerSlot = new LeftFingerSlot()\n  public rightFingerSlot = new RightFingerSlot()\n  public glovesSlot = new GlovesSlot()\n  public gauntletsSlot = new GauntletsSlot()\n  public beltSlot = new BeltSlot()\n  public bootsSlot = new BootsSlot(Material.flesh)\n  public missileWeaponSlot = new MissileWeaponSlot()\n  public missileSlot = new MissileSlot()\n  public toolsSlot = new ToolsSlot()\n\n  get bodyParts(): BodyPart[] {\n    return [\n      this.headSlot,\n      this.rightHandSlot,\n      this.leftHandSlot,\n      this.chestSlot,\n      this.bootsSlot,\n    ]\n  }\n\n  public slots(): InventorySlot[] {\n    return [\n      this.headSlot,\n      this.amuletSlot,\n      this.cloakSlot,\n      this.chestSlot,\n      this.rightHandSlot,\n      this.leftHandSlot,\n      this.leftFingerSlot,\n      this.rightFingerSlot,\n      this.glovesSlot,\n      this.gauntletsSlot,\n      this.beltSlot,\n      this.bootsSlot,\n      this.missileWeaponSlot,\n      this.missileSlot,\n      this.toolsSlot,\n    ]\n  }\n\n  get allItems(): GroupedItem<Item>[] {\n    return concat(\n      this.cares(),\n      compact(this.slots().map(slot => slot.equipment))\n    )\n  }\n\n  get unarmoredSlotsCount(): number {\n    return [\n      this.headSlot,\n      this.chestSlot,\n      this.glovesSlot,\n      this.gauntletsSlot,\n      this.beltSlot,\n      this.bootsSlot,\n    ].filter((slot: InventorySlot) => !slot.equipment).length\n  }\n\n  public cares(): GroupedItem<Item>[] {\n    return this.bag.bunch\n  }\n\n  public findInBag(item: Item): GroupedItem<Item> | undefined {\n    return this.bag.find(item)\n  }\n\n  public putToBag(item: Item, count: number): void {\n    this.bag.put(item, count)\n  }\n\n  public removeFromBag(item: Item, count: number): void {\n    this.bag.remove(item, count)\n  }\n}\n","import { Tile, Wall, TileVisitor } from './tile'\nimport { Creature, twoDimArray, ItemsBunch } from '../../engine'\nimport { Mapped } from '../utils/utils'\nimport { Item } from './item'\n\nexport class MemoryTile {\n  public visible: boolean = false\n  public degree: number = 0\n  public seen: boolean = false\n  public effect?: string\n\n  constructor(public tile: Tile) {}\n\n  get items(): ItemsBunch<Item> | undefined {\n    return this.tile.items\n  }\n\n  get creature(): Creature | undefined {\n    return this.tile.creature\n  }\n\n  public see(tile: Tile, degree: number) {\n    this.visible = true\n    this.degree = degree\n    this.seen = true\n    this.tile = tile.clone()\n  }\n\n  public tangible(actor?: Creature): boolean {\n    return this.seen && !this.tile.passibleThrough(actor)\n  }\n\n  public reset(): void {\n    this.visible = false\n    this.effect = undefined\n    this.tile.creature = undefined\n  }\n\n  public visit(tileVisitor: TileVisitor): void {\n    this.tile.visit(tileVisitor)\n  }\n}\n\nexport class Memory extends Mapped<MemoryTile> {\n  constructor(width: number, height: number) {\n    const baseTile = new Wall()\n    super(twoDimArray(width, height, () => new MemoryTile(baseTile)))\n  }\n\n  public resetVisible(): void {\n    this.each(tile => tile.reset())\n  }\n}\n","import { concat, cloneDeep, sumBy } from 'lodash'\nimport { Game, GroupedItem, Inventory, LevelMap, PlayerAI } from '../../engine'\nimport { AfterEvent } from '../events/after_event'\nimport { PlayerEvent, Reaction } from '../events/internal'\nimport { Level } from '../lib/level'\nimport {\n  CapacityLimitStat,\n  Stat,\n  StrengthStat,\n  DexterityStat,\n  ConstitutionStat,\n} from '../lib/stat'\nimport { Item, Missile, Protection, ProtectionType } from './item'\nimport { Damage } from '../lib/damage'\nimport { Profession } from './profession'\nimport { Resistance, PlayerSpecie } from './specie'\nimport { Creature } from './creature'\nimport { KillStat } from '../utils/kill_stat'\n\nexport class Player extends Creature<PlayerSpecie> {\n  public professions: Profession[] = []\n  public inventory: Inventory = new Inventory()\n\n  public itemsProtections: Protection[] = []\n  public itemsResistances: Resistance[] = []\n\n  public stuffWeight: Stat\n  public carryingCapacity: CapacityLimitStat\n\n  public killStat: KillStat = new KillStat()\n\n  // Main attributes\n  public strength: StrengthStat\n  public dexterity: DexterityStat\n  public constitution: ConstitutionStat\n  public intelligence: Stat\n  public wisdom: Stat\n  public charisma: Stat\n\n  constructor(\n    public level: Level,\n    public ai: PlayerAI,\n    specie: PlayerSpecie,\n    strengthValue: number,\n    dexterityValue: number,\n    constitutionValue: number\n  ) {\n    super(specie)\n\n    this.strength = new StrengthStat(strengthValue)\n    this.dexterity = new DexterityStat(dexterityValue)\n    this.constitution = new ConstitutionStat(constitutionValue)\n    this.intelligence = new Stat(10)\n    this.wisdom = new Stat(2)\n    this.charisma = new Stat(2)\n\n    this.stuffWeight = new Stat(0)\n    this.carryingCapacity = new CapacityLimitStat(\n      this.strength.current,\n      this.constitution.current\n    )\n  }\n\n  public act(levelMap: LevelMap, game: Game): number {\n    this.statsTurn()\n    this.visionMask(levelMap)\n\n    const command = this.ai.act(this, levelMap, game)\n    if (command) {\n      this.on(command)\n    }\n    this.on(new AfterEvent(levelMap, game))\n\n    return this.speed\n  }\n\n  public rebuildVision(levelMap: LevelMap): void {\n    this.visionMask(levelMap)\n  }\n\n  public on(event: PlayerEvent): Reaction {\n    return event.affectPlayer(this)\n  }\n\n  get missile(): GroupedItem<Missile> | undefined {\n    // TODO: Validate item on slot\n    return this.inventory.missileSlot.equipment\n  }\n\n  get inventoryItems(): GroupedItem<Item>[] {\n    return this.inventory.allItems\n  }\n\n  public addItem(item: Item, count: number): void {\n    this.inventory.putToBag(item, count)\n  }\n\n  public removeItem(item: Item, count: number): void {\n    this.inventory.removeFromBag(item, count)\n  }\n\n  get weightWithCarryings(): number {\n    return (\n      this.specie.weight +\n      sumBy(this.inventory.allItems, ({ item, count }) => item.weight * count)\n    )\n  }\n\n  get bodyControl(): number {\n    return this.specie.bodyControl + this.dexterity.bodyControlAdjustment\n  }\n\n  get throwDamages(): Damage[] {\n    const dexterityAdjustment = this.dexterity.missileAdjustment\n\n    return concat(this.specie.throwingDamages, this.missileItemsDamages()).map(\n      (damage: Damage) => {\n        let dmg = cloneDeep(damage)\n        dmg.extra += dexterityAdjustment\n        return dmg\n      }\n    )\n  }\n\n  get damages(): Damage[] {\n    const strengthAdjustment = this.strength.meleeAdjustment\n\n    return concat(this.specie.damages, this.meleeItemsDamages()).map(\n      (damage: Damage) => {\n        let dmg = cloneDeep(damage)\n        dmg.extra += strengthAdjustment\n        return dmg\n      }\n    )\n  }\n\n  get protections(): Protection[] {\n    const perEmptySlotArmor = 1\n    return concat(this.specie.protections, this.itemsProtections, [\n      {\n        type: ProtectionType.Unarmored,\n        value: perEmptySlotArmor * this.inventory.unarmoredSlotsCount,\n      },\n    ])\n  }\n\n  get resistances(): Resistance[] {\n    return concat(this.specie.resistances, this.itemsResistances)\n  }\n\n  protected meleeItemsDamages(): Damage[] {\n    const rightHandEq = this.inventory.rightHandSlot.equipment,\n      leftHandEq = this.inventory.leftHandSlot.equipment\n\n    // TODO: Default damage\n    return concat(\n      rightHandEq ? rightHandEq.item.damages : [],\n      leftHandEq ? leftHandEq.item.damages : []\n    )\n  }\n\n  protected missileItemsDamages(): Damage[] {\n    const missileEq = this.inventory.missileSlot.equipment,\n      missileWeaponEq = this.inventory.missileWeaponSlot.equipment\n\n    // TODO: Default damage\n    return concat(\n      // Can throw literally anything, so damage might be undefined\n      missileEq ? missileEq.item.damages || [] : [],\n      missileWeaponEq ? missileWeaponEq.item.damages : []\n    )\n  }\n}\n","import { Player } from './player'\n\nimport { includes, sample } from 'lodash'\nimport { Game } from './game'\n\nexport enum TalentStatus {\n  Available,\n  Completed,\n  Unavailable,\n}\n\nexport abstract class Talent {\n  constructor(\n    public readonly name: string,\n    public readonly depth: number,\n    public rank: number,\n    public readonly maxRank: number\n  ) {}\n\n  protected abstract onObtain(game: Game): void\n\n  public upgrade(game: Game): void {\n    this.rank += 1\n    this.onObtain(game)\n  }\n\n  public status(profession: Profession): TalentStatus {\n    if (this.rank === this.maxRank) {\n      return TalentStatus.Completed\n    } else if (this.depth * profession.depthCost > profession.points) {\n      return TalentStatus.Unavailable\n    } else {\n      return TalentStatus.Available\n    }\n  }\n}\n\nexport abstract class Profession {\n  abstract get depthCost(): number\n\n  constructor(\n    public readonly id: number,\n    public readonly name: string,\n    public level: number = 1,\n    public points: number = 0,\n    public talents: Talent[]\n  ) {}\n\n  abstract get grid(): (Talent | undefined)[][]\n}\n\nexport class ProfessionPicker {\n  constructor(\n    private pool: Profession[],\n    private maxLevel: number,\n    private maxTaken: number\n  ) {}\n\n  public available(player: Player): Profession[] {\n    let professions: Profession[] = []\n    let pickedProfession: Profession | undefined\n\n    if (this.canUpdate(player)) {\n      pickedProfession = this.updatableProfession(player)\n    } else if (this.canTakeNewProfession(player)) {\n      pickedProfession = this.newFromPool(player)\n    }\n\n    if (pickedProfession !== undefined) {\n      professions.push(pickedProfession)\n    }\n\n    if (this.canTakeNewProfession(player)) {\n      pickedProfession = this.newFromPool(\n        player,\n        pickedProfession && pickedProfession.id\n      )\n    } else if (this.canUpdate(player)) {\n      pickedProfession = this.updatableProfession(\n        player,\n        pickedProfession && pickedProfession.id\n      )\n    }\n\n    if (pickedProfession !== undefined) {\n      professions.push(pickedProfession)\n    }\n\n    return professions\n  }\n\n  protected canUpdate(player: Player): boolean {\n    return player.professions.some(\n      profession => profession.level < this.maxLevel\n    )\n  }\n\n  protected updatableProfession(\n    player: Player,\n    excludeId: number | undefined = undefined\n  ): Profession | undefined {\n    return sample(\n      player.professions.filter(profession => {\n        return excludeId !== profession.id\n      })\n    )\n  }\n\n  protected canTakeNewProfession(player: Player): boolean {\n    return (\n      player.professions.length < this.maxTaken &&\n      this.pool.length > player.professions.length\n    )\n  }\n\n  protected newFromPool(\n    player: Player,\n    excludeId: number | undefined = undefined\n  ): Profession | undefined {\n    const excluding = player.professions.map(profession => profession.id)\n\n    if (excludeId !== undefined) {\n      excluding.push(excludeId)\n    }\n\n    return sample(\n      this.pool.filter(profession => !includes(excluding, profession.id))\n    )\n  }\n}\n","import { SingleItemUseListingPresenter } from './items_listing_presenter'\n\nexport class BagPresenter extends SingleItemUseListingPresenter {\n  public readonly title: string = 'Сумка'\n\n  protected initPositions(): void {\n    this.positions = this.player.inventory.cares()\n  }\n\n  public withItem(): void {\n    this.endTurn()\n  }\n}\n","import {\n  CharacterInfoPresenter,\n  CharacterInfoPage,\n} from './character_info_presenter'\n\nexport class BaseInfoPresenter extends CharacterInfoPresenter {\n  get page(): CharacterInfoPage {\n    return CharacterInfoPage.Base\n  }\n}\n","import { DrinkPotionEvent, GroupedItem } from '../../engine'\nimport { ItemGroup, Potion } from '../models/item'\nimport { SingleItemUseListingPresenter } from './items_listing_presenter'\n\nexport class DrinkPresenter extends SingleItemUseListingPresenter {\n  public readonly title: string = 'Что выпить?'\n\n  protected initPositions(): void {\n    this.positions = this.player.inventory\n      .cares()\n      .filter(itemGroup => itemGroup.item.group === ItemGroup.Potion)\n  }\n\n  public withItem({ item }: GroupedItem<Potion>): void {\n    this.player.on(new DrinkPotionEvent(item, this.game))\n    this.endTurn()\n  }\n}\n","import { MultipleItemUseListingPresenter } from './items_listing_presenter'\nimport { GroupedItem } from '../lib/bunch'\nimport { Item } from '../models/item'\nimport { DropItemsEvent } from '../events/drop_items_event'\n\nexport class DropItemsPresenter extends MultipleItemUseListingPresenter {\n  public readonly title: string = 'Что положить?'\n\n  protected initPositions(): void {\n    this.positions = this.player.inventory.cares()\n  }\n\n  public withItems(items: GroupedItem<Item>[]): void {\n    if (items.length) {\n      this.player.on(new DropItemsEvent(this.tile, items, this.game))\n      this.endTurn()\n    } else {\n      this.goIdle()\n    }\n  }\n}\n","import {\n  CharacterInfoPresenter,\n  CharacterInfoPage,\n} from './character_info_presenter'\nimport { Gender, Color } from '../../engine'\n\nexport class HistoryInfoPresenter extends CharacterInfoPresenter {\n  get page(): CharacterInfoPage {\n    return CharacterInfoPage.History\n  }\n\n  get name(): string {\n    return this.player.name\n  }\n\n  get weight(): number {\n    return this.specie.weight\n  }\n\n  get height(): number {\n    return this.specie.height\n  }\n\n  get gender(): Gender {\n    return this.specie.gender\n  }\n\n  get eyeColor(): Color {\n    return this.specie.eyeColor\n  }\n\n  get hairColor(): Color {\n    return this.specie.hairColor\n  }\n\n  get skinColor(): Color {\n    return this.specie.skinColor\n  }\n\n  get turns(): number {\n    return this.game.turns\n  }\n}\n","import { PresenterType } from './internal'\n\nimport { LevelMap, Game, IdlePresenter } from '../../engine'\nimport { PickPointPresenter } from './pick_point_presenter'\n\nexport enum LookPresenterVisibility {\n  See,\n  Recall,\n  Hidden,\n}\n\nexport class LookPresenter extends PickPointPresenter<\n  LookPresenterVisibility,\n  string\n> {\n  constructor(levelMap: LevelMap, game: Game) {\n    super(levelMap, game, '_', target => this.memory.inRange(target))\n  }\n\n  get type(): PresenterType {\n    return PresenterType.Look\n  }\n\n  get title(): LookPresenterVisibility {\n    if (this.memoryTile.visible) {\n      return LookPresenterVisibility.See\n    } else if (this.memoryTile.seen) {\n      return LookPresenterVisibility.Recall\n    } else {\n      return LookPresenterVisibility.Hidden\n    }\n  }\n\n  get body(): string[] {\n    let messages = []\n\n    if (this.memoryTile.creature) {\n      if (this.memoryTile.creature.id === this.player.id) {\n        messages.push('Это я')\n      } else {\n        messages.push(`Это ${this.memoryTile.creature.name}`)\n      }\n    }\n\n    if (this.memoryTile.items) {\n      switch (this.memoryTile.items.bunch.length) {\n        case 0:\n          break\n        case 1:\n          messages.push(`Лежит ${this.memoryTile.items.bunch[0].item.name}`)\n          break\n        default:\n          messages.push('Лежит несколько предметов')\n      }\n    }\n\n    return messages\n  }\n\n  protected close(): void {\n    this.redirect(new IdlePresenter(this.levelMap, this.game))\n  }\n}\n","import {\n  Item,\n  PickUpItemsEvent,\n  MultipleItemUseListingPresenter,\n} from '../../engine'\nimport { GroupedItem } from '../lib/bunch'\n\nexport class PickUpPresenter extends MultipleItemUseListingPresenter {\n  public readonly title: string = 'Что поднять?'\n\n  protected initPositions(): void {\n    const items = this.tile.items\n\n    if (items === undefined) {\n      throw `Failed to show pick up dialog - tile has no items`\n    }\n\n    this.positions = items.bunch.map(itemGroup => {\n      return { item: itemGroup.item, count: itemGroup.count }\n    })\n  }\n\n  public withItems(items: GroupedItem<Item>[]): void {\n    // TODO: Validate items are part of positions\n    this.player.on(new PickUpItemsEvent(this.tile, items, this.game))\n    this.endTurn()\n  }\n}\n","import { PresenterType, Presenter } from './internal'\nimport { Profession } from '../models/profession'\nimport { TalentsPickingPresenter } from './talents_picking_presenter'\nimport { Game, LevelMap } from '../../engine'\n\nexport class ProfessionPickingPresenter extends Presenter {\n  public readonly options: Profession[]\n\n  constructor(public readonly level: number, levelMap: LevelMap, game: Game) {\n    super(levelMap, game)\n    this.options = this.game.professionPicker.available(this.player)\n  }\n\n  get type(): PresenterType {\n    return PresenterType.ProfessionPicking\n  }\n\n  public pickProfession(pickedProfession: Profession) {\n    let playerProfession = this.player.professions.find(\n      profession => profession.id === pickedProfession.id\n    )\n\n    if (!playerProfession) {\n      this.player.professions.push(pickedProfession)\n    }\n\n    pickedProfession.level += 1\n\n    this.redirect(\n      new TalentsPickingPresenter(this.level, this.levelMap, this.game)\n    )\n  }\n}\n","import { GroupedItem } from '../lib/bunch'\nimport { SingleItemUseListingPresenter } from './items_listing_presenter'\nimport { Item } from '../models/item'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { EquipmentPresenter } from './equipment_presenter'\n\nexport class PutOnItemsPresenter extends SingleItemUseListingPresenter {\n  public readonly title: string = 'Что надеть?'\n\n  constructor(\n    private onWithItem: (itemGroup: GroupedItem<Item>) => void,\n    public positions: GroupedItem<Item>[],\n    levelMap: LevelMap,\n    game: Game\n  ) {\n    super(levelMap, game)\n  }\n\n  protected initPositions(): void {}\n\n  public withItem(itemGroup: GroupedItem<Item>): void {\n    this.onWithItem(itemGroup)\n  }\n\n  public close(): void {\n    this.redirect(new EquipmentPresenter(this.levelMap, this.game))\n  }\n}\n","import { PresenterType } from './internal'\nimport { LevelMap } from '../models/level_map'\nimport { Game } from '../models/game'\nimport { PickPointPresenter } from './pick_point_presenter'\nimport { MoveEvent } from '../events/move_event'\n\nexport class TeleportationPresenter extends PickPointPresenter<\n  string,\n  undefined\n> {\n  constructor(levelMap: LevelMap, game: Game) {\n    super(\n      levelMap,\n      game,\n      'x',\n      ({ x, y }) =>\n        levelMap.at(x, y).passibleThrough(this.player) &&\n        this.memory.at(x, y).seen\n    )\n  }\n\n  get type(): PresenterType {\n    return PresenterType.Teleportation\n  }\n\n  get title(): string {\n    return 'Выберите зону телепортации'\n  }\n\n  get body(): undefined[] {\n    return []\n  }\n\n  protected close(): void {\n    if (this.targetPos.eq(this.levelMap.creaturePos(this.player))) {\n      this.game.logger.playerTeleportedWhereTheyWere()\n    } else {\n      this.player.on(new MoveEvent(this.game, this.levelMap, this.targetPos))\n    }\n\n    this.endTurn()\n  }\n}\n","import { Point, twoDimArray, Mapped } from './utils'\n\nimport { sample } from 'lodash'\n\nconst FIRST_STEP: number = 1\n\nexport const leePath = function<Tile>(\n  map: Mapped<Tile>,\n  pos: Point,\n  tangible: (tile: Tile) => boolean,\n  destination: (point: Point, tile: Tile) => boolean,\n  randomDestination: boolean = false\n): Point[] {\n  let stageMemory: number[][] = twoDimArray(map.width, map.height, () => -1)\n  let pointsToVisit: Point[] = []\n  let pointsToCheck: Point[] = [pos]\n\n  let step = 0\n  while (pointsToCheck.length && !pointsToVisit.length) {\n    let wavePoints: Point[] = []\n\n    pointsToCheck.forEach((point: Point) => {\n      if (!map.inRange(point)) {\n        return\n      }\n\n      const tile = map.at(point.x, point.y)\n      // TODO: Compare, current value might be lower\n      if (tangible(tile) || stageMemory[point.x][point.y] !== -1) {\n        return\n      }\n\n      stageMemory[point.x][point.y] = step\n      if (destination(point, tile)) {\n        pointsToVisit.push(point)\n      } else {\n        point.wrappers().forEach(dist => wavePoints.push(dist))\n      }\n    })\n    step++\n\n    pointsToCheck = wavePoints\n  }\n\n  if (pointsToVisit.length) {\n    // TODO: Remove this check\n    let randomPointToVisit = sample(pointsToVisit)\n    if (randomDestination && randomPointToVisit) {\n      return buildRoad(randomPointToVisit, stageMemory)\n    } else {\n      return buildRoad(pointsToVisit[0], stageMemory)\n    }\n  } else {\n    return []\n  }\n}\n\nconst buildRoad = function(point: Point, stageMemory: number[][]): Point[] {\n  let lastPoint = point\n  let chain = [lastPoint]\n\n  let delta: Point | undefined\n\n  while (stageMemory[lastPoint.x][lastPoint.y] !== FIRST_STEP) {\n    delta = Point.dxy.find(\n      (dp): boolean => {\n        return (\n          stageMemory[lastPoint.x + dp.x] &&\n          stageMemory[lastPoint.x + dp.x][lastPoint.y + dp.y] ===\n            stageMemory[lastPoint.x][lastPoint.y] - 1\n        )\n      }\n    )\n\n    if (delta === undefined) {\n      return []\n    }\n\n    lastPoint = lastPoint.add(delta)\n\n    chain.unshift(lastPoint)\n  }\n\n  return chain\n}\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuOption.vue?vue&type=style&index=0&id=5bcbc7d6&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuOption.vue?vue&type=style&index=0&id=5bcbc7d6&lang=scss&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttributesSelectionMenu.vue?vue&type=style&index=0&id=08bdb93c&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttributesSelectionMenu.vue?vue&type=style&index=0&id=08bdb93c&lang=scss&scoped=true&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scene.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scene.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Title.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--1-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--1-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Title.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../node_modules/ts-loader/index.js??ref--14-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuOption.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/ts-loader/index.js??ref--14-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuOption.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nexport default Vue.extend({\n  name: 'MenuOption',\n  props: ['char', 'name', 'separator']\n})\n","import { render, staticRenderFns } from \"./MenuOption.vue?vue&type=template&id=5bcbc7d6&scoped=true&lang=pug&\"\nimport script from \"./MenuOption.vue?vue&type=script&lang=ts&\"\nexport * from \"./MenuOption.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MenuOption.vue?vue&type=style&index=0&id=5bcbc7d6&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5bcbc7d6\",\n  null\n  \n)\n\ncomponent.options.__file = \"MenuOption.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"menu-option\",class:{ \"-separator\": _vm.separator }},[_vm._v(\"[\"),_c('span',{staticClass:\"char\",domProps:{\"textContent\":_vm._s(_vm.char)}}),_vm._v(\"]\\n\"+_vm._s(_vm.name))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChooseRaceMenu.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChooseRaceMenu.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport MenuOption from '../MenuOption.vue'\n\nimport { Gender, dwarfRace, humanRace } from 'src/onisun'\n\nexport default Vue.extend({\n  name: 'ChooseRaceMenu',\n  props: ['menu'],\n  components: {\n    MenuOption\n  },\n  methods: {\n    onEvent(event: KeyboardEvent) {\n      switch (event.key.toUpperCase()) {\n      case 'H':\n        return this.menu.withRace(humanRace)\n      case 'D':\n        return this.menu.withRace(dwarfRace)\n      case '*':\n        return this.menu.random()\n      case '=':\n        return this.menu.back()\n      }\n    }\n  }\n})\n","import { render, staticRenderFns } from \"./ChooseRaceMenu.vue?vue&type=template&id=dbd0c452&lang=pug&\"\nimport script from \"./ChooseRaceMenu.vue?vue&type=script&lang=ts&\"\nexport * from \"./ChooseRaceMenu.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ChooseRaceMenu.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"subtitle\"},[_vm._v(\"You are \"+_vm._s(_vm.menu.gender)+\". Choose a race:\")]),_c('div',{staticClass:\"menu-options\"},[_c('MenuOption',{attrs:{\"char\":\"H\",\"name\":\"Human\"}}),_c('MenuOption',{attrs:{\"char\":\"D\",\"name\":\"Dwarf\"}}),_c('MenuOption',{attrs:{\"char\":\"*\",\"name\":\"Random\",\"separator\":true}}),_c('MenuOption',{attrs:{\"char\":\"=\",\"name\":\"Back\",\"separator\":true}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChooseGenderMenu.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChooseGenderMenu.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport MenuOption from '../MenuOption.vue'\n\nimport { Gender } from 'src/onisun'\n\nexport default Vue.extend({\n  name: 'ChooseGenderMenu',\n  props: ['menu'],\n  components: {\n    MenuOption\n  },\n  methods: {\n    onEvent(event: KeyboardEvent) {\n      switch (event.key.toUpperCase()) {\n      case 'M':\n        return this.menu.withGender(Gender.Male)\n      case 'F':\n        return this.menu.withGender(Gender.Female)\n      case '*':\n        return this.menu.random()\n      case '=':\n        return this.menu.back()\n      }\n    }\n  }\n})\n","import { render, staticRenderFns } from \"./ChooseGenderMenu.vue?vue&type=template&id=75cd738d&lang=pug&\"\nimport script from \"./ChooseGenderMenu.vue?vue&type=script&lang=ts&\"\nexport * from \"./ChooseGenderMenu.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"ChooseGenderMenu.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"subtitle\"},[_vm._v(\"Choose a gender:\")]),_c('div',{staticClass:\"menu-options\"},[_c('MenuOption',{attrs:{\"char\":\"M\",\"name\":\"Male\"}}),_c('MenuOption',{attrs:{\"char\":\"F\",\"name\":\"Female\"}}),_c('MenuOption',{attrs:{\"char\":\"*\",\"name\":\"Random\",\"separator\":true}}),_c('MenuOption',{attrs:{\"char\":\"=\",\"name\":\"Back\",\"separator\":true}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport MenuOption from '../MenuOption.vue'\n\nexport default Vue.extend({\n  name: 'MainMenu',\n  props: ['menu'],\n  components: {\n    MenuOption\n  },\n  methods: {\n    onEvent(event: KeyboardEvent) {\n      switch (event.key.toUpperCase()) {\n      case 'N':\n        return this.menu.newGame()\n      }\n    }\n  }\n})\n","import { render, staticRenderFns } from \"./MainMenu.vue?vue&type=template&id=346377f2&lang=pug&\"\nimport script from \"./MainMenu.vue?vue&type=script&lang=ts&\"\nexport * from \"./MainMenu.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"MainMenu.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"menu-options\"},[_c('MenuOption',{attrs:{\"char\":\"N\",\"name\":\"New game\"}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttributesMenu.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttributesMenu.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport MenuOption from '../MenuOption.vue'\n\nexport default Vue.extend({\n  name: 'AttributesMenu',\n  props: ['menu'],\n  components: {\n    MenuOption\n  },\n  methods: {\n    onEvent(event: KeyboardEvent) {\n      switch (event.key.toUpperCase()) {\n      case 'M':\n        return this.menu.manually()\n      case '=':\n        return this.menu.back()\n      }\n    }\n  }\n})\n","import { render, staticRenderFns } from \"./AttributesMenu.vue?vue&type=template&id=1191359e&lang=pug&\"\nimport script from \"./AttributesMenu.vue?vue&type=script&lang=ts&\"\nexport * from \"./AttributesMenu.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"AttributesMenu.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"subtitle\"},[_vm._v(\"You are \"+_vm._s(_vm.menu.gender)+\" \"+_vm._s(_vm.menu.race.name)+\". Choose your attributes:\")]),_c('div',{staticClass:\"menu-options\"},[_c('MenuOption',{attrs:{\"char\":\"*\",\"name\":\"Random\"}}),_c('MenuOption',{attrs:{\"char\":\"M\",\"name\":\"Manually\"}}),_c('MenuOption',{attrs:{\"char\":\"=\",\"name\":\"Back\",\"separator\":true}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttributesSelectionMenu.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--14-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttributesSelectionMenu.vue?vue&type=script&lang=ts&\"","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nimport MenuOption from '../MenuOption.vue'\n\nimport { PrimaryAttributes } from 'src/onisun';\n\n// TODO: Confirm selection\n\nexport default Vue.extend({\n  name: 'AttributesSelectionMenu',\n  props: ['menu'],\n  data() {\n    return {\n      points: 200,\n      selectedAttributes: {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0,\n      } as PrimaryAttributes,\n      attributeNames: this.menu.attributeNames\n    }\n  },\n  components: {\n    MenuOption\n  },\n  methods: {\n    onEvent(event: KeyboardEvent) {\n      switch (event.key) {\n        case 'a':\n          return this.decrease(this.attributeNames[0])\n        case 'A':\n          return this.increase(this.attributeNames[0])\n\n        case 'b':\n          return this.decrease(this.attributeNames[1])\n        case 'B':\n          return this.increase(this.attributeNames[1])\n\n        case 'c':\n          return this.decrease(this.attributeNames[2])\n        case 'C':\n          return this.increase(this.attributeNames[2])\n\n        case 'd':\n          return this.decrease(this.attributeNames[3])\n        case 'D':\n          return this.increase(this.attributeNames[3])\n\n        case 'e':\n          return this.decrease(this.attributeNames[4])\n        case 'E':\n          return this.increase(this.attributeNames[4])\n\n        case 'f':\n          return this.decrease(this.attributeNames[5])\n        case 'F':\n          return this.increase(this.attributeNames[5])\n\n        case 'R':\n        case 'r':\n          return this.menu.ready()\n        case '=':\n          return this.menu.back()\n      }\n    },\n    attributeModifier(attribute: number): string {\n      if (attribute === 0) {\n        return '–'\n      } else if (attribute > 0) {\n        return `+${attribute}`\n      } else {\n        return attribute.toString()\n      }\n    },\n    keys(index: number): string {\n      return [\n        'aA',\n        'bB',\n        'cC',\n        'dD',\n        'eE',\n        'fF',\n      ][index]\n    },\n    totalAttribute(attributeName: string): number {\n      return this.menu.baseAttributes[attributeName] + this.selectedAttributes[attributeName]\n    },\n    canDecrease(attributeName: string): boolean {\n      return this.selectedAttributes[attributeName] > 0\n    },\n    canIncrease(attributeName: string): boolean {\n      return this.points >= this.totalAttribute(attributeName)\n    },\n    increase(attributeName: string) {\n      if (this.canIncrease(attributeName)) {\n        this.points -= this.totalAttribute(attributeName)\n        this.selectedAttributes[attributeName] += 1\n      }\n    },\n    decrease(attributeName: string) {\n      if (this.canDecrease(attributeName)) {\n        this.selectedAttributes[attributeName] -= 1\n        this.points += this.totalAttribute(attributeName)\n      }\n    }\n  }\n})\n","import { render, staticRenderFns } from \"./AttributesSelectionMenu.vue?vue&type=template&id=08bdb93c&scoped=true&lang=pug&\"\nimport script from \"./AttributesSelectionMenu.vue?vue&type=script&lang=ts&\"\nexport * from \"./AttributesSelectionMenu.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./AttributesSelectionMenu.vue?vue&type=style&index=0&id=08bdb93c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08bdb93c\",\n  null\n  \n)\n\ncomponent.options.__file = \"AttributesSelectionMenu.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"subtitle\"},[_vm._v(\"Choose attributes\")]),_c('table',[_c('thead',[_c('tr',{staticClass:\"attribute-row -head\"},[_c('th'),_c('th',{staticClass:\"name\"},[_vm._v(_vm._s(_vm._f(\"t\")('name','presenters.primaryAttributeSelection')))]),_c('th',{staticClass:\"racial\"},[_vm._v(_vm._s(_vm._f(\"t\")('racial','presenters.primaryAttributeSelection')))]),_c('th',{staticClass:\"gender\"},[_vm._v(_vm._s(_vm._f(\"t\")('gender','presenters.primaryAttributeSelection')))]),_c('th',{staticClass:\"base\"},[_vm._v(_vm._s(_vm._f(\"t\")('base','presenters.primaryAttributeSelection')))]),_c('th',{staticClass:\"selected\"},[_vm._v(_vm._s(_vm._f(\"t\")('selected','presenters.primaryAttributeSelection')))]),_c('th',{staticClass:\"total\"},[_vm._v(_vm._s(_vm._f(\"t\")('total','presenters.primaryAttributeSelection')))])])]),_c('tbody',_vm._l((_vm.attributeNames),function(name,index){return _c('tr',{staticClass:\"attribute-row\"},[_c('th',{staticClass:\"key\"},[_vm._v(\"[\"),_c('div',{staticClass:\"key\"},[_vm._v(_vm._s(_vm.keys(index)))]),_vm._v(\"]\")]),_c('td',{staticClass:\"name\"},[_vm._v(_vm._s(_vm._f(\"t\")(name,'primaryAttributes')))]),_c('td',{staticClass:\"racial\"},[_vm._v(_vm._s(_vm.menu.racialAttributes[name]))]),_c('td',{staticClass:\"gender\"},[_vm._v(_vm._s(_vm.attributeModifier(_vm.menu.genderAttributes[name])))]),_c('td',{staticClass:\"base\"},[_vm._v(_vm._s(_vm.menu.baseAttributes[name]))]),_c('td',{staticClass:\"selected\"},[_c('a',{staticClass:\"select-button float-left\",class:{ \"invisible\": !_vm.canDecrease(name) },on:{\"click\":function($event){_vm.decrease(name)}}},[_vm._v(\"-\")]),_vm._v(_vm._s(_vm.attributeModifier(_vm.selectedAttributes[name]))),_c('a',{staticClass:\"select-button float-right\",class:{ \"invisible\": !_vm.canIncrease(name) },on:{\"click\":function($event){_vm.increase(name)}}},[_vm._v(\"+\")])]),_c('td',{staticClass:\"total\"},[_vm._v(_vm._s(_vm.totalAttribute(name)))])])}))]),_c('div',{staticClass:\"points mt-3\"},[_vm._v(_vm._s(_vm._f(\"t\")('points','presenters.primaryAttributeSelection', '', { points: _vm.points })))]),_c('div',{staticClass:\"menu-options\"},[_c('MenuOption',{attrs:{\"char\":\"R\",\"name\":\"Ready\"}}),_c('MenuOption',{attrs:{\"char\":\"=\",\"name\":\"Back\",\"separator\":true}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/// This file contains the main tile engine namespace.\n/// All coordinates are assumed to be integers - behaviour is undefined\n/// if you feed in floats (or anything other) as x and y (or similar) parameters.\n\n/// Class: Tile\n/// Represents a unicode character tile with various attributes.\nexport class Tile {\n  /// Constructor: Tile\n  /// Constructs a new Tile object.\n  ///\n  /// Parameters:\n  ///   ch - a character to display for this tile\n  ///   r - (optional) red foregorund color component 0-255\n  ///   g - (optional) green foreground color component 0-255\n  ///   b - (optional) blue foreground color component 0-255\n  ///   br - (optional) red background color component 0-255\n  ///   bg - (optional) green background color component 0-255\n  ///   bb - (optional) blue background color component 0-255\n  constructor(\n    public ch: string,\n    public r?: number,\n    public g?: number,\n    public b?: number,\n    public br?: number,\n    public bg?: number,\n    public bb?: number,\n  ) {}\n\n  /// Function: getChar\n  /// Returns the character of this tile.\n  public getChar() { return this.ch }\n\n  /// Function: setChar\n  /// Sets the character of this tile.\n  public setChar(ch: string) { this.ch = ch }\n\n  /// Function: setColor\n  /// Sets the foreground color of this tile.\n  public setColor(r: number, g: number, b: number) {\n    this.r = r\n    this.g = g\n    this.b = b\n  }\n\n  /// Function: setGrey\n  /// Sets the foreground color to the given shade (0-255) of grey.\n  public setGrey(grey: number) {\n    this.r = grey\n    this.g = grey\n    this.b = grey\n  }\n\n  /// Function: setBackground\n  /// Sets the background color of this tile.\n  public setBackground(r: number, g: number, b: number) {\n    this.br = r\n    this.bg = g\n    this.bb = b\n  }\n\n  public backgroundToColor() {\n    this.r = this.br\n    this.g = this.bg\n    this.b = this.bb\n  }\n\n  public swapColors() {\n    this.r = [this.br, this.br = this.r][0]\n    this.g = [this.bg, this.bg = this.g][0]\n    this.b = [this.bb, this.bb = this.b][0]\n  }\n\n  /// Function: resetColor\n  /// Clears the color of this tile / assigns default color.\n  public resetColor() { this.r = this.g = this.b = undefined }\n\n  /// Function: resetBackground\n  /// Clears the background color of this tile.\n  public resetBackground() { this.br = this.bg = this.bb = undefined }\n\n  /// Function: getColorHex\n  /// Returns the hexadecimal representation of the color\n  public getColorHex() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return '#' + this.r.toString(16) + this.g.toString(16) + this.b.toString(16)\n    else return ''\n  }\n\n  /// Function: getBackgroundHex\n  /// Returns the hexadecimal representation of the background color\n  public getBackgroundHex() {\n    if (this.br !== undefined && this.bg !== undefined && this.bb !== undefined)\n      return '#' + this.br.toString(16) + this.bg.toString(16) + this.bb.toString(16)\n    else return ''\n  }\n\n  /// Function: getColorRGB\n  /// Returns the CSS rgb(r,g,b) representation of the color\n  public getColorRGB() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return `rgb(${this.r},${this.g},${this.b})`\n    else return ''\n  }\n\n  /// Function: getBackgroundRGB\n  /// Returns the CSS rgb(r,g,b) representation of the background color\n  public getBackgroundRGB() {\n    if (this.br !== undefined && this.bg !== undefined && this.bb !== undefined)\n      return `rgb(${this.br},${this.bg},${this.bb})`\n    else return ''\n  }\n\n  /// Function: getColorJSON\n  /// Returns the JSON representation of the color, i.e. object { r, g, b }\n  public getColorJSON() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return { 'r': this.r, 'g': this.g, 'b': this.b }\n    else return {}\n  }\n\n  /// Function: getBackgroundJSON\n  /// Returns the JSON representation of the background color, i.e. object { r, g, b }\n  public getBackgroundJSON() {\n    if (this.r !== undefined && this.g !== undefined && this.b !== undefined)\n      return { 'r': this.br, 'g': this.bg, 'b': this.bb }\n    else return {}\n  }\n\n  /// Function: copy\n  /// Makes this tile identical to the one supplied. Custom properties are not copied.\n  public copy(other: Tile) {\n    this.ch = other.ch\n    this.r = other.r\n    this.g = other.g\n    this.b = other.b\n    this.br = other.br\n    this.bg = other.bg\n    this.bb = other.bb\n  }\n\n  /// Function: clone\n  /// Returns a new copy of this tile. Custom properties are not cloned.\n  public clone() {\n    return new Tile(this.ch, this.r, this.g, this.b, this.br, this.bg, this.bb)\n  }\n}\n\n/// Constants: Semi-internal constants for ut namespace\n/// VERSION  - Version of the library as string.\n/// NULLCHAR - Character used when none is specified otherwise.\n/// CSSCLASS - The CSS class name used for the tile engine element.\n/// NULLTILE - The tile used as placeholder for empty tile.\nexport const VERSION = '2.1'\nexport const NULLCHAR = ' '\nexport const CSSCLASS = 'unicodetiles'\nexport const NULLTILE = new Tile(NULLCHAR)\n\nexport interface Renderer {\n  updateStyle(s?: any): void\n\n    // if (this.renderer instanceof ut.WebGLRenderer) return ''\n    // if (this.renderer instanceof ut.CanvasRenderer) return 'canvas'\n    // if (this.renderer instanceof ut.DOMRenderer) return 'dom'\n  getRendererString(): string\n\n  clear(): void\n  render(): void\n}\n\n/// Class: Viewport\n/// The tile engine viewport / window. Takes care of initializing a proper renderer.\n\n/// Constructor: Viewport\n/// Constructs a new Viewport object.\n/// If you wish to display a player character at the center, you should use odd sizes.\n///\n/// Parameters:\n///   elem - the DOM element which shall be transformed into the tile engine\n///   w - (integer) width in tiles\n///   h - (integer) height in tiles\n///   renderer - (optional) choose rendering engine, see <Viewport.setRenderer>, defaults to 'auto'.\n///   squarify - (optional) set to true to force the tiles square; may break some box drawing\nexport class Viewport {\n  public cx: number\n  public cy: number\n\n  public buffer: Tile[][]\n  public renderer: Renderer\n\n  public defaultColor?: string\n  public defaultBackground?: string\n\n  constructor(\n    public elem: HTMLElement,\n    public w: number,\n    public h: number,\n    renderer: (viewport: Viewport) => Renderer,\n    public squarify: boolean = false,\n    ) {\n    this.cx = Math.floor(w / 2)\n    this.cy = Math.floor(h / 2)\n\n    this.elem.innerHTML = ''\n\n    // Add CSS class if not added already\n    if (elem.className.indexOf(CSSCLASS) === -1) {\n      if (elem.className.length === 0) {\n        elem.className = CSSCLASS\n      }\n      else elem.className += ' ' + CSSCLASS\n    }\n\n    // Create two 2-dimensional array to hold the viewport tiles\n    this.buffer = new Array(h)\n    for (let j = 0; j < h; ++j) {\n      this.buffer[j] = new Array(w)\n      for (let i = 0; i < w; ++i) {\n        this.buffer[j][i] = NULLTILE\n      }\n    }\n\n    this.renderer = renderer(this)\n  }\n\n  /// Function: updateStyle\n  /// If the style of the parent element is modified, this needs to be called.\n  private updateStyle(updateRenderer: boolean) {\n    const s = window.getComputedStyle(this.elem, null)\n\n    this.defaultColor = s.color || undefined // OMG\n    this.defaultBackground = s.backgroundColor || undefined\n    if (updateRenderer) {\n      this.renderer.updateStyle(s)\n    }\n  };\n\n  /// Function: getRendererString\n  /// Gets the currently used renderer.\n  ///\n  /// Returns:\n  ///   One of 'webgl', 'canvas', 'dom', ''.\n  public getRendererString(): string {\n    return this.renderer.getRendererString()\n  }\n\n  /// Function: put\n  /// Puts a tile to the given coordinates.\n  /// Checks bounds and does nothing if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   tile - the tile to put\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  public put(tile: Tile, x: number, y: number): void {\n    if (x < 0 || y < 0 || x >= this.w || y >= this.h) return\n    this.buffer[y][x] = tile\n  }\n\n  /// Function: unsafePut\n  /// Puts a tile to the given coordinates.\n  /// Does *not* check bounds throws exception if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   tile - the tile to put\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  public unsafePut(tile: Tile, x: number, y: number) {\n    this.buffer[y][x] = tile\n  }\n\n  /// Function: putString\n  /// Creates a row of tiles with the chars of the given string.\n  /// Wraps to next line if it can't fit the chars on one line.\n  ///\n  /// Parameters:\n  ///   str - (string) the string to put\n  ///   x - (integer) x coordinate (column)\n  ///   y - (integer) y coordinate (row)\n  ///   r - (optional) red foregorund color component 0-255\n  ///   g - (optional) green foreground color component 0-255\n  ///   b - (optional) blue foreground color component 0-255\n  ///   br - (optional) red background color component 0-255\n  ///   bg - (optional) green background color component 0-255\n  ///   bb - (optional) blue background color component 0-255\n  public putString(\n    str: string,\n    x: number,\n    y: number,\n    r?: number,\n    g?: number,\n    b?: number,\n    br?: number,\n    bg?: number,\n    bb?: number,\n  ) {\n    const len = str.length\n    if (x < 0 || y < 0) return\n\n    for (let i = 0; i < len; ++i) {\n      if (x >= this.w) {\n        x = 0\n        ++y\n      }\n      if (y >= this.h) return\n\n      const tile = new Tile(str[i], r, g, b, br, bg, bb)\n      this.unsafePut(tile, x, y)\n      ++x\n    }\n  }\n\n  /// Function: get\n  /// Returns the tile in the given coordinates.\n  /// Checks bounds and returns empty tile if invalid coordinates are given.\n  ///\n  /// Parameters:\n  ///   x - (integer) x coordinate\n  ///   y - (integer) y coordinate\n  ///\n  /// Returns:\n  ///   The tile.\n  public get(x: number, y: number): Tile {\n    if (x < 0 || y < 0 || x >= this.w || y >= this.h) return NULLTILE\n    return this.buffer[y][x]\n  }\n\n  /// Function: clear\n  /// Clears the viewport buffer by assigning empty tiles.\n  public clear() {\n    for (let j = 0; j < this.h; ++j) {\n      for (let i = 0; i < this.w; ++i) {\n        this.buffer[j][i] = NULLTILE\n      }\n    }\n    this.renderer.clear()\n  }\n\n  /// Function: render\n  /// Renders the buffer as html to the element specified at construction.\n  public render() {\n    this.renderer.render()\n  }\n}\n\n/// Class: Engine\n/// The tile engine itself.\nexport class Engine {\n  private refreshCache: boolean = true\n  private cacheEnabled: boolean = false\n  private transitionTimer?: number\n\n  private transitionDuration: number = 0\n  private transition?: (x: number, y: number, w: number, h: number, new_t: Tile, old_t: Tile, factor: number) => Tile\n  private maskFunc?: (x: number, y: number) => boolean\n  private shaderFunc?: (tile: Tile, x: number, y: number, timeNow: number) => Tile\n  private cachex: number = 0\n  private cachey: number = 0\n\n  private tileCache: Tile[][]\n  private tileCache2: Tile[][]\n\n  /// Constructor: Engine\n  /// Constructs a new Engine object. If width or height is given,\n  /// it will not attempt to fetch tiles outside the boundaries.\n  /// In that case 0,0 is assumed as the upper-left corner of the world,\n  /// but if no width/height is given also negative coords are valid.\n  ///\n  /// Parameters:\n  ///   vp - the <Viewport> instance to use as the viewport\n  ///   func - the function used for fetching tiles\n  ///   w - (integer) (optional) world width in tiles\n  ///   h - (integer) (optional) world height in tiles\n  constructor(\n    public viewport: Viewport,\n    public tileFunc: (x: number, y: number) => Tile,\n    public w: number,\n    public h: number,\n  ) {\n\n    this.tileCache = new Array(viewport.h)\n    this.tileCache2 = new Array(viewport.h)\n\n    for (let j = 0; j < viewport.h; ++j) {\n      this.tileCache[j] = new Array(viewport.w)\n      this.tileCache2[j] = new Array(viewport.w)\n    }\n  }\n\n  /// Function: setTileFunc\n  /// Sets the function to be called with coordinates to fetch each tile.\n  /// Optionally can apply a transition effect. Effects are:\n  /// 'boxin', 'boxout', 'circlein', 'circleout', 'random'\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (x, y) and returning an ut.Tile\n  ///   effect - (string) (optional) name of effect to use (see above for legal values)\n  ///   duration - (integer) (optional) how many milliseconds the transition effect should last\n  public setTileFunc(func: (x: number, y: number) => Tile, effect?: string, duration?: number) {\n    if (effect) {\n      this.transition = undefined\n      if (typeof effect === 'string') {\n        if (effect === 'boxin') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          if (Math.abs(x) < halfw * factor && Math.abs(y) < halfh * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'boxout') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          factor = 1.0 - factor\n          if (Math.abs(x) < halfw * factor && Math.abs(y) < halfh * factor) return old_t\n          else return new_t\n        }\n        else if (effect === 'circlein') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          if (x * x + y * y < (halfw * halfw + halfh * halfh) * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'circleout') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          const halfw = w * 0.5, halfh = h * 0.5\n          x -= halfw\n          y -= halfh\n          factor = 1.0 - factor\n          if (x * x + y * y > (halfw * halfw + halfh * halfh) * factor) return new_t\n          else return old_t\n        }\n        else if (effect === 'random') this.transition = function(x, y, w, h, new_t, old_t, factor) {\n          if (Math.random() > factor) return old_t\n          else return new_t\n        }\n      }\n      if (this.transition) {\n        this.transitionTimer = (new Date()).getTime()\n        this.transitionDuration = duration || 500\n      }\n    }\n    this.tileFunc = func\n  }\n\n  /// Function: setMaskFunc\n  /// Sets the function to be called to fetch mask information according to coordinates.\n  /// If mask function returns false to some coordinates, then that tile is not rendered.\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (x, y) and returning a true if the tile is visible\n  public setMaskFunc(func: (x: number, y: number) => boolean) { this.maskFunc = func }\n\n  /// Function: setShaderFunc\n  /// Sets the function to be called to post-process / shade each visible tile.\n  /// Shader function is called even if caching is enabled, see <Engine.setCacheEnabled>.\n  ///\n  /// Parameters:\n  ///   func - function taking parameters (tile, x, y) and returning an ut.Tile\n  public setShaderFunc(func: (tile: Tile, x: number, y: number) => Tile) { this.shaderFunc = func }\n\n  /// Function: setWorldSize\n  /// Tiles outside of the range x = [0,width[ y = [0,height[ are not fetched.\n  /// Set to undefined in order to make the world infinite.\n  ///\n  /// Parameters:\n  ///   width - (integer) new world width\n  ///   height - (integer) new world height\n  public setWorldSize(width: number, height: number) {\n    this.w = width\n    this.h = height\n  }\n\n  /// Function: setCacheEnabled\n  /// Enables or disables the usage of tile cache. This means that\n  /// extra measures are taken to not call the tile function unnecessarily.\n  /// This means that all animating must be done in a shader function,\n  /// see <Engine.setShaderFunc>.\n  /// Cache is off by default, but should be enabled if the tile function\n  /// does more computation than a simple array look-up.\n  ///\n  /// Parameters:\n  ///   mode - true to enable, false to disable\n  public setCacheEnabled(mode: boolean) {\n    this.cacheEnabled = mode\n    this.refreshCache = true\n  }\n\n  /// Function: update\n  /// Updates the viewport according to the given player coordinates.\n  /// The algorithm goes as follows:\n  ///   * Record the current time\n  ///   * For each viewport tile:\n  ///   * Check if the tile is visible by testing the mask\n  ///   * If not visible, continue to the next tile in the viewport\n  ///   * Otherwise, if cache is enabled try to fetch the tile from there\n  ///   * Otherwise, call the tile function and check for shader function presence\n  ///   * If there is shader function, apply it to the tile, passing the recorded time\n  ///   * Put the tile to viewport\n  ///\n  /// Parameters:\n  ///   x - (integer) viewport center x coordinate in the tile world\n  ///   y - (integer) viewport center y coordinate in the tile world\n  public update(x?: number, y?: number) {\n    x = x || 0\n    y = y || 0\n\n    // World coords of upper left corner of the viewport\n    const xx = x - this.viewport.cx\n    const yy = y - this.viewport.cy\n    const timeNow = (new Date()).getTime() // For passing to shaderFunc\n    let transTime\n    if (this.transition && this.transitionTimer) transTime = (timeNow - this.transitionTimer) / this.transitionDuration\n    if (transTime && transTime >= 1.0) this.transition = undefined\n\n    let tile: Tile\n\n    // For each tile in viewport...\n    for (let j = 0; j < this.viewport.h; ++j) {\n      for (let i = 0; i < this.viewport.w; ++i) {\n        const ixx = i + xx, jyy = j + yy\n        // Check horizontal bounds if requested\n        if (this.w && (ixx < 0 || ixx >= this.w)) {\n          tile = NULLTILE\n        // Check vertical bounds if requested\n        } else if (this.h && (jyy < 0 || jyy >= this.h)) {\n          tile = NULLTILE\n        // Check mask\n        } else if (this.maskFunc && !this.maskFunc(ixx, jyy)) {\n          tile = NULLTILE\n        // Check transition effect\n        } else if (this.transition && !this.refreshCache) {\n          tile = this.transition(\n            i,\n            j,\n            this.viewport.w,\n            this.viewport.h,\n            this.tileFunc(ixx, jyy),\n            this.tileCache[j][i],\n            transTime || 0\n          )\n        // Check cache\n        } else if (this.cacheEnabled && !this.refreshCache) {\n          const lookupx = ixx - this.cachex\n          const lookupy = jyy - this.cachey\n          if (lookupx >= 0 && lookupx < this.viewport.w && lookupy >= 0 && lookupy < this.viewport.h) {\n            tile = this.tileCache[lookupy][lookupx]\n            if (tile === NULLTILE) tile = this.tileFunc(ixx, jyy)\n          } else // Cache miss\n            tile = this.tileFunc(ixx, jyy)\n        // If all else fails, call tileFunc\n        } else tile = this.tileFunc(ixx, jyy)\n        // Save the tile to cache (always due to transition effects)\n        this.tileCache2[j][i] = tile\n        // Apply shader function\n        if (this.shaderFunc && tile !== NULLTILE)\n          tile = this.shaderFunc(tile, ixx, jyy, timeNow)\n        // Put shaded tile to viewport\n        this.viewport.unsafePut(tile, i, j)\n      }\n    }\n    // Cache stuff is enabled always, because it is also required by transitions\n    // Save the new cache origin\n    this.cachex = xx\n    this.cachey = yy\n\n    // Swap cache buffers\n    const tempCache = this.tileCache\n    this.tileCache = this.tileCache2\n    this.tileCache2 = tempCache\n    this.refreshCache = false\n  }\n}\n","import { Renderer, Viewport } from './unicodetiles'\n\n/// Class: CanvasRenderer\n/// Renders the <Viewport> into an HTML5 <canvas> element.\n///\n/// *Note:* This is an internal class used by <Viewport>\nclass CanvasRenderer implements Renderer {\n  private canvas: HTMLCanvasElement\n  private offscreen: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n  private ctx2: CanvasRenderingContext2D\n\n  private th?: number\n  private tw?: number\n  private gap?: number\n\n  constructor(private view: Viewport) {\n    this.canvas = document.createElement('canvas')\n    if (!this.canvas.getContext) throw('Canvas not supported')\n    this.ctx2 = this.canvas.getContext('2d')\n    if (!this.ctx2 || !this.ctx2.fillText) throw('Canvas not supported')\n    view.elem.appendChild(this.canvas)\n\n    // Create an offscreen canvas for rendering\n    this.offscreen = document.createElement('canvas')\n    this.ctx = this.offscreen.getContext('2d')\n    this.updateStyle()\n    this.canvas.width = (view.squarify ? this.th : this.tw) * view.w\n    this.canvas.height = this.th * view.h\n    this.offscreen.width = this.canvas.width\n    this.offscreen.height = this.canvas.height\n    // Doing this again since setting canvas w/h resets the state\n    this.updateStyle()\n  }\n\n  public getRendererString(): string { return 'canvas' }\n\n  public updateStyle(s?: any) {\n    s = s || window.getComputedStyle(this.view.elem, null)\n    this.ctx.font = `${s.fontSize}/${s.lineHeight} ${s.fontFamily}`\n    this.ctx.textBaseline = 'middle'\n    this.tw = this.ctx.measureText('M').width\n    this.th = parseInt(s.fontSize, 10)\n    this.gap = this.view.squarify ? (this.th - this.tw) : 0\n    if (this.view.squarify) this.tw = this.th\n  }\n\n  public clear() { /* No op */ }\n\n  public render() {\n    let tile, ch, fg, bg, x, y\n    const view = this.view,\n          buffer = this.view.buffer,\n          w = view.w, h = view.h,\n          hth = 0.5 * this.th,\n          hgap = 0.5 * this.gap // Squarification\n\n    // Clearing with one big rect is much faster than with individual char rects\n    this.ctx.fillStyle = view.defaultBackground\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    y = hth // half because textBaseline is middle\n    for (let j = 0; j < h; ++j) {\n      x = 0\n      for (let i = 0; i < w; ++i) {\n        tile = buffer[j][i]\n        ch = tile.ch\n        fg = tile.getColorRGB()\n        bg = tile.getBackgroundRGB()\n        // Only render background if the color is non-default\n        if (bg.length && bg !== view.defaultBackground) {\n          this.ctx.fillStyle = bg\n          this.ctx.fillRect(x, y - hth, this.tw, this.th)\n        }\n        // Do not attempt to render empty char\n        if (ch.length) {\n          if (!fg.length) fg = view.defaultColor\n          this.ctx.fillStyle = fg\n          this.ctx.fillText(ch, x + hgap, y)\n        }\n        x += this.tw\n      }\n      y += this.th\n    }\n    this.ctx2.drawImage(this.offscreen, 0, 0)\n  }\n}\n\nexport const canvasRenderer = function(viewport: Viewport): Renderer {\n  return new CanvasRenderer(viewport)\n}\n","import { Renderer, Viewport } from './unicodetiles'\n\nconst VERTEX_SHADER = `\nattribute vec2 position;\nattribute vec2 texCoord;\nattribute vec3 color;\nattribute vec3 bgColor;\nattribute float charIndex;\nuniform vec2 uResolution;\nuniform vec2 uTileCounts;\nuniform vec2 uPadding;\nvarying vec2 vTexCoord;\nvarying vec3 vColor;\nvarying vec3 vBgColor;\n\nvoid main() {\n  vec2 tileCoords = floor(vec2(mod(charIndex, uTileCounts.x), charIndex / uTileCounts.x));\n  vTexCoord = (texCoord + tileCoords) / uTileCounts;\n  vTexCoord += (0.5 - texCoord) * uPadding;\n  vColor = color;\n  vBgColor = bgColor;\n  vec2 pos = position / uResolution * 2.0 - 1.0;\n  gl_Position = vec4(pos.x, -pos.y, 0.0, 1.0);\n}\n`\n\nconst FRAGMENT_SHADER = `\nprecision mediump float;\nuniform sampler2D uFont;\nvarying vec2 vTexCoord;\nvarying vec3 vColor;\nvarying vec3 vBgColor;\n\nvoid main() {\n  vec4 color = texture2D(uFont, vTexCoord);\n  color.rgb = mix(vBgColor, vColor, color.rgb);\n  gl_FragColor = color;\n}\n`\n\n/// Class: WebGLRenderer\n/// Renders the <Viewport> with WebGL.\n/// Given decent GPU drivers and browser support, this is the fastest renderer.\n///\n/// *Note:* This is an internal class used by <Viewport>\nclass WebGLRenderer implements Renderer {\n  private canvas: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n  private offscreen: HTMLCanvasElement\n\n  public gl: WebGLRenderingContext\n\n  private charMap: any\n  private charArray: any\n  private defaultColors: any\n  private attribs: any\n\n  private th?: number\n  private tw?: number\n  private gap?: number\n  private pad?: number\n\n  private tileCountsLocation: WebGLUniformLocation\n  private paddingLocation: WebGLUniformLocation\n\n  constructor(private view: Viewport) {\n    this.view = view\n    this.canvas = document.createElement('canvas')\n    // Try to fetch the context\n    if (!this.canvas.getContext) throw('Canvas not supported')\n    this.gl = this.canvas.getContext('experimental-webgl')\n    if (!this.gl) throw('WebGL not supported')\n    view.elem.appendChild(this.canvas)\n\n    this.charMap = {}\n    this.charArray = []\n    this.defaultColors = { r: 1.0, g: 1.0, b: 1.0, br: 0.0, bg: 0.0, bb: 0.0 }\n\n    this.attribs = {\n      position:  { buffer: null, data: null, itemSize: 2, location: null, hint: this.gl.STATIC_DRAW },\n      texCoord:  { buffer: null, data: null, itemSize: 2, location: null, hint: this.gl.STATIC_DRAW },\n      color:     { buffer: null, data: null, itemSize: 3, location: null, hint: this.gl.DYNAMIC_DRAW },\n      bgColor:   { buffer: null, data: null, itemSize: 3, location: null, hint: this.gl.DYNAMIC_DRAW },\n      charIndex: { buffer: null, data: null, itemSize: 1, location: null, hint: this.gl.DYNAMIC_DRAW }\n    }\n\n\n    // Create an offscreen canvas for rendering text to texture\n    if (!this.offscreen)\n      this.offscreen = document.createElement('canvas')\n    this.offscreen.style.position = 'absolute'\n    this.offscreen.style.top = '0px'\n    this.offscreen.style.left = '0px'\n    this.ctx = this.offscreen.getContext('2d')\n    if (!this.ctx) throw 'Failed to acquire offscreen canvas drawing context'\n    // WebGL drawing canvas\n    this.updateStyle()\n    this.canvas.width = (view.squarify ? this.th : this.tw) * view.w\n    this.canvas.height = this.th * view.h\n    this.offscreen.width = 0\n    this.offscreen.height = 0\n    // Doing this again since setting canvas w/h resets the state\n    this.updateStyle()\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height)\n\n    let vertexShader = this.compileShader(this.gl.VERTEX_SHADER, VERTEX_SHADER)\n    let fragmentShader = this.compileShader(this.gl.FRAGMENT_SHADER, FRAGMENT_SHADER)\n    let program = this.gl.createProgram()\n    this.gl.attachShader(program, vertexShader)\n    this.gl.attachShader(program, fragmentShader)\n    this.gl.linkProgram(program)\n    this.gl.deleteShader(vertexShader)\n    this.gl.deleteShader(fragmentShader)\n    const ok = this.gl.getProgramParameter(program, this.gl.LINK_STATUS)\n    if (!ok) {\n      const msg = `Error linking program: ${this.gl.getProgramInfoLog(program)}`\n      this.gl.deleteProgram(program)\n      throw msg\n    }\n    this.gl.useProgram(program)\n\n    // Get attribute locations\n    this.attribs.position.location  = this.gl.getAttribLocation(program, 'position')\n    this.attribs.texCoord.location  = this.gl.getAttribLocation(program, 'texCoord')\n    this.attribs.color.location     = this.gl.getAttribLocation(program, 'color')\n    this.attribs.bgColor.location   = this.gl.getAttribLocation(program, 'bgColor')\n    this.attribs.charIndex.location = this.gl.getAttribLocation(program, 'charIndex')\n\n    // Setup buffers and uniforms\n    this.initBuffers()\n    let resolutionLocation = this.gl.getUniformLocation(program, 'uResolution')\n    this.gl.uniform2f(resolutionLocation, this.canvas.width, this.canvas.height)\n    this.tileCountsLocation = this.gl.getUniformLocation(program, 'uTileCounts')\n    this.gl.uniform2f(this.tileCountsLocation, this.view.w, this.view.h)\n    this.paddingLocation = this.gl.getUniformLocation(program, 'uPadding')\n    this.gl.uniform2f(this.paddingLocation, 0.0, 0.0)\n\n    // Setup texture\n    // view.elem.appendChild(this.offscreen) // Debug offscreen\n    let texture = this.gl.createTexture()\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture)\n    this.cacheChars(` !\\\"#$%&'()*+,-./0123456789:<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~`)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.activeTexture(this.gl.TEXTURE0)\n\n    setTimeout(() => {\n      this.updateStyle()\n      this.buildTexture()\n      this.render()\n    }, 100)\n  }\n\n  public getRendererString(): string { return 'webgl' }\n\n  private buildTexture() {\n    let w = this.offscreen.width / (this.tw + this.pad),\n          h = this.offscreen.height / (this.th + this.pad)\n    // Check if need to resize the canvas\n    const charCount = this.charArray.length\n    if (charCount > Math.floor(w) * Math.floor(h)) {\n      w = Math.ceil(Math.sqrt(charCount))\n      h = w + 2 // Allocate some extra space too\n      this.offscreen.width = w * (this.tw + this.pad)\n      this.offscreen.height = h * (this.th + this.pad)\n      this.updateStyle()\n      this.gl.uniform2f(this.tileCountsLocation, w, h)\n    }\n    this.gl.uniform2f(this.paddingLocation, this.pad / this.offscreen.width, this.pad / this.offscreen.height)\n\n    let c = 0, ch: string\n    this.ctx.fillStyle = '#000000'\n    this.ctx.fillRect(0, 0, this.offscreen.width, this.offscreen.height)\n    this.ctx.fillStyle = '#ffffff'\n\n    const halfGap = 0.5 * this.gap // Squarification\n    const tw = this.tw + this.pad,\n          th = this.th + this.pad\n    let y = 0.5 * th // Half because textBaseline is middle\n    for (let j = 0; j < h; ++j) {\n      let x = this.pad * 0.5\n      for (let i = 0; i < w; ++i, ++c) {\n        ch = this.charArray[c]\n        if (ch === undefined) break\n        this.ctx.fillText(ch, x + halfGap, y)\n        x += tw\n      }\n      if (!ch) break\n      y += th\n    }\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.offscreen)\n  }\n\n  private cacheChars(chars: string, build: boolean = true) {\n    if (!this.gl) return // Nothing to do if not using WebGL renderer\n    let changed = false\n    for (let i = 0; i < chars.length; ++i) {\n      if (!this.charMap[chars[i]]) {\n        changed = true\n        this.charArray.push(chars[i])\n        this.charMap[chars[i]] = this.charArray.length - 1\n      }\n    }\n\n    if (changed && build) this.buildTexture()\n  }\n\n  public updateStyle(s?: any) {\n    s = s || window.getComputedStyle(this.view.elem, null)\n    this.ctx.font = s.fontSize + '/' + s.lineHeight + ' ' + s.fontFamily\n    this.ctx.textBaseline = 'middle'\n    this.ctx.fillStyle = '#ffffff'\n    this.tw = this.ctx.measureText('幅').width // TODO: Make a parameter\n    this.th = parseInt(s.fontSize, 10)\n    this.gap = this.view.squarify ? (this.th - this.tw) : 0\n    if (this.view.squarify) this.tw = this.th\n    this.pad = Math.ceil(this.th * 0.2) * 2.0 // Must be even number\n\n    const color = s.color.match(/\\d+/g)\n    const bgColor = s.backgroundColor.match(/\\d+/g)\n    this.defaultColors.r = parseInt(color[0], 10) / 255\n    this.defaultColors.g = parseInt(color[1], 10) / 255\n    this.defaultColors.b = parseInt(color[2], 10) / 255\n    this.defaultColors.br = parseInt(bgColor[0], 10) / 255\n    this.defaultColors.bg = parseInt(bgColor[1], 10) / 255\n    this.defaultColors.bb = parseInt(bgColor[2], 10) / 255\n  }\n\n  public clear() { /* No op */ }\n\n  public render() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n    const w = this.view.w,\n      h = this.view.h\n\n    // Create new tile data\n    let tiles = this.view.buffer\n    let defaultColor = this.view.defaultColor\n    let defaultBgColor = this.view.defaultBackground\n    let newChars = false\n\n    for (let j = 0; j < h; ++j) {\n      for (let i = 0; i < w; ++i) {\n        const tile = tiles[j][i]\n        let ch = this.charMap[tile.ch]\n        if (ch === undefined) { // Auto-cache new characters\n          this.cacheChars(tile.ch, false)\n          newChars = true\n          ch = this.charMap[tile.ch]\n        }\n        const k = this.attribs.color.itemSize * 6 * (j * w + i)\n        const kk = this.attribs.charIndex.itemSize * 6 * (j * w + i)\n        const r = tile.r === undefined ? this.defaultColors.r : tile.r / 255\n        const g = tile.g === undefined ? this.defaultColors.g : tile.g / 255\n        const b = tile.b === undefined ? this.defaultColors.b : tile.b / 255\n        const br = tile.br === undefined ? this.defaultColors.br : tile.br / 255\n        const bg = tile.bg === undefined ? this.defaultColors.bg : tile.bg / 255\n        const bb = tile.bb === undefined ? this.defaultColors.bb : tile.bb / 255\n        for (let m = 0; m < 6; ++m) {\n          const n = k + m * this.attribs.color.itemSize\n          this.attribs.color.data[n + 0] = r\n          this.attribs.color.data[n + 1] = g\n          this.attribs.color.data[n + 2] = b\n          this.attribs.bgColor.data[n + 0] = br\n          this.attribs.bgColor.data[n + 1] = bg\n          this.attribs.bgColor.data[n + 2] = bb\n          this.attribs.charIndex.data[kk + m] = ch\n        }\n      }\n    }\n\n    // Upload\n    if (newChars) this.buildTexture()\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.color.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.color.data, this.attribs.color.hint)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.bgColor.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.bgColor.data, this.attribs.bgColor.hint)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.attribs.charIndex.buffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.attribs.charIndex.data, this.attribs.charIndex.hint)\n\n    const attrib = this.attribs.position\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, attrib.data.length / attrib.itemSize)\n  }\n\n  // Setup GLSL\n  private compileShader(type: number, source: string) {\n    const shader = this.gl.createShader(type)\n    this.gl.shaderSource(shader, source)\n    this.gl.compileShader(shader)\n    const ok = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)\n    if (!ok) {\n      const msg = 'Error compiling shader: ' + this.gl.getShaderInfoLog(shader)\n      this.gl.deleteShader(shader)\n      throw msg\n    }\n    return shader\n  }\n\n  private initBuffers() {\n    let a, attrib, attribs = this.attribs\n\n    const w = this.view.w,\n          h = this.view.h\n\n    // Allocate data arrays\n    for (a in this.attribs) {\n      attrib = attribs[a]\n      attrib.data = new Float32Array(attrib.itemSize * 6 * w * h)\n    }\n    // Generate static data\n    for (let j = 0; j < h; ++j) {\n      for (let i = 0; i < w; ++i) {\n        // Position & texCoords\n        const k = attribs.position.itemSize * 6 * (j * w + i)\n        this.insertQuad(attribs.position.data, k, i * this.tw, j * this.th, this.tw, this.th)\n        this.insertQuad(attribs.texCoord.data, k, 0.0, 0.0, 1.0, 1.0)\n      }\n    }\n    // Upload\n    for (a in this.attribs) {\n      attrib = attribs[a]\n      if (attrib.buffer) this.gl.deleteBuffer(attrib.buffer)\n      attrib.buffer = this.gl.createBuffer()\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attrib.buffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, attrib.data, attrib.hint)\n      this.gl.enableVertexAttribArray(attrib.location)\n      this.gl.vertexAttribPointer(attrib.location, attrib.itemSize, this.gl.FLOAT, false, 0, 0)\n    }\n  }\n\n  private insertQuad(arr: number[], i: number, x: number, y: number, w: number, h: number) {\n    const x1 = x,\n          y1 = y,\n          x2 = x + w,\n          y2 = y + h\n\n    arr[  i] = x1\n    arr[++i] = y1\n    arr[++i] = x2\n    arr[++i] = y1\n    arr[++i] = x1\n    arr[++i] = y2\n    arr[++i] = x1\n    arr[++i] = y2\n    arr[++i] = x2\n    arr[++i] = y1\n    arr[++i] = x2\n    arr[++i] = y2\n  }\n}\n\nexport const webGLRenderer = function(viewport: Viewport): Renderer {\n  return new WebGLRenderer(viewport)\n}\n","import { Tile as UniTile } from '../vendor/unicodetiles.ts/src/index'\n\nimport {\n  Item,\n  ItemGroup,\n  TileVisitor,\n\n  Wall,\n  Floor,\n  Tile,\n  StairwayDown,\n  StairwayUp,\n  Door,\n  Trap,\n  TriggerTile,\n  TrapType,\n  FallingRockTrap,\n} from '../src/onisun'\n\nconst DEFAULT_GREY: number = 120\nconst IMPORTANT_GREY: number = 180\nconst DEFAULT_LIT = { r: 255, g: 165, b: 0 }\n\nexport class DisplayTile extends UniTile {\n  public lighted(degree: number): UniTile {\n    return this\n  }\n\n  constructor(char: string, r = DEFAULT_GREY, g = DEFAULT_GREY, b = DEFAULT_GREY) {\n    super(char, r, g, b)\n  }\n\n  protected litBackground(tile: UniTile, degree: number): UniTile {\n    tile.setBackground(\n      DEFAULT_LIT.r * degree,\n      DEFAULT_LIT.g * degree,\n      DEFAULT_LIT.b * degree,\n    )\n    return tile\n  }\n\n  protected litColor(tile: UniTile, degree: number): UniTile {\n    tile.setColor(\n      DEFAULT_LIT.r * degree,\n      DEFAULT_LIT.g * degree,\n      DEFAULT_LIT.b * degree,\n    )\n    return tile\n  }\n}\n\nabstract class ImportantTile extends DisplayTile {\n  constructor(char: string) {\n    super(char, IMPORTANT_GREY, IMPORTANT_GREY, IMPORTANT_GREY)\n  }\n}\n\nexport class CreatureTile extends ImportantTile {\n  constructor(\n    char: string,\n    public vr: number,\n    public vg: number,\n    public vb: number,\n  ) {\n    super(char)\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    tile.setColor(this.vr, this.vg, this.vb)\n\n    return tile\n  }\n}\n\nclass ClosedDoorTile extends DisplayTile {\n  constructor() {\n    super('＋')\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    this.litColor(tile, degree)\n    tile.swapColors()\n\n    return tile\n  }\n}\n\nclass OpenDoorTile extends ClosedDoorTile {\n  public lighted(degree: number) {\n    let tile = this.clone()\n    this.litColor(tile, degree)\n\n    return tile\n  }\n}\n\nexport class FloorTile extends DisplayTile {\n  constructor() {\n    super('・')\n  }\n\n  public lighted(degree: number) {\n    return this.litColor(this.clone(), degree)\n  }\n}\n\nexport class WallTile extends DisplayTile {\n  constructor() {\n    super('＃')\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    this.litBackground(tile, degree)\n    tile.backgroundToColor()\n\n    return tile\n  }\n}\n\nexport class StairwayDownD extends DisplayTile {\n  constructor() {\n    super('＞')\n  }\n}\n\nexport class StairwayUpD extends DisplayTile {\n  constructor() {\n    super('＜')\n  }\n}\n\nexport class ItemTile extends DisplayTile {\n  constructor(\n    char: string,\n    public vr: number,\n    public vg: number,\n    public vb: number,\n  ) {\n    super(char)\n  }\n\n  public lighted(degree: number) {\n    let tile = this.clone()\n    tile.setColor(this.vr, this.vg, this.vb)\n\n    return tile\n  }\n}\n\nconst WEAPON = new ItemTile('刀', 200, 200, 200)\nconst CORPSE = new ItemTile('体', 200, 200, 200)\nconst BODY_ARMOR = new ItemTile('胸', 200, 200, 200)\nconst MISSILE = new ItemTile('石', 200, 200, 200)\nconst MISSILE_WEAPON = new ItemTile(']', 200, 200, 200)\nconst BOOTS = new ItemTile('[', 255, 255, 0)\nconst SCROLL = new ItemTile('?', 255, 255, 255)\n\nconst POTION = new ItemTile('！', 200, 200, 200)\n\nexport const displayItem = function(item: Item): ItemTile {\n  switch (item.group) {\n    case ItemGroup.OneHandWeapon:\n      return WEAPON\n    case ItemGroup.Consumable:\n      return CORPSE\n    case ItemGroup.BodyArmor:\n      return BODY_ARMOR\n    case ItemGroup.Missile:\n      return MISSILE\n    case ItemGroup.MissileWeapon:\n      return MISSILE_WEAPON\n    case ItemGroup.Potion:\n      return POTION\n    case ItemGroup.Boots:\n      return BOOTS\n    case ItemGroup.Scrolls:\n      return SCROLL\n    default:\n      return CORPSE\n  }\n}\n\nconst CLOSED_DOOR = new ClosedDoorTile()\nconst OPEN_DOOR = new OpenDoorTile()\nconst WALL = new WallTile()\nconst FLOOR = new FloorTile()\nconst STAIRWAY_DOWN = new StairwayDownD()\nconst STAIRWAY_UP = new StairwayUpD()\nconst NULL_TILE = new DisplayTile('　', 0, 0, 0)\n\nconst AIR_BLOW_TRAP = new DisplayTile('^', 255, 255, 255)\nconst TELEPORTATION_TRAP = new DisplayTile('^', 0, 191, 255)\nconst LIGHT_TRAP = new DisplayTile('^', 255, 255, 0)\nconst HOLE_TRAP = new DisplayTile('^', 139, 69, 19)\nconst BARE_WIRE_TRAP = new DisplayTile('^', 255, 165, 0)\nconst FALLING_ROCK_TRAP = new DisplayTile('^', 200, 200, 200)\nconst WATER_TRAP = new DisplayTile('^', 0, 0, 205)\n\nexport class DisplayTileVisitor extends TileVisitor {\n  public tile: DisplayTile\n\n  public onWall(wall: Wall): void {\n    this.tile = WALL\n  }\n\n  public onFloor(floor: Floor): void {\n    this.tile = FLOOR\n  }\n\n  public onStairwayDown(stairway: StairwayDown): void {\n    this.tile = STAIRWAY_DOWN\n  }\n\n  public onStairwayUp(stairway: StairwayUp): void {\n    this.tile = STAIRWAY_UP\n  }\n\n  public onDoor(door: Door): void {\n    if (door.open) {\n      this.tile = OPEN_DOOR\n    } else {\n      this.tile = CLOSED_DOOR\n    }\n  }\n\n  public onTrap(trap: Trap): void {\n    if (!trap.revealed) {\n      trap.tile.visit(this)\n      return\n    }\n\n    switch (trap.type) {\n    case TrapType.AirBlow:\n      this.tile = AIR_BLOW_TRAP\n      break\n    case TrapType.Teleportation:\n      this.tile = TELEPORTATION_TRAP\n      break\n    case TrapType.Light:\n      this.tile = LIGHT_TRAP\n      break\n    case TrapType.Hole:\n      this.tile = HOLE_TRAP\n      break\n    case TrapType.BareWire:\n      this.tile = BARE_WIRE_TRAP\n      break\n    case TrapType.FallingRock:\n      this.tile = FALLING_ROCK_TRAP\n      break\n    case TrapType.Water:\n      this.tile = WATER_TRAP\n      break\n    }\n  }\n\n  public onTrigger(trigger: TriggerTile): void {\n    trigger.tile.visit(this)\n  }\n\n  protected default(tile: Tile): void {\n    this.tile = NULL_TILE\n  }\n}\n\nconst displayTileVisitor = new DisplayTileVisitor()\n\nexport const displayTile = function(tile): DisplayTile {\n  tile.visit(displayTileVisitor)\n  return displayTileVisitor.tile\n}\n","\n\n\n\n\nimport Vue from 'vue'\n\nimport {\n  domRenderer,\n  canvasRenderer,\n  webGLRenderer,\n  Engine,\n  Viewport,\n  Tile,\n} from '../vendor/unicodetiles.ts/src/index'\n\nimport {\n  CreatureTile,\n  ItemTile,\n  DisplayTile,\n\n  displayItem,\n  displayTile,\n} from './scene_tiles'\nimport { Creature, Point } from 'src/engine';\n\nconst HUMAN  = new CreatureTile('＠', 0, 255, 0)\nconst RAT = new CreatureTile('r', 197, 65, 38)\nconst GOLEM = new CreatureTile('G', 120, 120, 120)\nconst NULL_TILE = new DisplayTile('　', 0, 0, 0)\n\nconst nextItemAnimation = [\n  new ItemTile('｜', 200, 200, 200),\n  new ItemTile('／', 200, 200, 200),\n  new ItemTile('ー', 200, 200, 200),\n  new ItemTile('＼', 200, 200, 200),\n]\n\nexport default Vue.extend({\n  props: ['level', 'player', 'pos'],\n  data() {\n    return {\n      wholeMap: false,\n      term: null,\n      eng: null,\n      drawInterval: null,\n      ts: Date.now(),\n      interval: 100,\n      step: 0,\n    }\n  },\n  methods: {\n    getTile(x: number, y: number) {\n      const effect = this.stage.at(x, y).effect\n      const tile = this.wholeMap ? this.stage.at(x, y) : this.stage.at(x, y).tile\n\n      if (!tile) {\n        return NULL_TILE\n      }\n\n      if (effect) {\n        if (tile.creature) {\n          let dTile = this.creatureTile(tile.creature).clone()\n          dTile.setBackground(200, 0, 0)\n          return dTile\n        } else {\n          return new DisplayTile(effect, 200, 200, 0)\n        }\n      }\n\n      if (tile.creature) {\n        return this.creatureTile(tile.creature)\n      }\n\n      if (tile.items) {\n        switch (tile.items.bunch.length) {\n        case 0:\n          break;\n        case 1:\n          return displayItem(tile.items.bunch[0].item)\n        default:\n          const frame = this.step % (this.animationFps * 3 + 4)\n          if (frame < nextItemAnimation.length) {\n            return nextItemAnimation[frame]\n          } else {\n            const itemId = Math.floor(this.step / (this.animationFps * 3 + 4))\n\n            return displayItem(tile.items.bunch[itemId % tile.items.bunch.length].item)\n          }\n        }\n      }\n\n      return displayTile(tile)\n    },\n    creatureTile(creature: Creature) {\n      if (creature.name == 'Rat') {\n        return RAT\n      }\n\n      if (creature.name == 'Golem') {\n        return GOLEM\n      }\n\n      return HUMAN\n    },\n    initViewport() {\n      this.term = new Viewport(\n        this.$refs.scene,\n        Math.max(this.level.width, 40),\n        Math.max(this.level.height, 40),\n        webGLRenderer,\n        true,\n      )\n\n      this.eng = new Engine(\n        this.term,\n        (x: number, y: number) => this.getTile(x, y),\n        this.level.width,\n        this.level.height,\n      )\n\n      this.eng.setMaskFunc((x, y) => {\n        return this.wholeMap || this.stage.at(x, y).seen\n      });\n\n      this.eng.setShaderFunc((tile, x, y, time) => {\n        return this.lighting(tile, x, y, time)\n      })\n\n      clearInterval(this.drawInterval)\n      this.drawInterval = setInterval(() => { this.drawScene() }, this.interval)\n    },\n    drawScene() {\n      const ts = Date.now()\n      if (this.ts + 1000 < ts) {\n        this.ts = ts\n      }\n\n      this.eng.update(this.pos.x, this.pos.y);\n      // this.eng.update(this.term.cx, this.term.cy);\n      this.term.render();\n\n      this.step += 1\n    },\n    lighting(tile, x, y, time) {\n      if (this.wholeMap) {\n        return tile.lighted(1)\n      }\n      const fovTile = this.stage.at(x, y)\n\n      if (fovTile.visible && tile.lighted) {\n        return tile.lighted(fovTile.degree)\n      }\n\n      return tile\n    },\n  },\n  computed: {\n    stage() {\n      return this.wholeMap ? this.level : this.player.stageMemory(this.level)\n    },\n    animationFps(): number {\n      return 1000 / this.interval\n    }\n  },\n  mounted() {\n    this.initViewport()\n  },\n  beforeDestroy() {\n    clearInterval(this.drawInterval)\n  },\n  watch: {\n    interval() {\n      this.initViewport()\n    },\n    level() {\n      clearInterval(this.drawInterval)\n      this.initViewport()\n    }\n  }\n})\n","import mod from \"-!../node_modules/ts-loader/index.js??ref--14-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scene.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/ts-loader/index.js??ref--14-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scene.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Scene.vue?vue&type=template&id=0e91ae7c&lang=pug&\"\nimport script from \"./Scene.vue?vue&type=script&lang=ts&\"\nexport * from \"./Scene.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Scene.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Scene.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"scene\",staticClass:\"unicodetiles\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue,{ Component } from 'vue'\n\nimport ChooseRacePage from './Menu/ChooseRaceMenu.vue'\nimport ChooseGenderPage from './Menu/ChooseGenderMenu.vue'\nimport MainMenuPage from './Menu/MainMenu.vue'\nimport AttributesPage from './Menu/AttributesMenu.vue'\nimport AttributesSelectionPage from './Menu/AttributesSelectionMenu.vue'\n\nimport {\n  Application,\n  Point,\n  TitleGame,\n  Gender,\n  Race,\n  humanRace,\n  MainMenu,\n  MenuComponent\n} from '../src/onisun'\n\nimport Scene from './Scene.vue'\n\nconst LOOP_INTERVAL = 100\n\nexport default Vue.extend({\n  name: 'Title',\n  data() {\n    const app = new Application()\n    return {\n      app: app,\n      game: app.titleGame() as TitleGame,\n      loopIntervalId: undefined as number | undefined\n    }\n  },\n  computed: {\n    menuPage(): Component {\n      switch (this.app.menu.component) {\n        case MenuComponent.MainMenu:\n          return MainMenuPage\n        case MenuComponent.ChooseGenderMenu:\n          return ChooseGenderPage\n        case MenuComponent.ChooseRaceMenu:\n          return ChooseRacePage\n        case MenuComponent.AttributesMenu:\n          return AttributesPage\n        case MenuComponent.AttributesSelectionMenu:\n          return AttributesSelectionPage\n      }\n    },\n    pos(): Point | undefined {\n      if (this.game.currentMap) {\n        return new Point(\n          Math.round(this.game.currentMap.width * 0.5),\n          Math.round(this.game.currentMap.height * 0.4)\n        )\n      }\n    },\n    race(): Race {\n      return humanRace\n    }\n  },\n  components: {\n    Scene\n  },\n  methods: {\n    loop() {\n      if (this.game) {\n        this.game.turn()\n\n        if (this.game.done) {\n          this.game = this.app.titleGame()\n        }\n      }\n    },\n    onEvent(event: KeyboardEvent) {\n      this.$refs.menuComponent.onEvent(event)\n    }\n  },\n  created() {\n    this.loopIntervalId = window.setInterval(this.loop, LOOP_INTERVAL)\n    document.addEventListener('keydown', this.onEvent)\n  },\n  beforeDestroy() {\n    clearInterval(this.loopIntervalId)\n    document.removeEventListener('keydown', this.onEvent)\n  }\n})\n","import mod from \"-!../node_modules/ts-loader/index.js??ref--14-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Title.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/ts-loader/index.js??ref--14-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Title.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Title.vue?vue&type=template&id=7e74e072&lang=pug&\"\nimport script from \"./Title.vue?vue&type=script&lang=ts&\"\nexport * from \"./Title.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Title.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Title.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[(_vm.game)?_c('Scene',{attrs:{\"level\":_vm.game.currentMap,\"player\":_vm.game.player,\"pos\":_vm.pos}}):_vm._e(),_c('div',{staticClass:\"title-view screen-modal\"},[_c('pre',{staticClass:\"title\"},[_vm._v(\" ██████╗ ███╗   ██╗██╗███████╗██╗   ██╗███╗   ██╗\\n██╔═══██╗████╗  ██║██║██╔════╝██║   ██║████╗  ██║\\n██║   ██║██╔██╗ ██║██║███████╗██║   ██║██╔██╗ ██║\\n██║   ██║██║╚██╗██║██║╚════██║██║   ██║██║╚██╗██║\\n╚██████╔╝██║ ╚████║██║███████║╚██████╔╝██║ ╚████║\\n ╚═════╝ ╚═╝  ╚═══╝╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═══╝\")]),_c(_vm.menuPage,{ref:\"menuComponent\",tag:\"component\",attrs:{\"menu\":_vm.app.menu}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue'\nimport BootstrapVue from 'bootstrap-vue'\n\nimport Polyglot from 'node-polyglot'\n\nimport './application.scss'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\nimport App from './App.vue'\nimport Title from './Title.vue'\n\nVue.use(BootstrapVue)\n\nfetch('locales/en.json', { cache: 'no-store' }).then((response) => response.json()).then((body) => {\n  const polyglot = new Polyglot({ phrases: body, locale: 'en' })\n\n  Vue.filter('t', (key: string, prefix: string, suffix: string, args: any) => {\n    return polyglot.t(suffix ? `${prefix}.${key}.${suffix}` : `${prefix}.${key}`, args)\n  })\n\n  new Vue({\n    el: '#app',\n    render: h => h(Title)\n  })\n})\n"],"sourceRoot":""}